_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[7],{"+Luo":function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return I})),n.d(e,"i",(function(){return N})),n.d(e,"c",(function(){return S})),n.d(e,"f",(function(){return C})),n.d(e,"e",(function(){return E})),n.d(e,"d",(function(){return R})),n.d(e,"k",(function(){return F})),n.d(e,"g",(function(){return D})),n.d(e,"h",(function(){return _})),n.d(e,"j",(function(){return M})),n.d(e,"b",(function(){return z}));var r=n("+hG3"),a=n("RsxS"),s=n("0wNd"),i=n("Umw7"),o=n("rqsJ"),u=n("yK2v"),c=n("WHR0"),l=n("lIk/"),d=n("BLhf"),h=n("8BGy"),p=n("1VZP"),f=n("PVBm"),m=n("boNM"),b=n("KdhW"),g=n("qA+V"),y=n("Zz2E"),O=n("O/w9"),x=n("Mbu7"),w=n("2/MO"),v=n("ET5l"),j=n("nnua");class I{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[o,u,c,l,d,h,p,g,b,f,y,O,x,w,v,j,m].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t,e={}){const n=t.node,r=[],a=[],s=[],o=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?a.push(t[e.name]):null!=e.input&&0!==e.input.length||s.push(t[e.name]),t),{});let u=[];const c=[];let l={},d={};null!=e&&(l=this.mapSignatureEntries(e.inputs),d=this.mapSignatureEntries(e.outputs));const h=Object.keys(o);h.forEach(t=>{const e=o[t];e.inputNames.forEach(t=>{const[n]=Object(i.b)(t);e.inputs.push(o[n]),o[n].children.push(e)})}),0===Object.keys(d).length?h.forEach(t=>{const e=o[t];0===e.children.length&&c.push(e)}):Object.keys(d).forEach(t=>{const[e]=Object(i.b)(t),n=o[e];null!=n&&(n.signatureKey=d[t],c.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(t=>{const[e]=Object(i.b)(t),n=o[e];n&&(n.signatureKey=l[t],u.push(n))}):u=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));const f={nodes:o,inputs:u,outputs:c,weights:a,placeholders:r,signature:e,functions:p};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=Object(s.a)(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.substr(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=N(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=N(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=_(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=C(t.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=C(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=D(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=D(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=S(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=S(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=z(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=F(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=F(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=M(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=M(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=E(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=E(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=R(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=R(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=A(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=A(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:a,type:r},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));const a=[],s=[];t.signature.inputArg.forEach(t=>{const[e]=Object(i.b)(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:T(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,a.push(n),r[e]=n});Object.keys(r).forEach(t=>{const e=r[t];e.inputNames.forEach(t=>{const[n]=Object(i.b)(t);e.inputs.push(r[n]),r[n].children.push(e)})});const o=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=Object(i.b)(o[t.name]),a=r[e];null!=a&&(a.defaultOutput=n,s.push(a))});const u=this.mapArgsToSignature(t);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:u}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function k(e,n){const a=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const n=Object(r.Ac)().global;if("undefined"!==typeof n.atob)return n.atob(e);if("undefined"!==typeof t)return new t(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return n?a:a.toLowerCase()}function N(t,e,n,r=!1){const a=t[e];return null!=a?k(a.s,r):n}function S(t,e,n){const r=t[e];return r?r.b:n}function C(t,e,n){const r=t[e]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof a?a:parseInt(a,10)}function T(t){switch("string"===typeof t&&(t=a.a[t]),t){case a.a.DT_FLOAT:return"float32";case a.a.DT_INT32:case a.a.DT_INT64:case a.a.DT_INT8:case a.a.DT_UINT8:return"int32";case a.a.DT_BOOL:return"bool";case a.a.DT_DOUBLE:return"float32";case a.a.DT_STRING:return"string";default:return null}}function A(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function E(t,e,n){const r=t[e];return r&&r.type?T(r.type):n}function R(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>T(t)):n}function $(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"===typeof t.size?t.size:parseInt(t.size,10)):[]}function F(t,e,n){const r=t[e];return r&&r.shape?$(r.shape):n}function D(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"===typeof t?t:parseInt(t,10)):n}function _(t,e,n,r=!1){const a=t[e];return a&&a.list&&a.list.s?a.list.s.map(t=>k(t,r)):n}function M(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>$(t)):n}function z(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n("HDXh").Buffer)},"+hG3":function(t,e,n){"use strict";n.d(e,"ob",(function(){return Tt})),n.d(e,"Ob",(function(){return K.a})),n.d(e,"Pb",(function(){return K.b})),n.d(e,"Qd",(function(){return At.a})),n.d(e,"de",(function(){return At.b})),n.d(e,"Tb",(function(){return Et.a})),n.d(e,"Ub",(function(){return Et.b})),n.d(e,"Vb",(function(){return Et.c})),n.d(e,"Wb",(function(){return Et.d})),n.d(e,"Xb",(function(){return Et.e})),n.d(e,"Yb",(function(){return Et.f})),n.d(e,"Zb",(function(){return Et.g})),n.d(e,"cc",(function(){return Et.h})),n.d(e,"dc",(function(){return Et.i})),n.d(e,"ec",(function(){return Et.j})),n.d(e,"gc",(function(){return Et.k})),n.d(e,"hc",(function(){return Et.l})),n.d(e,"ic",(function(){return Et.m})),n.d(e,"jc",(function(){return Et.n})),n.d(e,"kc",(function(){return Et.o})),n.d(e,"lc",(function(){return Et.p})),n.d(e,"mc",(function(){return Et.q})),n.d(e,"nc",(function(){return Et.r})),n.d(e,"oc",(function(){return Et.s})),n.d(e,"pc",(function(){return Et.t})),n.d(e,"qc",(function(){return Et.u})),n.d(e,"rc",(function(){return Et.v})),n.d(e,"sc",(function(){return Et.w})),n.d(e,"tc",(function(){return Et.x})),n.d(e,"wc",(function(){return Et.y})),n.d(e,"yc",(function(){return Et.A})),n.d(e,"Bc",(function(){return Et.B})),n.d(e,"Cc",(function(){return Et.C})),n.d(e,"Dc",(function(){return Et.D})),n.d(e,"Ec",(function(){return Et.E})),n.d(e,"Fc",(function(){return Et.F})),n.d(e,"Gc",(function(){return Et.G})),n.d(e,"Ic",(function(){return Et.I})),n.d(e,"Jc",(function(){return Et.J})),n.d(e,"Kc",(function(){return Et.K})),n.d(e,"Pc",(function(){return Et.M})),n.d(e,"Rc",(function(){return Et.O})),n.d(e,"Sc",(function(){return Et.P})),n.d(e,"Tc",(function(){return Et.Q})),n.d(e,"Uc",(function(){return Et.R})),n.d(e,"Vc",(function(){return Et.S})),n.d(e,"Wc",(function(){return Et.T})),n.d(e,"Xc",(function(){return Et.U})),n.d(e,"Yc",(function(){return Et.V})),n.d(e,"ad",(function(){return Et.W})),n.d(e,"bd",(function(){return Et.X})),n.d(e,"cd",(function(){return Et.Y})),n.d(e,"dd",(function(){return Et.Z})),n.d(e,"ed",(function(){return Et.ab})),n.d(e,"gd",(function(){return Et.bb})),n.d(e,"hd",(function(){return Et.cb})),n.d(e,"id",(function(){return Et.db})),n.d(e,"jd",(function(){return Et.eb})),n.d(e,"kd",(function(){return Et.fb})),n.d(e,"ld",(function(){return Et.gb})),n.d(e,"md",(function(){return Et.hb})),n.d(e,"nd",(function(){return Et.ib})),n.d(e,"od",(function(){return Et.jb})),n.d(e,"pd",(function(){return Et.kb})),n.d(e,"td",(function(){return Et.lb})),n.d(e,"ud",(function(){return Et.mb})),n.d(e,"vd",(function(){return Et.nb})),n.d(e,"wd",(function(){return Et.ob})),n.d(e,"xd",(function(){return Et.pb})),n.d(e,"yd",(function(){return Et.qb})),n.d(e,"Bd",(function(){return Et.rb})),n.d(e,"Cd",(function(){return Et.sb})),n.d(e,"Dd",(function(){return Et.tb})),n.d(e,"Ed",(function(){return Et.ub})),n.d(e,"Fd",(function(){return Et.vb})),n.d(e,"Gd",(function(){return Et.wb})),n.d(e,"Id",(function(){return Et.xb})),n.d(e,"Jd",(function(){return Et.yb})),n.d(e,"Kd",(function(){return Et.zb})),n.d(e,"Ld",(function(){return Et.Ab})),n.d(e,"Md",(function(){return Et.Bb})),n.d(e,"Nd",(function(){return Et.Cb})),n.d(e,"Od",(function(){return Et.Db})),n.d(e,"Pd",(function(){return Et.Eb})),n.d(e,"Rd",(function(){return Et.Fb})),n.d(e,"Sd",(function(){return Et.Gb})),n.d(e,"Td",(function(){return Et.Hb})),n.d(e,"Ud",(function(){return Et.Ib})),n.d(e,"Vd",(function(){return Et.Jb})),n.d(e,"Yd",(function(){return Et.Kb})),n.d(e,"be",(function(){return Et.Mb})),n.d(e,"ce",(function(){return Et.Nb})),n.d(e,"fe",(function(){return Et.Ob})),n.d(e,"ie",(function(){return Et.Pb})),n.d(e,"je",(function(){return Et.Qb})),n.d(e,"ke",(function(){return Et.Rb})),n.d(e,"ae",(function(){return Et.Lb})),n.d(e,"xc",(function(){return Et.z})),n.d(e,"Lc",(function(){return Et.L})),n.d(e,"Qc",(function(){return Et.N})),n.d(e,"Hc",(function(){return Et.H})),n.d(e,"Zd",(function(){return Jt})),n.d(e,"zc",(function(){return Nt.d})),n.d(e,"Zc",(function(){return Nt.f})),n.d(e,"Xd",(function(){return Nt.j})),n.d(e,"vc",(function(){return Nt.c})),n.d(e,"Nc",(function(){return Nt.e})),n.d(e,"Ad",(function(){return Nt.i})),n.d(e,"qd",(function(){return Nt.g})),n.d(e,"rd",(function(){return Nt.h})),n.d(e,"ac",(function(){return Nt.a})),n.d(e,"sd",(function(){return ht.e})),n.d(e,"ge",(function(){return St.b})),n.d(e,"Ac",(function(){return c.b})),n.d(e,"he",(function(){return kt})),n.d(e,"fd",(function(){return Qt})),n.d(e,"fc",(function(){return a})),n.d(e,"Mc",(function(){return r})),n.d(e,"zd",(function(){return s})),n.d(e,"ee",(function(){return It})),n.d(e,"bc",(function(){return i})),n.d(e,"Wd",(function(){return jt})),n.d(e,"Hd",(function(){return Ot})),n.d(e,"uc",(function(){return Le})),n.d(e,"Oc",(function(){return o})),n.d(e,"Z",(function(){return Ge.b})),n.d(e,"z",(function(){return Ge.a})),n.d(e,"a",(function(){return dt.a})),n.d(e,"b",(function(){return dt.b})),n.d(e,"c",(function(){return dt.c})),n.d(e,"d",(function(){return dt.d})),n.d(e,"e",(function(){return dt.j})),n.d(e,"f",(function(){return dt.k})),n.d(e,"g",(function(){return dt.l})),n.d(e,"i",(function(){return dt.n})),n.d(e,"h",(function(){return dt.m})),n.d(e,"j",(function(){return dt.o})),n.d(e,"k",(function(){return dt.r})),n.d(e,"l",(function(){return dt.s})),n.d(e,"m",(function(){return dt.v})),n.d(e,"n",(function(){return dt.w})),n.d(e,"o",(function(){return dt.x})),n.d(e,"p",(function(){return dt.y})),n.d(e,"q",(function(){return dt.z})),n.d(e,"r",(function(){return dt.A})),n.d(e,"s",(function(){return dt.B})),n.d(e,"t",(function(){return dt.C})),n.d(e,"u",(function(){return dt.D})),n.d(e,"v",(function(){return dt.E})),n.d(e,"w",(function(){return dt.F})),n.d(e,"x",(function(){return dt.G})),n.d(e,"y",(function(){return dt.H})),n.d(e,"A",(function(){return dt.L})),n.d(e,"B",(function(){return dt.M})),n.d(e,"C",(function(){return dt.N})),n.d(e,"D",(function(){return dt.O})),n.d(e,"F",(function(){return dt.Q})),n.d(e,"E",(function(){return dt.P})),n.d(e,"G",(function(){return dt.R})),n.d(e,"H",(function(){return dt.S})),n.d(e,"I",(function(){return dt.V})),n.d(e,"J",(function(){return dt.W})),n.d(e,"K",(function(){return dt.X})),n.d(e,"L",(function(){return dt.Y})),n.d(e,"M",(function(){return dt.Z})),n.d(e,"N",(function(){return dt.ab})),n.d(e,"O",(function(){return dt.bb})),n.d(e,"Q",(function(){return dt.eb})),n.d(e,"U",(function(){return dt.mb})),n.d(e,"T",(function(){return dt.lb})),n.d(e,"V",(function(){return dt.nb})),n.d(e,"W",(function(){return dt.ob})),n.d(e,"X",(function(){return dt.pb})),n.d(e,"Y",(function(){return dt.qb})),n.d(e,"ab",(function(){return dt.wb})),n.d(e,"bb",(function(){return dt.xb})),n.d(e,"cb",(function(){return dt.Ab})),n.d(e,"db",(function(){return dt.Cb})),n.d(e,"eb",(function(){return dt.Db})),n.d(e,"fb",(function(){return dt.Gb})),n.d(e,"gb",(function(){return dt.Hb})),n.d(e,"hb",(function(){return dt.Jb})),n.d(e,"ib",(function(){return dt.Mb})),n.d(e,"jb",(function(){return dt.Ob})),n.d(e,"nb",(function(){return dt.Tb})),n.d(e,"kb",(function(){return dt.Qb})),n.d(e,"lb",(function(){return dt.Rb})),n.d(e,"mb",(function(){return dt.Sb})),n.d(e,"pb",(function(){return dt.Wb})),n.d(e,"qb",(function(){return dt.Yb})),n.d(e,"rb",(function(){return dt.bc})),n.d(e,"sb",(function(){return dt.cc})),n.d(e,"tb",(function(){return dt.dc})),n.d(e,"vb",(function(){return dt.fc})),n.d(e,"ub",(function(){return dt.ec})),n.d(e,"xb",(function(){return dt.mc})),n.d(e,"yb",(function(){return dt.nc})),n.d(e,"zb",(function(){return dt.qc})),n.d(e,"Eb",(function(){return dt.vc})),n.d(e,"Cb",(function(){return dt.tc})),n.d(e,"Db",(function(){return dt.uc})),n.d(e,"Bb",(function(){return dt.sc})),n.d(e,"Ab",(function(){return dt.rc})),n.d(e,"Fb",(function(){return dt.xc})),n.d(e,"Hb",(function(){return dt.Bc})),n.d(e,"Gb",(function(){return dt.yc})),n.d(e,"Jb",(function(){return dt.Dc})),n.d(e,"Ib",(function(){return dt.Cc})),n.d(e,"Lb",(function(){return dt.Gc})),n.d(e,"Mb",(function(){return dt.Ic})),n.d(e,"Nb",(function(){return dt.Jc})),n.d(e,"Qb",(function(){return dt.Mc})),n.d(e,"Rb",(function(){return dt.Nc})),n.d(e,"Kb",(function(){return dt.Ec})),n.d(e,"P",(function(){return dt.db})),n.d(e,"wb",(function(){return dt.lc})),n.d(e,"Sb",(function(){return dt.Rc})),n.d(e,"R",(function(){return dt.fb})),n.d(e,"S",(function(){return dt.gb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return z})),n.d(r,"listModels",(function(){return _})),n.d(r,"moveModel",(function(){return L})),n.d(r,"removeModel",(function(){return M})),n.d(r,"browserFiles",(function(){return Y})),n.d(r,"browserHTTPRequest",(function(){return it})),n.d(r,"concatenateArrayBuffers",(function(){return l.d})),n.d(r,"decodeWeights",(function(){return l.e})),n.d(r,"encodeWeights",(function(){return l.f})),n.d(r,"fromMemory",(function(){return ct})),n.d(r,"getLoadHandlers",(function(){return m})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return l.g})),n.d(r,"getSaveHandlers",(function(){return f})),n.d(r,"http",(function(){return st})),n.d(r,"isHTTPScheme",(function(){return rt})),n.d(r,"loadWeights",(function(){return tt})),n.d(r,"registerLoadRouter",(function(){return p})),n.d(r,"registerSaveRouter",(function(){return h})),n.d(r,"weightsLoaderFactory",(function(){return et})),n.d(r,"withSaveHandler",(function(){return lt}));var a={};n.r(a),n.d(a,"toPixels",(function(){return gt})),n.d(a,"fromPixels",(function(){return yt}));var s={};n.r(s),n.d(s,"Serializable",(function(){return xt})),n.d(s,"SerializationMap",(function(){return wt})),n.d(s,"registerClass",(function(){return vt}));var i={};n.r(i),n.d(i,"axesAreInnerMostDims",(function(){return ne.b})),n.d(i,"combineLocations",(function(){return ne.c})),n.d(i,"computeOutAndReduceShapes",(function(){return ne.d})),n.d(i,"expandShapeToKeepDim",(function(){return ne.e})),n.d(i,"assertAxesAreInnerMostDims",(function(){return ne.a})),n.d(i,"getAxesPermutation",(function(){return ne.f})),n.d(i,"getUndoAxesPermutation",(function(){return ne.h})),n.d(i,"getInnerMostAxes",(function(){return ne.g})),n.d(i,"getBroadcastDims",(function(){return re.b})),n.d(i,"getReductionAxes",(function(){return re.c})),n.d(i,"assertAndGetBroadcastShape",(function(){return re.a})),n.d(i,"assertParamsConsistent",(function(){return ae.a})),n.d(i,"computeOutShape",(function(){return ae.b})),n.d(i,"computeDilation2DInfo",(function(){return se.d})),n.d(i,"computePool2DInfo",(function(){return se.e})),n.d(i,"computePool3DInfo",(function(){return se.f})),n.d(i,"computeConv2DInfo",(function(){return se.a})),n.d(i,"computeConv3DInfo",(function(){return se.b})),n.d(i,"computeDefaultPad",(function(){return se.c})),n.d(i,"tupleValuesAreOne",(function(){return se.i})),n.d(i,"eitherStridesOrDilationsAreOne",(function(){return se.h})),n.d(i,"convertConv2DDataFormat",(function(){return se.g})),n.d(i,"getFusedDyActivation",(function(){return ie.c})),n.d(i,"getFusedBiasGradient",(function(){return ie.b})),n.d(i,"applyActivation",(function(){return ie.a})),n.d(i,"shouldFuse",(function(){return ie.d})),n.d(i,"PARALLELIZE_THRESHOLD",(function(){return oe.a})),n.d(i,"computeOptimalWindowSize",(function(){return oe.b})),n.d(i,"slice_util",(function(){return Ot})),n.d(i,"upcastType",(function(){return At.b})),n.d(i,"getImageCenter",(function(){return ue})),n.d(i,"getReshaped",(function(){return ce})),n.d(i,"getPermuted",(function(){return le})),n.d(i,"getReshapedPermuted",(function(){return de})),n.d(i,"getSliceBeginCoords",(function(){return he})),n.d(i,"getSliceSize",(function(){return pe})),n.d(i,"prepareAndValidate",(function(){return fe})),n.d(i,"validateUpdateShape",(function(){return me.c})),n.d(i,"validateInput",(function(){return me.b})),n.d(i,"calculateShapes",(function(){return me.a})),n.d(i,"SELU_SCALEALPHA",(function(){return be})),n.d(i,"SELU_SCALE",(function(){return ge})),n.d(i,"ERF_P",(function(){return ye})),n.d(i,"ERF_A1",(function(){return Oe})),n.d(i,"ERF_A2",(function(){return xe})),n.d(i,"ERF_A3",(function(){return we})),n.d(i,"ERF_A4",(function(){return ve})),n.d(i,"ERF_A5",(function(){return je})),n.d(i,"warn",(function(){return Ie})),n.d(i,"log",(function(){return ke})),n.d(i,"mergeRealAndImagArrays",(function(){return Ne})),n.d(i,"splitRealAndImagArrays",(function(){return Se})),n.d(i,"complexWithEvenIndex",(function(){return Ce})),n.d(i,"complexWithOddIndex",(function(){return Te})),n.d(i,"getComplexWithIndex",(function(){return Ae})),n.d(i,"assignToTypedArray",(function(){return Ee})),n.d(i,"exponents",(function(){return Re})),n.d(i,"exponent",(function(){return $e})),n.d(i,"prepareSplitSize",(function(){return Fe.a})),n.d(i,"segment_util",(function(){return De})),n.d(i,"castTensor",(function(){return _e})),n.d(i,"reshapeTensor",(function(){return Me})),n.d(i,"linspaceImpl",(function(){return ze}));var o={};n.r(o),n.d(o,"nonMaxSuppressionV3Impl",(function(){return Be.a})),n.d(o,"nonMaxSuppressionV4Impl",(function(){return Be.b})),n.d(o,"nonMaxSuppressionV5Impl",(function(){return Be.c})),n.d(o,"split",(function(){return Ve})),n.d(o,"tile",(function(){return We})),n.d(o,"topkImpl",(function(){return Ke})),n.d(o,"whereImpl",(function(){return He.a}));var u=n("auKK"),c=(n("Kajj"),n("szMd")),l=n("NQ+5");class d{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==d.instance&&(d.instance=new d),d.instance}static registerSaveRouter(t){d.getInstance().saveRouters.push(t)}static registerLoadRouter(t){d.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return d.getHandlers(t,"save")}static getLoadHandlers(t,e){return d.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?d.getInstance().loadRouters:d.getInstance().saveRouters).forEach(e=>{const a=e(t,n);null!==a&&r.push(a)}),r}}const h=t=>d.registerSaveRouter(t),p=t=>d.registerLoadRouter(t),f=t=>d.getSaveHandlers(t),m=(t,e)=>d.getLoadHandlers(t,e);function b(){if(!Object(c.b)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function g(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}class y{constructor(t){if(this.indexedDB=b(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>g(r),r.onsuccess=()=>{const a=r.result;if(null==e){const e=a.transaction("models_store","readonly"),r=e.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(a.close(),n(r.error)),e.oncomplete=()=>a.close()}else{const r=Object(l.g)(e),s=a.transaction("model_info_store","readwrite");let i=s.objectStore("model_info_store");const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction("models_store","readwrite");const o=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{i=s.objectStore("model_info_store");const e=i.delete(this.modelPath);e.onsuccess=()=>(a.close(),n(o.error)),e.onerror=t=>(a.close(),n(o.error))}},o.onerror=t=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=t=>n(r.error)})}}y.URL_SCHEME="indexeddb://";const O=t=>{return Object(c.b)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(y.URL_SCHEME)?(e=t.slice(y.URL_SCHEME.length),new y(e)):null;var e};d.registerSaveRouter(O),d.registerLoadRouter(O);class x{constructor(){this.indexedDB=b()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>g(n),n.onsuccess=()=>{const r=n.result,a=r.transaction("model_info_store","readonly"),s=a.objectStore("model_info_store").getAll();s.onsuccess=()=>{const e={};for(const t of s.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},s.onerror=t=>(r.close(),e(s.error)),a.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){var e;return t=(e=t).startsWith(y.URL_SCHEME)?e.slice(y.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>g(r),r.onsuccess=()=>{const a=r.result,s=a.transaction("model_info_store","readwrite"),i=s.objectStore("model_info_store"),o=i.get(t);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=i.delete(t),s=()=>{u=a.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=s,r.onerror=t=>(s(),a.close(),n(o.error))}},o.onerror=t=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=t=>n(r.error)})}}var w=n("atXS");const v="tensorflowjs_models",j="info",I="model_topology",k="weight_specs",N="weight_data",S="model_metadata";function C(t){return{info:[v,t,j].join("/"),topology:[v,t,I].join("/"),weightSpecs:[v,t,k].join("/"),weightData:[v,t,N].join("/"),modelMetadata:[v,t,S].join("/")}}function T(t){const e=t.split("/");if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join("/")}class A{constructor(t){if(!Object(c.b)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=C(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),a=Object(l.g)(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(l.a)(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:a}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const t=JSON.parse(a);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=Object(l.b)(s),e}}A.URL_SCHEME="localstorage://";const E=t=>{return Object(c.b)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(A.URL_SCHEME)?(e=t.slice(A.URL_SCHEME.length),new A(e)):null;var e};d.registerSaveRouter(E),d.registerLoadRouter(E);class R{constructor(){Object(w.b)(Object(c.b)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(w.b)("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=v+"/",n="/"+j;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(e)&&a.endsWith(n)){t[T(a)]=JSON.parse(this.LS.getItem(a))}}return t}async removeModel(t){var e;const n=C(t=(e=t).startsWith(A.URL_SCHEME)?e.slice(A.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class ${constructor(){this.managers={}}static getInstance(){return null==$.instance&&($.instance=new $),$.instance}static registerManager(t,e){Object(w.b)(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Object(w.b)(t.length>0,()=>"scheme must not be an empty string.");const n=$.getInstance();Object(w.b)(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function F(t){if(-1===t.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+$.getSchemes().join(","));return{scheme:t.split("://")[0],path:t.split("://")[1]}}async function D(t,e,n=!1){Object(w.b)(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=d.getLoadHandlers(t);Object(w.b)(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),Object(w.b)(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const a=r[0],s=d.getSaveHandlers(e);Object(w.b)(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),Object(w.b)(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const i=s[0],o=F(t).scheme,u=F(t).path,c=o===F(t).scheme,l=await a.load();n&&c&&await $.getManager(o).removeModel(u);const h=await i.save(l);return n&&!c&&await $.getManager(o).removeModel(u),h.modelArtifactsInfo}async function _(){const t=$.getSchemes(),e={};for(const n of t){const t=await $.getManager(n).listModels();for(const r in t){e[n+"://"+r]=t[r]}}return e}async function M(t){const e=F(t);return $.getManager(e.scheme).removeModel(e.path)}async function z(t,e){return D(t,e,!1)}async function L(t,e){return D(t,e,!0)}class B{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got "+e);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Object(c.b)().get("IS_BROWSER")){Object(c.b)().setPlatform("browser",new B);try{$.registerManager(A.URL_SCHEME,new R)}catch(ei){}try{$.registerManager(y.URL_SCHEME,new x)}catch(ei){}}n("SwXZ");var P=n("BD40"),V=n("3rNm"),W=n("8Km0"),U=n("dWjR"),K=n("NNfn");Object(u.b)();const H={buffer:P.a,cast:V.a,clone:W.a,print:U.a};Object(K.e)(H);function G(t){return new Promise(t=>setTimeout(t)).then(t)}class X{constructor(t){if(!Object(c.b)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(X.URL_SCHEME)&&(t=t.slice(X.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await G(()=>s.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await G(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(l.g)(t)}}}}X.URL_SCHEME="downloads://";class q{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+t);this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error("modelTopology field is missing from file "+t.name));0===e.length&&n({modelTopology:i});const o=s.weightsManifest;if(null==o)return void r(new Error("weightManifest field is missing from file "+t.name));let u;try{u=this.checkManifestAndWeightFiles(o,e)}catch(ei){return void r(ei)}const c=[],d=[],h=[];o.forEach(t=>{t.paths.forEach(t=>{d.push(t),h.push(null)}),c.push(...t.weights)}),o.forEach(t=>{t.paths.forEach(t=>{const e=new FileReader;e.onload=e=>{const r=e.target.result,a=d.indexOf(t);h[a]=r,-1===h.indexOf(null)&&n({modelTopology:i,weightSpecs:c,weightData:Object(l.d)(h),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,userDefinedMetadata:s.userDefinedMetadata})},e.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),e.readAsArrayBuffer(u[t])})})},a.onerror=e=>r(`Failed to read model topology and weights manifest JSON from file '${t.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(t)})}checkManifestAndWeightFiles(t,e){const n=[],r=e.map(t=>Object(l.c)(t.name)),a={};for(const s of t)s.paths.forEach(t=>{const s=Object(l.c)(t);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[t]=e[r.indexOf(s)]});if(n.length!==e.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${e.length}).`);return a}}function Y(t){return new q(t)}function J(t,e,n,r){!function(t){Object(w.b)(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){Object(w.b)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+t),Object(w.b)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+e),Object(w.b)(e>=t,()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction `+e)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(t.map(s=>(s.then(s=>{const i=n+ ++a/t.length*(r-n);return e(i),s}),s)))}d.registerSaveRouter(t=>Object(c.b)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(X.URL_SCHEME)?function(t="model"){return new X(t)}(t.slice(X.URL_SCHEME.length)):null);var Z=n("mEeB");async function Q(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(c.b)().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),a=(null==e.onProgress?await Promise.all(r):await J(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(a):await J(a,e.onProgress,.5,1)}async function tt(t,e="",n,r){return et(t=>Q(t,{requestInit:r}))(t,e,n)}function et(t){return async(e,n="",r)=>{const a=e.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const u="quantization"in t?t.quantization.dtype:t.dtype,c=Z.a[u]*w.N(t.shape),l=()=>{a[e]=!0,null==s[e]&&(s[e]=[]),s[e].push({manifestEntry:t,groupOffset:n,sizeBytes:c})};null!=r?r.forEach((e,n)=>{e===t.name&&(l(),i[n]=!0)}):l(),o.push(t.name),n+=c})}),!i.every(t=>t)){const t=r.filter((t,e)=>!i[e]);throw new Error("Could not find weights in manifest with names: "+t.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".")}const u=a.reduce((t,e,n)=>(e&&t.push(n),t),[]),c=[];u.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;c.push(e)})});const d=await t(c),h={};let p=0;return u.forEach(t=>{const n=e[t].paths.length;let r=0;for(let e=0;e<n;e++)r+=d[p+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(d[p+e]);i.set(t,o),o+=t.byteLength}s[t].forEach(t=>{const e=a.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=Object(l.e)(e,[t.manifestEntry]);for(const r in n)h[r]=n[r]}),p+=n}),h}}class nt{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(w.b)("function"===typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Object(c.b)().platform.fetch,Object(w.b)(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&Object(w.b)(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,e);if(a.ok)return{modelArtifactsInfo:Object(l.g)(t),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code `+t.status+". Please verify this URL points to the model JSON of the model to load.");let e;try{e=await t.json()}catch(h){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,r=e.weightsManifest,a=e.generatedBy,s=e.convertedBy,i=e.format,o=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const t=await this.loadWeights(r);[u,c]=t}const l={modelTopology:n,weightSpecs:u,weightData:c,userDefinedMetadata:o,generatedBy:a,convertedBy:s,format:i},d=e.modelInitializer;return d&&(l.modelInitializer=d),l}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),a=n>e?t.substring(n):"";return[r+"/",a]}(e),a=this.weightPathPrefix||n,s=[];for(const c of t)s.push(...c.weights);const i=[],o=[];for(const c of t)for(const t of c.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(a+t+r);this.weightUrlConverter&&i.push(...await Promise.all(o));const u=await Q(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(l.d)(u)]}}function rt(t){return null!=t.match(nt.URL_SCHEME_REGEX)}nt.URL_SCHEME_REGEX=/^https?:\/\//;const at=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>rt(t)):rt(t),n)return st(t,e)}return null};function st(t,e){return new nt(t,e)}function it(t,e){return st(t,e)}d.registerSaveRouter(at),d.registerLoadRouter(at);class ot{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class ut{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function ct(t,e,n,r){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new ot(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ot({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ot({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function lt(t){return new ut(t)}var dt=n("wFtI"),ht=n("c7gn"),pt=n("o/e8"),ft=n("VO80"),mt=n("BbuY");let bt;async function gt(t,e){let n=Object(pt.a)(t,"img","toPixels");if(!(t instanceof K.a)){const t=n;n=Object(V.a)(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let c=0;c<r*a;++c){const t=[0,0,0,255];for(let r=0;r<s;r++){const e=i[c*s+r];if("float32"===n.dtype){if(e<0||e>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${e}.`)}else if("int32"===n.dtype&&(e<0||e>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${e}.`);1===s?(t[0]=e*o,t[1]=e*o,t[2]=e*o):t[r]=e*o}const e=4*c;u[e+0]=Math.round(t[0]),u[e+1]=Math.round(t[1]),u[e+2]=Math.round(t[2]),u[e+3]=Math.round(t[3])}if(null!=e){e.width=a,e.height=r;const t=e.getContext("2d"),n=new ImageData(u,a,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),u}const yt=Object(ft.a)({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)s=!0;else{if(null==t.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+t.constructor.name);i=!0}if(a){const e=2;if(a&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(ht.b)(dt.db,u.a.backendName)){const n={pixels:t},r={numChannels:e};return u.a.runKernel(dt.db,n,r)}const[o,c]=a?[t.videoWidth,t.videoHeight]:[t.width,t.height];let l,d;if(i?l=t.getContext("2d").getImageData(0,0,o,c).data:r||n?l=t.data:(s||a)&&(null==bt&&(bt=document.createElement("canvas").getContext("2d")),bt.canvas.width=o,bt.canvas.height=c,bt.drawImage(t,0,0,o,c),l=bt.getImageData(0,0,o,c).data),4===e)d=new Int32Array(l);else{const t=o*c;d=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)d[n*e+t]=l[4*n+t]}const h=[c,o,e];return Object(mt.a)(d,h,"int32")}});var Ot=n("Xr0w");class xt{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class wt{constructor(){this.classNameMap={}}static getMap(){return null==wt.instance&&(wt.instance=new wt),wt.instance}static register(t){wt.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function vt(t){Object(w.b)(null!=t.className,()=>"Class being registered does not have the static className property defined."),Object(w.b)("string"===typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),Object(w.b)(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),wt.register(t)}var jt=n("dsKV"),It=n("6366");const kt="2.7.0";var Nt=n("wE5H"),St=n("U45G"),Ct=n("AV8V");class Tt extends xt{minimize(t,e=!1,n){const{value:r,grads:a}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:a[t.name]}));this.applyGradients(t)}else this.applyGradients(a);return Object(Nt.c)(a),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Object(St.b)(t,e)}dispose(){null!=this.iterations_&&Object(Nt.c)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(Ct.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Tt,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});var At=n("I79q"),Et=n("EysY"),Rt=n("kRdc"),$t=n("x3y4"),Ft=n("parS"),Dt=n("Fjpt"),_t=n("k7Jv"),Mt=n("oJu+");class zt extends Tt{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=u.a.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=u.a.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:e+"/accum_grad",variable:Object(Nt.j)(()=>Object(Mt.a)(r).variable(false))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:e+"/accum_var",variable:Object(Nt.j)(()=>Object(Mt.a)(r).variable(false))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Object(Nt.j)(()=>{const t=Object(Rt.a)(Object(Ft.a)(s,this.rho),Object(Ft.a)(Object(_t.a)(a),1-this.rho)),e=Object(Ft.a)(Object($t.a)(Object(Dt.a)(Object(Rt.a)(i,this.epsilon)),Object(Dt.a)(Object(Rt.a)(s,this.epsilon))),a),n=Object(Rt.a)(Object(Ft.a)(i,this.rho),Object(Ft.a)(Object(_t.a)(e),1-this.rho));s.assign(t),i.assign(n);const o=Object(Rt.a)(Object(Ft.a)(e,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(Nt.c)(this.accumulatedGrads.map(t=>t.variable)),Object(Nt.c)(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}zt.className="Adadelta",vt(zt);var Lt=n("RrjA");class Bt extends Tt{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=u.a.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:e+"/accumulator",variable:Object(Nt.j)(()=>Object(Lt.a)(r.shape,this.initialAccumulatorValue).variable(t))}}const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=this.accumulatedGrads[n].variable;Object(Nt.j)(()=>{const t=Object(Rt.a)(s,Object(_t.a)(a));s.assign(t);const e=Object(Rt.a)(Object(Ft.a)(Object($t.a)(a,Object(Dt.a)(Object(Rt.a)(t,u.a.backend.epsilon()))),-this.learningRate),r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(Nt.c)(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Bt.className="Adagrad",vt(Bt);var Pt=n("yfHJ"),Vt=n("oAkI");class Wt extends Tt{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(Nt.j)(()=>{this.accBeta1=Object(Ct.a)(e).variable(),this.accBeta2=Object(Ct.a)(n).variable()}),null==r&&(this.epsilon=u.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(Nt.j)(()=>{const n=Object(Vt.a)(1,this.accBeta1),r=Object(Vt.a)(1,this.accBeta2);e.forEach((e,a)=>{const s=u.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:e+"/m",variable:Object(Nt.j)(()=>Object(Mt.a)(s).variable(false))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:e+"/v",variable:Object(Nt.j)(()=>Object(Mt.a)(s).variable(false))});const i=Array.isArray(t)?t[a].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,l=Object(Rt.a)(Object(Ft.a)(o,this.beta1),Object(Ft.a)(i,1-this.beta1)),d=Object(Rt.a)(Object(Ft.a)(c,this.beta2),Object(Ft.a)(Object(_t.a)(i),1-this.beta2)),h=Object($t.a)(l,n),p=Object($t.a)(d,r);o.assign(l),c.assign(d);const f=Object(Rt.a)(Object(Ft.a)(Object($t.a)(h,Object(Rt.a)(Object(Dt.a)(p),this.epsilon)),-this.learningRate),s);s.assign(f)}),this.accBeta1.assign(Object(Ft.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(Ft.a)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(Nt.c)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&Object(Nt.c)(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),Object(Nt.j)(()=>{this.accBeta1.assign(Object(Pt.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(Pt.a)(this.beta2,this.iterations_+1))});const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Wt.className="Adam",vt(Wt);var Ut=n("iuCH"),Kt=n("CfTU");class Ht extends Tt{constructor(t,e,n,r=null,a=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(Nt.j)(()=>{this.iteration=Object(Ct.a)(0).variable(),this.accBeta1=Object(Ct.a)(e).variable()}),null==r&&(this.epsilon=u.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(Nt.j)(()=>{const n=Object(Vt.a)(1,this.accBeta1),r=Object($t.a)(-this.learningRate,Object(Rt.a)(Object(Ft.a)(this.iteration,this.decay),1));e.forEach((e,a)=>{const s=u.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:e+"/m",variable:Object(Mt.a)(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:e+"/v",variable:Object(Mt.a)(s).variable(false)});const i=Array.isArray(t)?t[a].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,l=Object(Rt.a)(Object(Ft.a)(o,this.beta1),Object(Ft.a)(i,1-this.beta1)),d=Object(Ft.a)(c,this.beta2),h=Object(Ut.a)(i),p=Object(Kt.a)(d,h);o.assign(l),c.assign(p);const f=Object(Rt.a)(Object(Ft.a)(Object($t.a)(r,n),Object($t.a)(l,Object(Rt.a)(p,this.epsilon))),s);s.assign(f)}),this.iteration.assign(Object(Rt.a)(this.iteration,1)),this.accBeta1.assign(Object(Ft.a)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(Nt.c)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&Object(Nt.c)(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Ht.className="Adamax",vt(Ht);class Gt extends Tt{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=u.a.registeredVariables[e];Object(Nt.j)(()=>{const t=Object(Rt.a)(Object(Ft.a)(this.c,r),a);a.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Object(Nt.e)(Object(Ct.a)(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Gt.className="SGD",vt(Gt);class Xt extends Gt{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Object(Ct.a)(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=u.a.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:e+"/momentum",variable:Object(Nt.j)(()=>Object(Mt.a)(r).variable(t))}}const a=this.accumulations[n].variable,s=Array.isArray(t)?t[n].tensor:t[e];null!=s&&Object(Nt.j)(()=>{let t;const e=Object(Rt.a)(Object(Ft.a)(this.m,a),s);t=this.useNesterov?Object(Rt.a)(Object(Ft.a)(this.c,Object(Rt.a)(s,Object(Ft.a)(e,this.m))),r):Object(Rt.a)(Object(Ft.a)(this.c,e),r),a.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(Nt.c)(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Xt.className="Momentum",vt(Xt);class qt extends Tt{constructor(t,e=.9,n=0,r=null,a=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=u.a.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=u.a.registeredVariables[e];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:e+"/rms",variable:Object(Nt.j)(()=>Object(Mt.a)(r).variable(false))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:e+"/momentum",variable:Object(Nt.j)(()=>Object(Mt.a)(r).variable(false))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:e+"/mg",variable:Object(Nt.j)(()=>Object(Mt.a)(r).variable(false))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Object(Nt.j)(()=>{const t=Object(Rt.a)(Object(Ft.a)(s,this.decay),Object(Ft.a)(Object(_t.a)(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,o=Object(Rt.a)(Object(Ft.a)(e,this.decay),Object(Ft.a)(a,1-this.decay)),u=Object($t.a)(Object(Ft.a)(a,this.learningRate),Object(Dt.a)(Object(Vt.a)(t,Object(Rt.a)(Object(_t.a)(o),this.epsilon)))),c=Object(Rt.a)(Object(Ft.a)(i,this.momentum),u);s.assign(t),e.assign(o),i.assign(c);const l=Object(Vt.a)(r,c);r.assign(l)}else{const t=Object(Rt.a)(Object(Ft.a)(s,this.decay),Object(Ft.a)(Object(_t.a)(a),1-this.decay)),e=Object(Rt.a)(Object(Ft.a)(i,this.momentum),Object($t.a)(Object(Ft.a)(a,this.learningRate),Object(Dt.a)(Object(Rt.a)(t,this.epsilon))));s.assign(t),i.assign(e);const n=Object(Vt.a)(r,e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(Nt.c)(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(Nt.c)(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&Object(Nt.c)(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}qt.className="RMSProp",vt(qt);class Yt{static sgd(t){return new Gt(t)}static momentum(t,e,n=!1){return new Xt(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,a=!1){return new qt(t,e,n,r,a)}static adam(t=.001,e=.9,n=.999,r=null){return new Wt(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new zt(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,a=0){return new Ht(t,e,n,r,a)}static adagrad(t,e=.1){return new Bt(t,e)}}const Jt={sgd:Yt.sgd,momentum:Yt.momentum,adadelta:Yt.adadelta,adagrad:Yt.adagrad,rmsprop:Yt.rmsprop,adamax:Yt.adamax,adam:Yt.adam},Zt="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:t=>t();function Qt(){return new Promise(t=>Zt(()=>t()))}var te=n("lg8H"),ee=n("Wiw4"),ne=n("NuWS"),re=n("Um8L"),ae=n("87nf"),se=n("uBja"),ie=n("R0ls"),oe=n("9jvw");function ue(t,e,n){return[n*("number"===typeof t?t:t[0]),e*("number"===typeof t?t:t[1])]}function ce(t,e,n,r=!0){let a=[];if(r)a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)a=a.concat([t[r+1]/e[r],e[r]]);a=a.concat(t.slice(n+1))}return a}function le(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<t;++r)r>=2*e+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function de(t,e,n,r=!0){const a=[];r?a.push(t[0]/n):a.push(t[0]*n);for(let s=1;s<t.length;++s)s<=e.length?r?a.push(e[s-1]*t[s]):a.push(t[s]/e[s-1]):a.push(t[s]);return a}function he(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function pe(t,e,n){const r=t.slice(0,1);for(let a=0;a<n;++a)r.push(t[a+1]-e[a][0]-e[a][1]);return r}function fe(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let a=1;for(let c=0;c<n.length-1;++c)a*=n[c];const s=t.shape,i=n.slice();i.pop();let o=1;for(let c=r;c<t.rank;++c)o*=s[c],i.push(s[c]);const u=[...Object(w.j)(t.shape).map(t=>t/o),1].slice(0,r);return[i,a,o,u]}var me=n("o0+U");const be=1.7580993408473768,ge=1.0507009873554805,ye=.3275911,Oe=.254829592,xe=-.284496736,we=1.421413741,ve=-1.453152027,je=1.061405429;function Ie(...t){Object(c.b)().getBool("IS_TEST")||console.warn(...t)}function ke(...t){Object(c.b)().getBool("IS_TEST")||console.log(...t)}function Ne(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Se(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Ce(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=0;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function Te(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=2;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function Ae(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Ee(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function Re(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let a=0;a<Math.ceil(t/2);a++){const s=(e?2:-2)*Math.PI*(a/t);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function $e(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}var Fe=n("QVv9"),De=n("0+74");function _e(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Object(ee.a)(t.shape),r=Object(V.a)(t,"float32"),a=n.complex(r,e);return e.dispose(),r.dispose(),a}if(!Object(w.p)(t.dtype,e))return u.a.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),a=Object(V.a)(r,e);return r.dispose(),a}if("int32"===e)return n.int(t);if("bool"===e){const e=Object(Ct.a)(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function Me(t,e){return u.a.makeTensorFromDataId(t.dataId,e,t.dtype)}function ze(t,e,n){const r=(e-t)/(n-1),a=Object(w.F)(n,"float32");a[0]=t;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return Object(te.a)(a,"float32")}var Le=n("ftYm"),Be=n("g4m1"),Pe=n("bTzI");function Ve(t,e,n){const r=new Array(t.rank).fill(0),a=t.shape.slice();return e.map(e=>{const s=[...a];s[n]=e;const i=Object(Pe.a)(t,r,s);return r[n]+=e,i})}function We(t,e){const n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=t.shape[a]*e[a];const r=Object(P.a)(n,t.dtype);for(let a=0;a<r.values.length;++a){const e=r.indexToLoc(a),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const s=t.locToIndex(n);r.values[a]=t.values[s]}return r.toTensor()}var Ue=n("NX3e");function Ke(t,e,n,r,a){const s=e[e.length-1],[i,o]=[t.length/s,s],u=Object(w.o)(n,i*r),c=Object(w.o)("int32",i*r);for(let d=0;d<i;d++){const e=d*o,n=t.subarray(e,e+o),a=[];for(let t=0;t<n.length;t++)a.push({value:n[t],index:t});a.sort((t,e)=>e.value-t.value);const s=d*r,i=u.subarray(s,s+r),l=c.subarray(s,s+r);for(let t=0;t<r;t++)i[t]=a[t].value,l[t]=a[t].index}const l=e.slice();return l[l.length-1]=r,[Object(Ue.a)(u,l,n),Object(Ue.a)(c,l,"int32")]}var He=n("AoCb"),Ge=n("i4e/"),Xe=n("L7Hl");const qe={kernelName:dt.a,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ft.a)(t,Object(Xe.a)(Object(V.a)(n,"float32"),-1))}}};var Ye=n("O7f5");const Je={kernelName:dt.b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(_t.a)(Object(V.a)(n,"float32")),r=Object(Dt.a)(Object(Vt.a)(Object(Ct.a)(1),e));return Object(Ye.a)(Object($t.a)(t,r))}}}},Ze={kernelName:dt.c,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Dt.a)(Object(Vt.a)(Object(_t.a)(Object(V.a)(n,"float32")),1));return Object($t.a)(t,e)}}}};var Qe=n("NclT"),tn=n("4FMF");const en={kernelName:dt.d,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=re.a(n.shape,r.shape);return{a:()=>{let e=t;const r=re.c(n.shape,a);return r.length>0&&(e=Object(tn.a)(e,r)),Object(Qe.a)(e,n.shape)},b:()=>{let e=t;const n=re.c(r.shape,a);return n.length>0&&(e=Object(tn.a)(e,n)),Object(Qe.a)(e,r.shape)}}}},nn={kernelName:dt.e,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}},rn={kernelName:dt.h,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Mt.a)(n)}}},an={kernelName:dt.i,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Mt.a)(n)}}},sn={kernelName:dt.j,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object($t.a)(t,Object(Dt.a)(Object(Vt.a)(Object(Ct.a)(1),Object(_t.a)(Object(V.a)(n,"float32")))))}}},on={kernelName:dt.k,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Dt.a)(Object(Rt.a)(Object(Ct.a)(1),Object(_t.a)(Object(V.a)(n,"float32"))));return Object($t.a)(t,e)}}}},un={kernelName:dt.m,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(re.a)(n.shape,r.shape);return{a:()=>{const e=Object(Rt.a)(Object(_t.a)(n),Object(_t.a)(r));let s=Object(Ft.a)(t,Object($t.a)(r,e));const i=Object(re.c)(n.shape,a);return i.length>0&&(s=Object(tn.a)(s,i)),Object(Qe.a)(s,n.shape)},b:()=>{const e=Object(Rt.a)(Object(_t.a)(n),Object(_t.a)(r));let s=Object(Ye.a)(Object(Ft.a)(t,Object($t.a)(n,e)));const i=Object(re.c)(r.shape,a);return i.length>0&&(s=Object(tn.a)(s,i)),Object(Qe.a)(s,r.shape)}}}},cn={kernelName:dt.l,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object($t.a)(t,Object(Rt.a)(Object(_t.a)(Object(V.a)(n,"float32")),1))}}},ln={kernelName:dt.n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object($t.a)(t,Object(Vt.a)(Object(Ct.a)(1),Object(_t.a)(Object(V.a)(n,"float32"))))}}};const dn=Object(ft.a)({avgPool3dBackprop_:function(t,e,n,r,a=[1,1,1],s,i){const o=Object(pt.a)(t,"dy","avgPool3dBackprop"),c=Object(pt.a)(e,"input","avgPool3dBackprop");let l=o,d=c,h=!1;4===c.rank&&(h=!0,l=Object(Qe.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=Object(Qe.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),w.b(5===l.rank,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+"."),w.b(5===d.rank,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+d.rank+"."),w.b(se.h(r,a),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`),null!=i&&w.b(w.v(s),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const p={dy:l,input:d},f={filterSize:n,strides:r,dilations:a,pad:s,dimRoundingMode:i},m=u.a.runKernelFunc(t=>{const e=se.f(d.shape,n,r,a,s,i);return t.avgPool3dBackprop(l,d,e)},p,null,dt.q,f);return h?Object(Qe.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),hn={kernelName:dt.p,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:s,dilations:i,pad:o,dimRoundingMode:u}=n,c=null==i?[1,1,1]:i;return{x:()=>dn(t,r,a,s,c,o,u)}}};const pn=Object(ft.a)({avgPoolBackprop_:function(t,e,n,r,a){const s=Object(pt.a)(t,"dy","avgPoolBackprop"),i=Object(pt.a)(e,"input","avgPoolBackprop");w.b(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,c=s,l=!1;3===i.rank&&(l=!0,o=Object(Qe.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=Object(Qe.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),w.b(4===c.rank,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+c.rank+"."),w.b(4===o.rank,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+o.rank+".");const d={dy:c,input:o},h={filterSize:n,strides:r,pad:a},p=u.a.runKernelFunc(t=>{const e=se.e(o.shape,n,r,1,a);return t.avgPoolBackprop(c,o,e)},d,null,dt.r,h);return l?Object(Qe.a)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),fn={kernelName:dt.o,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:s,pad:i}=n;return{x:()=>pn(t,r,a,s,i)}}};var mn=n("SHv8");const bn={kernelName:dt.s,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,a]=e,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Object(mn.a)(t,a,!1,!1),b:()=>Object(mn.a)(t,r,!0,!1)}:s&&!i?{a:()=>Object(mn.a)(a,t,!1,!0),b:()=>Object(mn.a)(r,t,!1,!1)}:{a:()=>Object(mn.a)(a,t,!0,!0),b:()=>Object(mn.a)(t,r,!0,!0)}:{a:()=>Object(mn.a)(t,a,!1,!0),b:()=>Object(mn.a)(r,t,!0,!1)}}};var gn=n("dYAU");const yn={kernelName:dt.t,gradFunc:(t,e,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(gn.a)(t,r,a)}}},On={kernelName:dt.u,gradFunc:(t,e,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let u=a.length-1;u>=0;u--)if(a[u]===s[u])i[u]=1;else if(1!==a[u])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>Object(tn.a)(t,o,!0)}}},xn={kernelName:dt.v,gradFunc:t=>({x:()=>t.clone()})},wn={kernelName:dt.w,gradFunc:t=>({x:()=>Object(Mt.a)(t)})};var vn=n("uy0A"),jn=n("shz4"),In=n("4zPZ"),kn=n("Z5Ez");const Nn={kernelName:dt.x,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Object(kn.a)(Object(In.a)(Object(vn.a)(r,a),Object(jn.a)(r,s)),t,Object(Mt.a)(t))}}};var Sn=n("RbuM");const Cn={kernelName:dt.z,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:a}=n,s=Object(w.I)(a,e[0].shape)[0],i=r.map(t=>t[s]);return Object(Sn.a)(t,i,s).map(t=>()=>t)}};var Tn=n("D2/b"),An=n("c9N1");const En={kernelName:dt.A,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return w.b(se.i(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Object(An.a)(r.shape,t,a,i,o,u),filter:()=>Object(Tn.a)(r,t,a.shape,i,o,u)}}};var Rn=n("3X4V");const $n={kernelName:dt.C,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Object(Rn.a)(t,a,s,i,o,1,u),filter:()=>Object(Tn.a)(t,r,a.shape,s,i,o,u)}}};const Fn=Object(ft.a)({conv3DBackpropFilter_:function(t,e,n,r,a){let s=t;4===t.rank&&(s=Object(Qe.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=Object(Qe.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),w.b(5===s.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+s.shape+"."),w.b(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."),w.b(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),w.b(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),w.b(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:s,dy:i},c={strides:r,pad:a,filterShape:n};return u.a.runKernelFunc(t=>{const e=se.b(s.shape,n,r,1,a);return t.conv3dDerFilter(s,i,e)},o,null,dt.E,c)}});const Dn=Object(ft.a)({conv3DBackpropInput_:function(t,e,n,r,a){w.b(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let s=t,i=e,o=!1;4===e.rank&&(o=!0,i=Object(Qe.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,t[0],t[1],t[2],t[3]]);const c=s[4],l=i.shape[4];w.b(5===s.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+s.length+"."),w.b(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),w.b(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),w.b(c===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`),w.b(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const d={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},p=u.a.runKernelFunc(t=>{const e=se.b(s,n.shape,r,1,a);return t.conv3dDerInput(i,n,e)},d,null,dt.F,h);return o?Object(Qe.a)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),_n={kernelName:dt.D,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:s}=n;w.b(Object(se.i)(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=e;return{x:()=>Dn(i.shape,t,o,a,s),filter:()=>Fn(i,t,o.shape,a,s)}}};var Mn=n("aTLu");const zn={kernelName:dt.G,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ft.a)(Object(Ye.a)(Object(Mn.a)(Object(V.a)(n,"float32"))),t)}}};var Ln=n("XcSs");const Bn={kernelName:dt.H,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ft.a)(Object(Ln.a)(Object(V.a)(n,"float32")),t)}}};var Pn=n("HmhO"),Vn=n("yRKQ");const Wn={kernelName:dt.J,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const e=Object(ne.f)([a],r.rank);let n=Object(Pn.a)(t,a,s,!i);return null!=e&&(n=Object(Vn.a)(n,e)),n}}}};var Un=n("aSZd"),Kn=n("jLCh");const Hn={kernelName:dt.L,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;w.b(se.i(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,c]=e;return w.b(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),w.b(4===c.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),w.b(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),w.b(se.h(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),null!=i&&w.b(w.v(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),{x:()=>Object(Kn.a)(u.shape,t,c,a,s,r,i),filter:()=>Object(Un.a)(u,t,c.shape,a,s,r,i)}}},Gn={kernelName:dt.O,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,s={x:r,filter:a,dy:t},i={x:r,filter:a,dy:t};return{x:()=>u.a.runKernel(dt.Q,s,n),filter:()=>u.a.runKernel(dt.P,i,n)}}},Xn={kernelName:dt.R,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=re.a(n.shape,r.shape);return{a:()=>{const e=Object($t.a)(t,Object(V.a)(r,"float32")),s=re.c(n.shape,a);return s.length>0?Object(Qe.a)(Object(tn.a)(e,s),n.shape):e},b:()=>{let e=Object(Ft.a)(t,Object(V.a)(n,"float32"));const s=re.c(r.shape,a);s.length>0&&(e=Object(Qe.a)(Object(tn.a)(e,s),r.shape));const i=Object(_t.a)(r);return Object(Ye.a)(Object($t.a)(e,Object(V.a)(i,"float32")))}}}},qn={kernelName:dt.S,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),a={dy:t,y:n};return{x:()=>u.a.runKernelFunc(r,a,null,dt.T)}}};var Yn=n("TyAZ");const Jn={kernelName:dt.V,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(Ft.a)(Object(Yn.a)(Object(Ye.a)(Object(_t.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(Ft.a)(t,r)}}},Zn={kernelName:dt.W,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ft.a)(t,n)}}},Qn={kernelName:dt.X,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ft.a)(t,Object(Yn.a)(n))}}},tr={kernelName:dt.bb,gradFunc:t=>({x:()=>Object(Mt.a)(t)})},er={kernelName:dt.cb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(re.a)(n.shape,r.shape);return{a:()=>{const e=Object($t.a)(t,Object(V.a)(r,"float32")),s=Object(re.c)(n.shape,a);return s.length>0?Object(Qe.a)(Object(tn.a)(e,s),n.shape):e},b:()=>{let e=Object(Ft.a)(t,Object(V.a)(n,"float32"));const s=Object(re.c)(r.shape,a);s.length>0&&(e=Object(Qe.a)(Object(tn.a)(e,s),r.shape));const i=Object(_t.a)(r);return Object(Ye.a)(Object($t.a)(e,Object(V.a)(i,"float32")))}}}};var nr=n("Xyqe"),rr=n("jXH2");const ar={kernelName:dt.eb,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=e,u=null==o?Object(Ct.a)(1):o,c=Object(re.c)(s.shape,a.shape),l=[];if(1===s.rank){for(let t=0;t<a.shape.length-1;++t)l.push(a.shape[t]);l.push(1)}const d=Object(Vt.a)(a,s),h=Object(Ft.a)(t,u),p=Object(nr.a)(Object(Rt.a)(i,Object(Ct.a)(r))),f=Object(Ft.a)(Object(Ft.a)(Object(Ft.a)(p,p),p),Object(Ct.a)(-.5));return{x:()=>1===s.rank?Object(Qe.a)(Object(Ft.a)(Object(Ft.a)(t,Object(rr.a)(Object(Qe.a)(p,[1,1,1,s.shape[0]]),l)),u),a.shape):Object(Qe.a)(Object(Ft.a)(Object(Ft.a)(t,p),u),a.shape),mean:()=>{let t=Object(Ft.a)(Object(Ft.a)(p,Object(Ct.a)(-1)),h);return 1===s.rank&&(t=Object(tn.a)(t,c)),Object(Qe.a)(t,s.shape)},variance:()=>{let t=Object(Ft.a)(Object(Ft.a)(f,d),h);return 1===s.rank&&(t=Object(tn.a)(t,c)),Object(Qe.a)(t,s.shape)},scale:()=>{const e=Object(Ft.a)(d,p);let n=Object(Ft.a)(t,e);return 1===s.rank&&(n=Object(tn.a)(n,c)),Object(Qe.a)(n,s.shape)},offset:()=>{let e=t;return 1===s.rank&&(e=Object(tn.a)(e,c)),Object(Qe.a)(e,s.shape)}}}};var sr=n("U/Lz");const ir={kernelName:dt.ib,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,a]=e,{axis:s}=n,i=Object(w.I)(s,r.shape)[0];return{x:()=>{const e=r.shape,n=a.size,o=e.slice(0,i),u=o.length,c=e.slice(s,e.length).slice(1),l=c.length,d=or(0,u),h=or(u+1,u+1+l),p=ur([o,[n],c]),f=Object(Qe.a)(t,p),m=Object(Qe.a)(a,[n]),b=ur([[u],d,h]),g=Object(Vn.a)(f,b);let y=Object(sr.a)(g,m,r.shape[i]);const O=Object(ne.h)(b);return y=Object(Vn.a)(y,O),y},indices:()=>a}}};function or(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function ur(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const cr={kernelName:dt.kb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(Mt.a)(n),b:()=>Object(Mt.a)(r)}}},lr={kernelName:dt.mb,gradFunc:t=>({x:()=>Object(V.a)(t,"float32")})},dr={kernelName:dt.ob,gradFunc:t=>({x:()=>Object(Mt.a)(t)})},hr={kernelName:dt.pb,gradFunc:t=>({x:()=>Object(Mt.a)(t)})},pr={kernelName:dt.qb,gradFunc:t=>({x:()=>Object(Mt.a)(t)})},fr={kernelName:dt.xb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object($t.a)(t,Object(Rt.a)(n,1))}}},mr={kernelName:dt.wb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object($t.a)(t,Object(V.a)(n,"float32"))}}},br={kernelName:dt.yb,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n;return{logits:()=>{const e=Object(Yn.a)(r);return Object(Vt.a)(t,Object(Ft.a)(Object(tn.a)(t,a,!0),e))}}}};const gr=Object(ft.a)({localResponseNormalizationBackprop_:function(t,e,n,r=5,a=1,s=1,i=.5){const o={x:t,y:e,dy:n},c={depthRadius:r,bias:a,alpha:s,beta:i};return u.a.runKernelFunc(o=>o.LRNGrad(n,t,e,r,a,s,i),o,null,dt.sb,c)}}),yr={kernelName:dt.rb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>gr(r,a,t,s,i,o,u)}}};var Or=n("ubnP");function xr(t,e,n,r){return e.rank<n.rank&&(e=Object(Qe.a)(e,ne.e(e.shape,r))),t.rank<n.rank&&(t=Object(Qe.a)(t,ne.e(t.shape,r))),{x:()=>Object(Ft.a)(t,Object(V.a)(Object(Or.a)(n,e),t.dtype))}}const wr={kernelName:dt.Cb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:a}=r,s=e[0],i=xr(t,e[1],s,w.I(a,s.shape));return{x:()=>i.x()}}};var vr=n("4f3O");const jr={kernelName:dt.Ib,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(Ft.a)(t,Object(V.a)(Object(vn.a)(n,r),"float32")),b:()=>Object(Ft.a)(t,Object(V.a)(Object(vr.a)(n,r),"float32"))}}};const Ir=Object(ft.a)({maxPool3dBackprop_:function(t,e,n,r,a,s=[1,1,1],i,o){const c=Object(pt.a)(t,"dy","maxPool3dBackprop"),l=Object(pt.a)(e,"input","maxPool3dBackprop"),d=Object(pt.a)(n,"output","maxPool3dBackprop");let h=c,p=l,f=d,m=!1;4===l.rank&&(m=!0,h=Object(Qe.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),p=Object(Qe.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),f=Object(Qe.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),w.b(5===h.rank,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+"."),w.b(5===p.rank,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+p.rank+"."),w.b(5===f.rank,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+f.rank+"."),w.b(se.h(a,s),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),null!=o&&w.b(w.v(i),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`);const b={dy:h,input:p,output:f},g={filterSize:r,strides:a,dilations:s,pad:i,dimRoundingMode:o},y=u.a.runKernelFunc(t=>{const e=se.f(p.shape,r,a,s,i,o);return t.maxPool3dBackprop(h,p,f,e)},b,null,dt.Fb,g);return m?Object(Qe.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),kr={kernelName:dt.Eb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:s,strides:i,dilations:o,pad:u,dimRoundingMode:c}=n,l=null==o?[1,1,1]:o;return{x:()=>Ir(t,r,a,s,i,l,u,c)}}};const Nr=Object(ft.a)({maxPoolBackprop_:function(t,e,n,r,a,s,i){const o=Object(pt.a)(t,"dy","maxPoolBackprop"),c=Object(pt.a)(e,"input","maxPoolBackprop"),l=Object(pt.a)(n,"output","maxPoolBackprop");w.b(c.rank===o.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${o.rank})`),w.b(4===o.rank,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+o.rank+"."),w.b(4===c.rank,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+c.rank+"."),null!=i&&w.b(w.v(s),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const d={dy:o,input:c,output:l},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return u.a.runKernelFunc(t=>{const e=se.e(c.shape,r,a,1,s,i);return t.maxPoolBackprop(o,c,l,e)},d,null,dt.Gb,h)}}),Sr={kernelName:dt.Db,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:s,strides:i,pad:o}=n;return{x:()=>Nr(t,r,a,s,i,o)}}},Cr={kernelName:dt.Kb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:a}=r,[s,i]=e,o=xr(t,i,s,w.I(a,s.shape));return{x:()=>o.x()}}};var Tr=n("zvA9");const Ar={kernelName:dt.Lb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(Ft.a)(t,Object(V.a)(Object(jn.a)(n,r),"float32")),b:()=>Object(Ft.a)(t,Object(V.a)(Object(Tr.a)(n,r),"float32"))}}},Er={kernelName:dt.Mb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,s=a.map(t=>t[0]);return{x:()=>Object(Pe.a)(t,s,r.shape)}}};var Rr=n("02mo");const $r={kernelName:dt.Nb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(re.a)(n.shape,r.shape);return{a:()=>{const e=Object(re.c)(n.shape,a);return e.length>0?Object(Qe.a)(Object(tn.a)(t,e),n.shape):t},b:()=>{const e=Object(Ft.a)(t,Object(Ye.a)(Object(Rr.a)(Object($t.a)(n,r)))),s=Object(re.c)(r.shape,a);return s.length>0?Object(Qe.a)(Object(tn.a)(e,s),r.shape):e}}}},Fr={kernelName:dt.Ob,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(re.a)(n.shape,r.shape);return{a:()=>{const e=Object(Ft.a)(t,Object(V.a)(r,"float32")),s=Object(re.c)(n.shape,a);return s.length>0?Object(Qe.a)(Object(tn.a)(e,s),n.shape):e},b:()=>{const e=Object(Ft.a)(t,Object(V.a)(n,"float32")),s=Object(re.c)(r.shape,a);return s.length>0?Object(Qe.a)(Object(tn.a)(e,s),r.shape):e}}}},Dr={kernelName:dt.Pb,gradFunc:t=>({x:()=>Object(Ye.a)(t)})},_r={kernelName:dt.Ub,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Object(ee.a)(n.shape,"float32")}}},Mr={kernelName:dt.Vb,gradFunc:t=>({x:()=>Object(Mt.a)(t)})},zr={kernelName:dt.Wb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,s=a.map(t=>t[0]);return{x:()=>Object(Pe.a)(t,s,r.shape)}}};var Lr=n("E1lT");const Br={kernelName:dt.Xb,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,a]=e,s=n,i=r,o=re.a(s.shape,i.shape);return{a:()=>{const e=Object(V.a)(i,"float32");let n=Object(Ft.a)(t,Object(Ft.a)(e,Object(Pt.a)(s,Object(Vt.a)(e,Object(Ct.a)(1)))));const r=re.c(s.shape,o);return r.length>0&&(n=Object(tn.a)(n,r)),Object(Qe.a)(n,s.shape)},b:()=>{const e=Object(Tr.a)(s,0),n=Object(kn.a)(e,Object(Lr.a)(s),Object(Mt.a)(s));let r=Object(Ft.a)(t,Object(Ft.a)(a,n));const u=re.c(i.shape,o);return u.length>0&&(r=Object(tn.a)(r,u)),Object(Qe.a)(r,i.shape)}}}},Pr={kernelName:dt.Yb,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Tr.a)(n,0);return{x:()=>Object(kn.a)(a,t,Object(Ft.a)(t,r)),alpha:()=>{let e=Object(kn.a)(a,Object(Mt.a)(t),Object(Ft.a)(t,n));const s=Object(re.c)(r.shape,t.shape);return s.length>0&&(e=Object(tn.a)(e,s)),Object(Qe.a)(e,r.shape)}}}},Vr={kernelName:dt.cc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object($t.a)(t,Object(Ye.a)(Object(_t.a)(n)))}}},Wr={kernelName:dt.ec,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(Ft.a)(Object(jn.a)(n,6),Object(Xe.a)(n));return{x:()=>Object(Ft.a)(t,Object(V.a)(r,"float32"))}}},Ur={kernelName:dt.dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ft.a)(t,Object(V.a)(Object(Xe.a)(n),"float32"))}}},Kr={kernelName:dt.fc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Qe.a)(t,n.shape)}}},Hr={kernelName:dt.gc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a=e=>{const{alignCorners:a}=n;return e.resizeBilinearBackprop(t,r,a)},s={images:r};return{images:()=>u.a.runKernelFunc(a,s,null,dt.hc,n)}}},Gr={kernelName:dt.ic,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a=e=>{const{alignCorners:a}=n;return e.resizeNearestNeighborBackprop(t,r,a)},s={images:r};return{images:()=>u.a.runKernelFunc(a,s,null,dt.jc,n)}}};var Xr=n("0I63");const qr={kernelName:dt.kc,gradFunc:(t,e,n)=>{const{dims:r}=n,a=Object(w.I)(r,t.shape);return{x:()=>Object(Xr.a)(t,a)}}},Yr={kernelName:dt.mc,gradFunc:t=>({x:()=>Object(Mt.a)(t)})},Jr={kernelName:dt.nc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ye.a)(Object($t.a)(t,Object(Ft.a)(Object(Pt.a)(n,1.5),2)))}}};var Zr=n("7wDt");const Qr={kernelName:dt.pc,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Object(V.a)(Object(Mt.a)(n),"float32"),t:()=>Object(Ft.a)(t,Object(V.a)(n,t.dtype)),e:()=>Object(Ft.a)(t,Object(V.a)(Object(Zr.a)(n),t.dtype))}}},ta={kernelName:dt.qc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Tr.a)(n,Object(Ct.a)(0)),r=Object(Ct.a)(be),a=Object(Ct.a)(ge),s=Object(Ft.a)(t,a),i=Object(Ft.a)(Object(Ft.a)(t,r),Object(Yn.a)(Object(V.a)(n,"float32")));return Object(kn.a)(e,s,i)}}}},ea={kernelName:dt.rc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ft.a)(t,Object(Ft.a)(n,Object(Vt.a)(Object(Ct.a)(1),n)))}}},na={kernelName:dt.sc,gradFunc:t=>({x:()=>Object(Mt.a)(t)})};var ra=n("7/dO");const aa={kernelName:dt.tc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ft.a)(Object(ra.a)(Object(V.a)(n,"float32")),t)}}};var sa=n("waK1");const ia={kernelName:dt.uc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ft.a)(Object(sa.a)(Object(V.a)(n,"float32")),t)}}};var oa=n("DrVt");const ua={kernelName:dt.vc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:a,size:s}=n,i=r.shape,[o,u]=Object(Ot.parseSliceParams)(r,a,s),c=[];for(let l=0;l<t.rank;l++)c.push([o[l],i[l]-o[l]-u[l]]);return{x:()=>Object(oa.a)(t,c)}}},ca={kernelName:dt.wc,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:a}=n,s=Object(Ft.a)(t,r);return{logits:()=>Object(Vt.a)(s,Object(Ft.a)(Object(tn.a)(s,[a],true),r))}}};var la=n("/7N0");const da={kernelName:dt.xc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ft.a)(t,Object(la.a)(n))}}};var ha=n("OygE");const pa={kernelName:dt.yc,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(ha.a)(t,r,a)}}};var fa=n("ZJ6U");const ma={kernelName:dt.Ac,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Object(fa.a)(t,r)}}},ba={kernelName:dt.Bc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object($t.a)(t,Object(Ft.a)(Object(Dt.a)(Object(V.a)(n,"float32")),2))}}},ga={kernelName:dt.Cc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ft.a)(t,Object(Ft.a)(Object(V.a)(n,"float32"),2))}}},ya={kernelName:dt.Dc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Ct.a)(2);return{a:()=>Object(Ft.a)(t,Object(Ft.a)(a,Object(Vt.a)(n,r))),b:()=>Object(Ft.a)(t,Object(Ft.a)(a,Object(Vt.a)(r,n)))}}},Oa={kernelName:dt.Ec,gradFunc:t=>({x:()=>Object(Mt.a)(t)})},xa={kernelName:dt.Gc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=re.a(n.shape,r.shape);return{a:()=>{let e=t;const r=re.c(n.shape,a);return r.length>0&&(e=Object(tn.a)(e,r)),Object(Qe.a)(e,n.shape)},b:()=>{let e=t;const n=re.c(r.shape,a);return n.length>0&&(e=Object(tn.a)(e,n)),Object(Qe.a)(Object(Ye.a)(e),r.shape)}}}};var wa=n("wion");const va={kernelName:dt.Hc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,a=r.shape.slice(),{axis:s}=n;Object(w.I)(s,r.shape).forEach(t=>{a[t]=1});const i=Object(Qe.a)(t,a),o=Object(Ft.a)(i,Object(wa.a)(r.shape,"float32"));return{x:()=>o}}},ja={kernelName:dt.Ic,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object($t.a)(t,Object(_t.a)(Object(ra.a)(n)))}}},Ia={kernelName:dt.Jc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ft.a)(Object(Vt.a)(Object(Ct.a)(1),Object(_t.a)(n)),t)}}},ka={kernelName:dt.Kc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:a}=n;return{x:()=>{let e=Object(Mt.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)e=Object(Rt.a)(e,Object(Pe.a)(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)e=Object(Rt.a)(e,Object(Pe.a)(t,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)e=Object(Rt.a)(e,Object(Pe.a)(t,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)e=Object(Rt.a)(e,Object(Pe.a)(t,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},Na={kernelName:dt.Mc,gradFunc:(t,e,n)=>{const r=n,{perm:a}=r,s=ne.h(a);return{x:()=>Object(Vn.a)(t,s)}}};var Sa=n("1U0N");const Ca={kernelName:dt.Oc,gradFunc:(t,e,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(Sa.a)(t,a)}}};var Ta=n("2ugP"),Aa=n("kaMP");const Ea=[qe,Je,Ze,en,nn,rn,an,sn,on,un,cn,ln,hn,fn,bn,yn,On,xn,wn,Nn,Cn,$n,En,_n,zn,Bn,Wn,Hn,Gn,Xn,qn,Jn,Zn,Qn,er,tr,ar,ir,cr,lr,dr,hr,pr,fr,mr,br,yr,wr,wr,jr,kr,Sr,Cr,Ar,Er,$r,Fr,Dr,_r,Mr,zr,zr,Br,Pr,Vr,Wr,Ur,Kr,Hr,Gr,qr,Yr,Jr,Qr,ta,ea,na,aa,ia,ua,ca,da,pa,pa,ma,ma,ba,ya,ga,Oa,xa,va,ja,Ia,ka,Na,Ca,{kernelName:dt.Pc,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Object(Kt.a)(e,Object(Mt.a)(e)),r=Object(Aa.a)(t,n);let a=Object(vn.a)(e,Object(Ct.a)(0,"int32"));const s=r.rank-a.rank;for(let o=0;o<s;++o)a=Object(Ta.a)(a,o+1);a=Object(In.a)(a,Object(wa.a)(r.shape,"bool"));const i=Object(Mt.a)(r);return Object(kn.a)(a,r,i)}(t,n)}}},{kernelName:dt.Qc,gradFunc:t=>({x:()=>Object(Mt.a)(t)})}];for(const ni of Ea)Object(ht.d)(ni);K.a.prototype.abs=function(){return this.throwIfDisposed(),Object(Ut.a)(this)};var Ra=n("o3Rt");K.a.prototype.acos=function(){return this.throwIfDisposed(),Object(Ra.a)(this)};var $a=n("RhVc");K.a.prototype.acosh=function(){return this.throwIfDisposed(),Object($a.a)(this)};var Fa=n("zLES");K.a.prototype.addStrict=function(t){return this.throwIfDisposed(),Object(Fa.a)(this,t)},K.a.prototype.add=function(t){return this.throwIfDisposed(),Object(Rt.a)(this,t)};var Da=n("34HJ");K.a.prototype.all=function(t,e){return this.throwIfDisposed(),Object(Da.a)(this,t,e)};var _a=n("RRa9");K.a.prototype.any=function(t,e){return this.throwIfDisposed(),Object(_a.a)(this,t,e)};var Ma=n("6J+n");K.a.prototype.argMax=function(t){return this.throwIfDisposed(),Object(Ma.a)(this,t)};var za=n("20lx");K.a.prototype.argMin=function(t){return this.throwIfDisposed(),Object(za.a)(this,t)},K.a.prototype.asScalar=function(){return this.throwIfDisposed(),Object(w.b)(1===this.size,()=>"The array must have only 1 element."),Object(Qe.a)(this,[])},K.a.prototype.asType=function(t){return this.throwIfDisposed(),Object(V.a)(this,t)},K.a.prototype.as1D=function(){return this.throwIfDisposed(),Object(Qe.a)(this,[this.size])},K.a.prototype.as2D=function(t,e){return this.throwIfDisposed(),Object(Qe.a)(this,[t,e])},K.a.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Object(Qe.a)(this,[t,e,n])},K.a.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),Object(Qe.a)(this,[t,e,n,r])},K.a.prototype.as5D=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Qe.a)(this,[t,e,n,r,a])};var La=n("Ig+c");K.a.prototype.asin=function(){return this.throwIfDisposed(),Object(La.a)(this)};var Ba=n("3FnS");K.a.prototype.asinh=function(){return this.throwIfDisposed(),Object(Ba.a)(this)};var Pa=n("fjZN");K.a.prototype.atan=function(){return this.throwIfDisposed(),Object(Pa.a)(this)};var Va=n("YAKK");K.a.prototype.atan2=function(t){return this.throwIfDisposed(),Object(Va.a)(this,t)};var Wa=n("0ahe");K.a.prototype.atanh=function(){return this.throwIfDisposed(),Object(Wa.a)(this)};var Ua=n("l0gX");K.a.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Object(Ua.a)(this,t,e,n,r)},K.a.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Object(ha.a)(this,t,e)};var Ka=n("cdtJ");K.a.prototype.batchNorm=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Ka.a)(this,t,e,n,r,a)};var Ha=n("SNsm");K.a.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Object(Ha.a)(this,t)},K.a.prototype.cast=function(t){return this.throwIfDisposed(),Object(V.a)(this,t)};var Ga=n("WWBm");K.a.prototype.ceil=function(){return this.throwIfDisposed(),Object(Ga.a)(this)};var Xa=n("wI/y");K.a.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Object(Xa.a)(this,t,e)},K.a.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof K.a&&(t=[t]),Object(fa.a)([this,...t],e)};var qa=n("dnXz");K.a.prototype.conv1d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(qa.a)(this,t,e,n,r,a,s)};var Ya=n("zR+/");K.a.prototype.conv2dTranspose=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Ya.a)(this,t,e,n,r,a)},K.a.prototype.conv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(Rn.a)(this,t,e,n,r,a,s)},K.a.prototype.cos=function(){return this.throwIfDisposed(),Object(ra.a)(this)},K.a.prototype.cosh=function(){return this.throwIfDisposed(),Object(sa.a)(this)},K.a.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Object(Pn.a)(this,t,e,n)};var Ja=n("Nk7E");K.a.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Object(Ja.a)(this,t,e)};var Za=n("g4+C");K.a.prototype.depthwiseConv2D=function(t,e,n,r,a,s){return Object(Nt.b)("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Object(Za.a)(this,t,e,n,r,a,s)},K.a.prototype.depthwiseConv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(Za.a)(this,t,e,n,r,a,s)};var Qa=n("wXC5");K.a.prototype.dilation2d=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Qa.a)(this,t,e,n,r,a)};var ts=n("ARu+");K.a.prototype.divNoNan=function(t){return this.throwIfDisposed(),Object(ts.a)(this,t)},K.a.prototype.divStrict=function(t){return this.throwIfDisposed(),Object(Fa.b)(this,t)},K.a.prototype.div=function(t){return this.throwIfDisposed(),Object($t.a)(this,t)};var es=n("Kfzt");K.a.prototype.dot=function(t){return this.throwIfDisposed(),Object(es.a)(this,t)};var ns=n("njhW");K.a.prototype.elu=function(){return this.throwIfDisposed(),Object(ns.a)(this)};var rs=n("8bUJ");K.a.prototype.equalStrict=function(t){return this.throwIfDisposed(),Object(rs.a)(this,t)},K.a.prototype.equal=function(t){return this.throwIfDisposed(),Object(Or.a)(this,t)};var as=n("jgXy");K.a.prototype.erf=function(){return this.throwIfDisposed(),Object(as.a)(this)},K.a.prototype.exp=function(){return this.throwIfDisposed(),Object(Yn.a)(this)},K.a.prototype.expandDims=function(t){return this.throwIfDisposed(),Object(Ta.a)(this,t)};var ss=n("G6IW");K.a.prototype.expm1=function(){return this.throwIfDisposed(),Object(ss.a)(this)};var is=n("Grcp");K.a.prototype.fft=function(){return this.throwIfDisposed(),Object(is.a)(this)},K.a.prototype.flatten=function(){return this.throwIfDisposed(),Object(Qe.a)(this,[this.size])},K.a.prototype.floor=function(){return this.throwIfDisposed(),Object(Rr.a)(this)};var os=n("UI8N");K.a.prototype.floorDiv=function(t){return this.throwIfDisposed(),Object(os.a)(this,t)},K.a.prototype.gather=function(t,e){return this.throwIfDisposed(),Object(Aa.a)(this,t,e)},K.a.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Object(rs.b)(this,t)},K.a.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Object(vn.a)(this,t)},K.a.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Object(rs.c)(this,t)},K.a.prototype.greater=function(t){return this.throwIfDisposed(),Object(Tr.a)(this,t)};var us=n("THqV");K.a.prototype.ifft=function(){return this.throwIfDisposed(),Object(us.a)(this)};var cs=n("adw1");K.a.prototype.irfft=function(){return this.throwIfDisposed(),Object(cs.a)(this)};var ls=n("/AvP");K.a.prototype.isFinite=function(){return this.throwIfDisposed(),Object(ls.a)(this)};var ds=n("WYAb");K.a.prototype.isInf=function(){return this.throwIfDisposed(),Object(ds.a)(this)};var hs=n("b++O");K.a.prototype.isNaN=function(){return this.throwIfDisposed(),Object(hs.a)(this)};var ps=n("bzdD");K.a.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Object(ps.a)(this,t)},K.a.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Object(rs.d)(this,t)},K.a.prototype.lessEqual=function(t){return this.throwIfDisposed(),Object(jn.a)(this,t)},K.a.prototype.lessStrict=function(t){return this.throwIfDisposed(),Object(rs.e)(this,t)},K.a.prototype.less=function(t){return this.throwIfDisposed(),Object(vr.a)(this,t)};var fs=n("4QEz");K.a.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Object(fs.a)(this,t,e,n,r)};var ms=n("wxQM");K.a.prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(ms.a)(this)};var bs=n("gErV");K.a.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Object(bs.a)(this,t)};var gs=n("r9q9");K.a.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Object(gs.a)(this,t,e)},K.a.prototype.log=function(){return this.throwIfDisposed(),Object(Lr.a)(this)};var ys=n("RrGL");K.a.prototype.log1p=function(){return this.throwIfDisposed(),Object(ys.a)(this)},K.a.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Object(In.a)(this,t)},K.a.prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Zr.a)(this)};var Os=n("8YN0");K.a.prototype.logicalOr=function(t){return this.throwIfDisposed(),Object(Os.a)(this,t)};var xs=n("0l+w");K.a.prototype.logicalXor=function(t){return this.throwIfDisposed(),Object(xs.a)(this,t)},K.a.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Object(mn.a)(this,t,e,n)};var ws=n("n+ZZ");K.a.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Object(ws.a)(this,t,e,n,r)};var vs=n("wCH+");K.a.prototype.max=function(t,e){return this.throwIfDisposed(),Object(vs.a)(this,t,e)},K.a.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Object(Fa.c)(this,t)},K.a.prototype.maximum=function(t){return this.throwIfDisposed(),Object(Kt.a)(this,t)};var js=n("Ei6o");K.a.prototype.mean=function(t,e){return this.throwIfDisposed(),Object(js.a)(this,t,e)};var Is=n("rm0a");K.a.prototype.min=function(t,e){return this.throwIfDisposed(),Object(Is.a)(this,t,e)},K.a.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Object(Fa.d)(this,t)};var ks=n("8OX7");K.a.prototype.minimum=function(t){return this.throwIfDisposed(),Object(ks.a)(this,t)};var Ns=n("k9tH");K.a.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Object(Ns.a)(this,t,e)},K.a.prototype.modStrict=function(t){return this.throwIfDisposed(),Object(Fa.e)(this,t)};var Ss=n("RhH0");K.a.prototype.mod=function(t){return this.throwIfDisposed(),Object(Ss.a)(this,t)},K.a.prototype.mulStrict=function(t){return this.throwIfDisposed(),Object(Fa.f)(this,t)},K.a.prototype.mul=function(t){return this.throwIfDisposed(),Object(Ft.a)(this,t)},K.a.prototype.neg=function(){return this.throwIfDisposed(),Object(Ye.a)(this)};var Cs=n("91d6");K.a.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Object(Cs.a)(this,t,e,n)},K.a.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Object(rs.f)(this,t)};var Ts=n("1N4k");K.a.prototype.notEqual=function(t){return this.throwIfDisposed(),Object(Ts.a)(this,t)};var As=n("4iwy");K.a.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Object(As.a)(this,t,e,n)};var Es=n("DbV5");K.a.prototype.onesLike=function(){return this.throwIfDisposed(),Object(Es.a)(this)},K.a.prototype.pad=function(t,e){return this.throwIfDisposed(),Object(oa.a)(this,t,e)};var Rs=n("6vQL");K.a.prototype.pool=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Rs.a)(this,t,e,n,r,a)},K.a.prototype.powStrict=function(t){return this.throwIfDisposed(),Object(Fa.g)(this,t)},K.a.prototype.pow=function(t){return this.throwIfDisposed(),Object(Pt.a)(this,t)};var $s=n("Ug8H");K.a.prototype.prelu=function(t){return this.throwIfDisposed(),Object($s.a)(this,t)};var Fs=n("867m");K.a.prototype.prod=function(t,e){return this.throwIfDisposed(),Object(Fs.a)(this,t,e)};var Ds=n("tQDl");K.a.prototype.reciprocal=function(){return this.throwIfDisposed(),Object(Ds.a)(this)};var _s=n("kXpR");K.a.prototype.relu=function(){return this.throwIfDisposed(),Object(_s.a)(this)};var Ms=n("Rqg+");K.a.prototype.relu6=function(){return this.throwIfDisposed(),Object(Ms.a)(this)},K.a.prototype.reshapeAs=function(t){return this.throwIfDisposed(),Object(Qe.a)(this,t.shape)},K.a.prototype.reshape=function(t){return this.throwIfDisposed(),Object(Qe.a)(this,t)};var zs=n("c/ib");K.a.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),Object(zs.a)(this,t,e)};var Ls=n("D4ac");K.a.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),Object(Ls.a)(this,t,e)},K.a.prototype.reverse=function(t){return this.throwIfDisposed(),Object(Xr.a)(this,t)};var Bs=n("th0q");K.a.prototype.rfft=function(){return this.throwIfDisposed(),Object(Bs.a)(this)};var Ps=n("CKnt");K.a.prototype.round=function(){return this.throwIfDisposed(),Object(Ps.a)(this)},K.a.prototype.rsqrt=function(){return this.throwIfDisposed(),Object(nr.a)(this)};var Vs=n("s57M");K.a.prototype.selu=function(){return this.throwIfDisposed(),Object(Vs.a)(this)};var Ws=n("EWu9");K.a.prototype.separableConv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(Ws.a)(this,t,e,n,r,a,s)},K.a.prototype.sigmoid=function(){return this.throwIfDisposed(),Object(la.a)(this)};var Us=n("Hfat");K.a.prototype.sign=function(){return this.throwIfDisposed(),Object(Us.a)(this)},K.a.prototype.sin=function(){return this.throwIfDisposed(),Object(Mn.a)(this)},K.a.prototype.sinh=function(){return this.throwIfDisposed(),Object(Ln.a)(this)},K.a.prototype.slice=function(t,e){return this.throwIfDisposed(),Object(Pe.a)(this,t,e)};var Ks=n("X4fa");K.a.prototype.softmax=function(t){return this.throwIfDisposed(),Object(Ks.a)(this,t)};var Hs=n("n/2y");K.a.prototype.softplus=function(){return this.throwIfDisposed(),Object(Hs.a)(this)},K.a.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Object(gn.a)(this,t,e)},K.a.prototype.split=function(t,e){return this.throwIfDisposed(),Object(Sn.a)(this,t,e)},K.a.prototype.sqrt=function(){return this.throwIfDisposed(),Object(Dt.a)(this)},K.a.prototype.square=function(){return this.throwIfDisposed(),Object(_t.a)(this)};var Gs=n("QYQ3");K.a.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Object(Gs.a)(this,t)},K.a.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Object(Fa.h)(this,t)};var Xs=n("0fRV");K.a.prototype.squeeze=function(t){return this.throwIfDisposed(),Object(Xs.a)(this,t)},K.a.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof K.a?[this,t]:[this,...t];return Object(Sa.a)(n,e)},K.a.prototype.step=function(t){return this.throwIfDisposed(),Object(Xe.a)(this,t)};var qs=n("3hph");K.a.prototype.stridedSlice=function(t,e,n,r,a,s,i,o){return this.throwIfDisposed(),Object(qs.a)(this,t,e,n,r,a,s,i,o)},K.a.prototype.subStrict=function(t){return this.throwIfDisposed(),Object(Fa.i)(this,t)},K.a.prototype.sub=function(t){return this.throwIfDisposed(),Object(Vt.a)(this,t)},K.a.prototype.sum=function(t,e){return this.throwIfDisposed(),Object(tn.a)(this,t,e)};var Ys=n("0wrZ");K.a.prototype.tan=function(){return this.throwIfDisposed(),Object(Ys.a)(this)};var Js=n("iIjY");K.a.prototype.tanh=function(){return this.throwIfDisposed(),Object(Js.a)(this)},K.a.prototype.tile=function(t){return this.throwIfDisposed(),Object(rr.a)(this,t)},K.a.prototype.toBool=function(){return this.throwIfDisposed(),Object(V.a)(this,"bool")},K.a.prototype.toFloat=function(){return this.throwIfDisposed(),Object(V.a)(this,"float32")},K.a.prototype.toInt=function(){return this.throwIfDisposed(),Object(V.a)(this,"int32")};var Zs=n("VhY8");K.a.prototype.topk=function(t,e){return this.throwIfDisposed(),Object(Zs.a)(this,t,e)},K.a.prototype.transpose=function(t){return this.throwIfDisposed(),Object(Vn.a)(this,t)};var Qs=n("hT5K");K.a.prototype.unique=function(t){return this.throwIfDisposed(),Object(Qs.a)(this,t)},K.a.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Object(sr.a)(this,t,e)};var ti=n("OkRW");K.a.prototype.unstack=function(t){return this.throwIfDisposed(),Object(ti.a)(this,t)},K.a.prototype.where=function(t,e){return this.throwIfDisposed(),Object(kn.a)(t,this,e)},K.a.prototype.zerosLike=function(){return this.throwIfDisposed(),Object(Mt.a)(this)}},"/0+H":function(t,e,n){"use strict";e.__esModule=!0,e.isInAmpMode=i,e.useAmp=function(){return i(a.default.useContext(s.AmpStateContext))};var r,a=(r=n("q1tI"))&&r.__esModule?r:{default:r},s=n("lwAK");function i(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.ampFirst,n=void 0!==e&&e,r=t.hybrid,a=void 0!==r&&r,s=t.hasQuery,i=void 0!==s&&s;return n||a&&i}},"/7N0":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({sigmoid_:function(t){const e=Object(s.a)(t,"x","sigmoid"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.sigmoid(e);return n([r]),r},n,null,a.rc)}})},"/AvP":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({isFinite_:function(t){const e=Object(s.a)(t,"x","isFinite"),n={x:e};return r.a.runKernelFunc(t=>t.isFinite(e),n,null,a.ob)}})},0:function(t,e){},"0+74":function(t,e,n){"use strict";n.r(e),n.d(e,"segOpComputeOptimalWindowSize",(function(){return s})),n.d(e,"computeOutShape",(function(){return i})),n.d(e,"collectGatherOpShapeInfo",(function(){return o}));var r=n("atXS"),a=n("9jvw");function s(t,e){let n,s=!1;for(t<=a.a?(n=t,s=!0):n=Object(r.G)(t,Math.floor(Math.sqrt(t)));!s;)n>e||n===t?s=!0:n=Object(r.G)(t,n+1);return n}function i(t,e,n){const r=[],a=t.length;for(let s=0;s<a;s++)s!==e?r.push(t[s]):r.push(n);return r}function o(t,e,n){const r=t.shape[n],a=[];let s=1,i=1;for(let o=0;o<n;o++)a.push(t.shape[o]),s*=t.shape[o];for(let o=0;o<e.rank;o++)a.push(e.shape[o]);for(let o=n+1;o<t.rank;o++)a.push(t.shape[o]),i*=t.shape[o];return{batchSize:s,sliceSize:i,dimSize:r,outputShape:a}}},"02mo":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({floor_:function(t){const e=Object(s.a)(t,"x","floor"),n={x:e};return r.a.runKernelFunc(t=>t.floor(e),n,null,a.bb)}})},"0I63":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("8Km0"),u=n("VO80"),c=n("NclT");const l=Object(u.a)({reverse_:function(t,e){const n=Object(s.a)(t,"x","reverse"),u={x:n},l={dims:e};return r.a.runKernelFunc(t=>{const r=Object(i.I)(e,n.shape);if(0===n.rank)return Object(o.a)(n);const a=t.reverse(n,r);return Object(c.a)(a,n.shape)},u,null,a.kc,l)}})},"0ahe":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({atanh_:function(t){const e=Object(s.a)(t,"x","atanh"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.atanh(e);return n([e]),r},n,null,a.n)}})},"0fRV":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("o/e8"),a=n("atXS"),s=n("VO80"),i=n("NclT");const o=Object(s.a)({squeeze_:function(t,e){const n=Object(r.a)(t,"x","squeeze");return Object(i.a)(n,Object(a.P)(n.shape,e).newShape)}})},"0l+w":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("o/e8"),a=n("Um8L"),s=n("4zPZ"),i=n("7wDt"),o=n("8YN0"),u=n("VO80");const c=Object(u.a)({logicalXor_:function(t,e){const n=Object(r.a)(t,"a","logicalXor","bool"),u=Object(r.a)(e,"b","logicalXor","bool");return Object(a.a)(n.shape,u.shape),Object(s.a)(Object(o.a)(t,e),Object(i.a)(Object(s.a)(t,e)))}})},"0wNd":function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));const r={};function a(t){return r[t]}},"0wrZ":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({tan_:function(t){const e=Object(s.a)(t,"x","tan"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.tan(e);return n([e]),r},n,null,a.Ic)}})},1:function(t,e){},"17CO":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({real_:function(t){const e=Object(s.a)(t,"input","real"),n={input:e};return r.a.runKernelFunc(t=>t.real(e),n,null,a.bc)}})},"1N4k":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.a)({notEqual_:function(t,e){let n=Object(i.a)(t,"a","notEqual"),u=Object(i.a)(e,"b","notEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc(t=>t.notEqual(n,u),c,null,a.Tb)}})},"1OSX":function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s}));var r=n("YSVl");n("1WXW");class a{constructor(t,e,n,a,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class s{constructor(t=0,e=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},"1U0N":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("o/e8"),a=n("atXS"),s=n("ZJ6U"),i=n("2ugP"),o=n("VO80");const u=Object(o.a)({stack_:function(t,e=0){const n=Object(r.b)(t,"tensors","stack");if(a.b(n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return Object(i.a)(n[0],e);const o=n[0].rank,u=n[0].shape,c=n[0].dtype;a.b(e<=o,()=>"Axis must be <= rank of the tensor"),n.forEach(t=>{a.e(u,t.shape,"All tensors passed to stack must have matching shapes"),a.b(c===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=n.map(t=>Object(i.a)(t,e));return Object(s.a)(l,e)}})},"1VZP":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},"1WXW":function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"a",(function(){return s}));var r=n("auKK");n("o/e8"),n("atXS");function a(){return 32===r.a.backend.floatPrecision()?.001:.1}function s(t,e,n){if(null==n&&(n=a()),!i(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`)}function i(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}},2:function(t,e){},"2/MO":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},"20lx":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("VO80"),c=n("yRKQ");const l=Object(u.a)({argMin_:function(t,e=0){let n=Object(s.a)(t,"x","argMin");const u={x:n},l={axis:e};return r.a.runKernelFunc((t,r)=>{r([n]),null==e&&(e=0);let a=i.I(e,n.shape);const s=o.f(a,n.rank);return null!=s&&(n=Object(c.a)(n,s),a=o.g(a.length,n.rank)),t.argMin(n,a[0])},u,null,a.i,l)}})},"2ugP":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("o/e8"),a=n("atXS"),s=n("VO80"),i=n("NclT");const o=Object(s.a)({expandDims_:function(t,e=0){const n=Object(r.a)(t,"x","expandDims",null);a.b(e<=n.rank,()=>"Axis must be <= rank of the tensor");const s=n.shape.slice();return e<0&&(a.b(-(n.rank+1)<=e,()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`),e=n.rank+e+1),s.splice(e,0,1),Object(i.a)(n,s)}})},3:function(t,e){},"34HJ":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("VO80"),c=n("NclT"),l=n("yRKQ");const d=Object(u.a)({all_:function(t,e=null,n=!1){let u=Object(s.a)(t,"x","all","bool");const d={x:u},h={axis:e,keepDims:n};return r.a.runKernelFunc(t=>{const r=Object(i.I)(e,u.shape);let a=r;const s=Object(o.f)(a,u.rank);null!=s&&(u=Object(l.a)(u,s),a=Object(o.g)(a.length,u.rank));const d=t.all(u,a);if(n){const t=Object(o.e)(d.shape,r);return Object(c.a)(d,t)}return d},d,null,a.f,h)}})},"3BSK":function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return i}));var r=n("+hG3"),a=n("w4jT"),s=n("TPxA");class i extends a.a{decodeUTF8(){return new o(this)}}class o extends s.a{constructor(t){super(),this.upstream=t,this.impl=new u(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class u extends a.b{constructor(t){if(super(),this.upstream=t,Object(r.Ac)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(3);this.decoder=new t("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const e=await this.upstream.next();let n,a;return!e.done&&(n=e.value,a=Object(r.Ac)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(t.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n("HDXh").Buffer)},"3FnS":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({asinh_:function(t){const e=Object(s.a)(t,"x","asinh"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.asinh(e);return n([e]),r},n,null,a.k)}})},"3X4V":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.a)({conv2d_:function(t,e,n,u,l="NHWC",d=[1,1],h){const p=Object(s.a)(t,"x","conv2d"),f=Object(s.a)(e,"filter","conv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.b(4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),i.b(4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+f.rank+"."),null!=h&&i.b(i.v(u),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${u}.`);const g="NHWC"===l?m.shape[3]:m.shape[1];i.b(g===f.shape[2],()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`),i.b(o.h(n,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`);const y={x:m,filter:f},O={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h},x=r.a.runKernelFunc((t,e)=>{const r=o.g(l),a=o.a(m.shape,f.shape,n,d,u,h,!1,r),s=t.conv2d(m,f,a);return e([m,f]),s},y,null,a.A,O);return b?Object(c.a)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},"3hph":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("NclT"),u=n("bTzI"),c=n("Xr0w");const l=Object(i.a)({stridedSlice_:function(t,e,n,i,l=0,d=0,h=0,p=0,f=0){let m=Object(s.a)(t,"x","stridedSlice");const b={x:m},g={begin:e,end:n,strides:i,beginMask:l,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:f};return r.a.runKernelFunc(t=>{null==i&&(i=new Array(e.length));const r=Object(c.maskToAxes)(h);if(r.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==h&&0!==p)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==h&&0!==f)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const a=m.rank-e.length,s=Object(c.maskToAxes)(p),b=m.shape.slice();s.forEach(t=>{e[t]=0,n[t]=1,b.splice(t,0,1)}),m=Object(o.a)(m,b);const{begin:g,end:y,strides:O}=Object(c.getNormalizedAxes)(m.shape,r,a,e,n,i,l,d,h);e=g,n=y,i=O;const x=Object(c.maskToAxes)(f);x.forEach(t=>{n[t]=e[t]+1,i[t]=1});const w=Object(c.computeOutShape)(e,n,i),v=w.filter((t,e)=>-1===x.indexOf(e));if(i.every(t=>1===t))return Object(o.a)(Object(u.a)(m,e,w),v);const j=t.stridedSlice(m,e,n,i);return Object(o.a)(j,v)},b,null,a.Fc,g)}})},"3niX":function(t,e,n){"use strict";e.__esModule=!0,e.flush=function(){var t=s.cssRules();return s.flush(),t},e.default=void 0;var r,a=n("q1tI");var s=new(((r=n("SevZ"))&&r.__esModule?r:{default:r}).default),i=function(t){var e,n;function r(e){var n;return(n=t.call(this,e)||this).prevProps={},n}n=t,(e=r).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n,r.dynamic=function(t){return t.map((function(t){var e=t[0],n=t[1];return s.computeId(e,n)})).join(" ")};var a=r.prototype;return a.shouldComponentUpdate=function(t){return this.props.id!==t.id||String(this.props.dynamic)!==String(t.dynamic)},a.componentWillUnmount=function(){s.remove(this.props)},a.render=function(){return this.shouldComponentUpdate(this.prevProps)&&(this.prevProps.id&&s.remove(this.prevProps),s.add(this.props),this.prevProps=this.props),null},r}(a.Component);e.default=i},"3rNm":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({cast_:function(t,e){const n=Object(s.a)(t,"x","cast");if(!i.B(e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:e};return r.a.runKernelFunc(t=>t.cast(n,e),o,null,a.v,u)}})},4:function(t,e){},"49sm":function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},"4FMF":function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("3rNm"),c=n("VO80"),l=n("NclT"),d=n("yRKQ");const h=Object(c.a)({sum_:function(t,e=null,n=!1){let c=Object(s.a)(t,"x","sum");"bool"===c.dtype&&(c=Object(u.a)(c,"int32"));const h={x:c},p={axis:e,keepDims:n};return r.a.runKernelFunc((t,r)=>{r([c]);const a=Object(i.I)(e,c.shape),s=Object(o.f)(a,c.rank);let u=a,h=c;null!=s&&(h=Object(d.a)(c,s),u=Object(o.g)(u.length,c.rank));let p=t.sum(h,u);if(n){const t=Object(o.e)(p.shape,a);p=Object(l.a)(p,t)}return p},h,null,a.Hc,p)}})},"4QEz":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.a)({localResponseNormalization_:function(t,e=5,n=1,o=1,c=.5){const l=Object(s.a)(t,"x","localResponseNormalization");i.b(4===l.rank||3===l.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`),i.b(i.v(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let d=l,h=!1;3===l.rank&&(h=!0,d=Object(u.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const p={x:d},f={depthRadius:e,bias:n,alpha:o,beta:c},m=r.a.runKernelFunc((t,r)=>{const a=t.localResponseNormalization4D(d,e,n,o,c);return r([d,a]),a},p,null,a.rb,f);return h?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},"4f3O":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.a)({less_:function(t,e){let n=Object(i.a)(t,"a","less"),u=Object(i.a)(e,"b","less");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc(t=>t.less(n,u),c,null,a.tb)}})},"4iwy":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("NclT");const u=Object(i.a)({oneHot_:function(t,e,n=1,i=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);const u=Object(s.a)(t,"indices","oneHot","int32"),c=[...u.shape,e],l={indices:u},d={depth:e,onValue:n,offValue:i};return r.a.runKernelFunc((t,r)=>(r([u]),Object(o.a)(t.oneHot(Object(o.a)(u,[u.size]),e,n,i),c)),l,null,a.Ub,d)}})},"4zPZ":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("Um8L"),o=n("VO80");const u=Object(o.a)({logicalAnd_:function(t,e){const n=Object(s.a)(t,"a","logicalAnd","bool"),o=Object(s.a)(e,"b","logicalAnd","bool");Object(i.a)(n.shape,o.shape);const u={a:n,b:o};return r.a.runKernelFunc(t=>t.logicalAnd(n,o),u,null,a.zb)}})},6366:function(t,e,n){"use strict";n.r(e),n.d(e,"createScalarValue",(function(){return s})),n.d(e,"toTypedArray",(function(){return i})),n.d(e,"now",(function(){return o})),n.d(e,"fetch",(function(){return u})),n.d(e,"encodeString",(function(){return c})),n.d(e,"decodeString",(function(){return l}));var r=n("szMd"),a=n("atXS");function s(t,e){return"string"===e?c(t):i([t],e)}function i(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=a.m(t)),Object(r.b)().getBool("DEBUG")&&a.h(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type "+e)}function o(){return Object(r.b)().platform.now()}function u(t,e){return Object(r.b)().platform.fetch(t,e)}function c(t,e="utf-8"){return e=e||"utf-8",Object(r.b)().platform.encode(t,e)}function l(t,e="utf-8"){return e=e||"utf-8",Object(r.b)().platform.decode(t,e)}n.d(e,"shuffle",(function(){return a.M})),n.d(e,"clamp",(function(){return a.i})),n.d(e,"nearestLargerEven",(function(){return a.H})),n.d(e,"sum",(function(){return a.Q})),n.d(e,"randUniform",(function(){return a.J})),n.d(e,"distSquared",(function(){return a.l})),n.d(e,"assert",(function(){return a.b})),n.d(e,"assertShapesMatch",(function(){return a.e})),n.d(e,"assertNonNull",(function(){return a.d})),n.d(e,"flatten",(function(){return a.m})),n.d(e,"sizeFromShape",(function(){return a.N})),n.d(e,"isScalarShape",(function(){return a.y})),n.d(e,"arraysEqual",(function(){return a.a})),n.d(e,"isInt",(function(){return a.v})),n.d(e,"tanh",(function(){return a.R})),n.d(e,"sizeToSquarishShape",(function(){return a.O})),n.d(e,"createShuffledIndices",(function(){return a.k})),n.d(e,"rightPad",(function(){return a.L})),n.d(e,"repeatedTry",(function(){return a.K})),n.d(e,"inferFromImplicitShape",(function(){return a.s})),n.d(e,"parseAxisParam",(function(){return a.I})),n.d(e,"squeezeShape",(function(){return a.P})),n.d(e,"getTypedArrayFromDType",(function(){return a.o})),n.d(e,"getArrayFromDType",(function(){return a.n})),n.d(e,"checkConversionForErrors",(function(){return a.h})),n.d(e,"isValidDtype",(function(){return a.B})),n.d(e,"hasEncodingLoss",(function(){return a.p})),n.d(e,"isTypedArray",(function(){return a.A})),n.d(e,"bytesPerElement",(function(){return a.g})),n.d(e,"bytesFromStringArray",(function(){return a.f})),n.d(e,"isString",(function(){return a.z})),n.d(e,"isBoolean",(function(){return a.t})),n.d(e,"isNumber",(function(){return a.w})),n.d(e,"inferDtype",(function(){return a.r})),n.d(e,"isFunction",(function(){return a.u})),n.d(e,"nearestDivisor",(function(){return a.G})),n.d(e,"computeStrides",(function(){return a.j})),n.d(e,"toNestedArray",(function(){return a.S})),n.d(e,"makeOnesTypedArray",(function(){return a.D})),n.d(e,"makeZerosTypedArray",(function(){return a.F})),n.d(e,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(e,"locToIndex",(function(){return a.C})),n.d(e,"indexToLoc",(function(){return a.q})),n.d(e,"isPromise",(function(){return a.x}))},"6J+n":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("VO80"),c=n("yRKQ");const l=Object(u.a)({argMax_:function(t,e=0){let n=Object(s.a)(t,"x","argMax");const u={x:n},l={axis:e};return r.a.runKernelFunc((t,r)=>{r([n]);let a=i.I(e,n.shape);const s=o.f(a,n.rank);return null!=s&&(n=Object(c.a)(n,s),a=o.g(a.length,n.rank)),t.argMax(n,a[0])},u,null,a.h,l)}})},"6vQL":function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n("o/e8"),a=n("atXS"),s=n("l0gX"),i=n("OygE"),o=n("uBja"),u=n("n+ZZ"),c=n("VO80"),l=n("NclT"),d=n("dYAU");const h=Object(c.a)({pool_:function(t,e,n,c,h,p){null==h&&(h=[1,1]),null==p&&(p=1),0===c&&(c="valid");const f=Object(r.a)(t,"x","maxPool");let m=f,b=!1;3===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.b(o.h(p,h),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`);const g=o.e(m.shape,e,p,h,c),y=[g.dilationHeight,g.dilationWidth];let O;O="same"===c?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),r=n.map(t=>Math.floor(t/2)),a=n.map((t,e)=>t-r[e]);return n.map((t,e)=>[r[e],a[e]])}([g.filterHeight,g.filterWidth],y):[[0,0],[0,0]];const x=1===y[0]&&1===y[1],[w,v]=function(t,e,n){const r=n.map(t=>t[0]),a=n.map(t=>t[1]),s=t.concat(r,a),i=e.map((t,e)=>(t-s[e]%t)%t),o=a.map((t,e)=>t+i[e]),u=e.map((t,e)=>[r[e],o[e]]),c=e.map((t,e)=>[0,i[e]]);return[u,c]}([g.inHeight,g.inWidth],y,O),j=x?c:"valid",I=x?m:Object(d.a)(m,y,w),k=("avg"===n?()=>Object(s.a)(I,e,p,j):()=>Object(u.a)(I,e,p,j))(),N=x?k:Object(i.a)(k,y,v);return b?Object(l.a)(N,[N.shape[1],N.shape[2],N.shape[3]]):N}})},"7/dO":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({cos_:function(t){const e=Object(s.a)(t,"x","cos"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.cos(e);return n([e]),r},n,null,a.G)}})},"7wDt":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({logicalNot_:function(t){const e=Object(s.a)(t,"x","logicalNot","bool"),n={x:e};return r.a.runKernelFunc(t=>t.logicalNot(e),n,null,a.Ab)}})},"867m":function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("3rNm"),c=n("VO80"),l=n("NclT"),d=n("yRKQ");const h=Object(c.a)({prod_:function(t,e=null,n=!1){let c=Object(s.a)(t,"x","prod");"bool"===c.dtype&&(c=Object(u.a)(c,"int32"));const h={x:c},p={axis:e,keepDims:n};return r.a.runKernelFunc(t=>{const r=Object(i.I)(e,c.shape),a=Object(o.f)(r,c.rank);let s=r,u=c;null!=a&&(u=Object(d.a)(c,a),s=Object(o.g)(s.length,c.rank));let h=t.prod(u,s);if(n){const t=Object(o.e)(h.shape,r);h=Object(l.a)(h,t)}return h},h,null,a.Zb,p)}})},"87nf":function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s}));var r=n("atXS");function a(t,e){const n=t[0].length;t.forEach((t,e)=>{r.b(t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),r.b(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const a=t[0];t.forEach((t,s)=>{for(let i=0;i<n;i++)r.b(i===e||t[i]===a[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${a}) along the non-concatenated axis ${s}.`)})}function s(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}},"8BGy":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},"8Km0":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({clone_:function(t){const e=Object(s.a)(t,"x","clone",null),n={x:e};return r.a.runKernelFunc(()=>r.a.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n,null,a.mb)}})},"8Kt/":function(t,e,n){"use strict";n("lSNA");e.__esModule=!0,e.defaultHead=l,e.default=void 0;var r,a=function(t){if(t&&t.__esModule)return t;if(null===t||"object"!==typeof t&&"function"!==typeof t)return{default:t};var e=c();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var s=r?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}n.default=t,e&&e.set(t,n);return n}(n("q1tI")),s=(r=n("Xuae"))&&r.__esModule?r:{default:r},i=n("lwAK"),o=n("FYa8"),u=n("/0+H");function c(){if("function"!==typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function l(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=[a.default.createElement("meta",{charSet:"utf-8"})];return t||e.push(a.default.createElement("meta",{name:"viewport",content:"width=device-width"})),e}function d(t,e){return"string"===typeof e||"number"===typeof e?t:e.type===a.default.Fragment?t.concat(a.default.Children.toArray(e.props.children).reduce((function(t,e){return"string"===typeof e||"number"===typeof e?t:t.concat(e)}),[])):t.concat(e)}var h=["name","httpEquiv","charSet","itemProp"];function p(t,e){return t.reduce((function(t,e){var n=a.default.Children.toArray(e.props.children);return t.concat(n)}),[]).reduce(d,[]).reverse().concat(l(e.inAmpMode)).filter(function(){var t=new Set,e=new Set,n=new Set,r={};return function(a){var s=!0;if(a.key&&"number"!==typeof a.key&&a.key.indexOf("$")>0){var i=a.key.slice(a.key.indexOf("$")+1);t.has(i)?s=!1:t.add(i)}switch(a.type){case"title":case"base":e.has(a.type)?s=!1:e.add(a.type);break;case"meta":for(var o=0,u=h.length;o<u;o++){var c=h[o];if(a.props.hasOwnProperty(c))if("charSet"===c)n.has(c)?s=!1:n.add(c);else{var l=a.props[c],d=r[c]||new Set;d.has(l)?s=!1:(d.add(l),r[c]=d)}}}return s}}()).reverse().map((function(t,e){var n=t.key||e;return a.default.cloneElement(t,{key:n})}))}function f(t){var e=t.children,n=(0,a.useContext)(i.AmpStateContext),r=(0,a.useContext)(o.HeadManagerContext);return a.default.createElement(s.default,{reduceComponentsToState:p,headManager:r,inAmpMode:(0,u.isInAmpMode)(n)},e)}f.rewind=function(){};var m=f;e.default=m},"8OX7":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("3rNm"),c=n("VO80");const l=Object(c.a)({minimum_:function(t,e){let n=Object(i.a)(t,"a","minimum"),c=Object(i.a)(e,"b","minimum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernelFunc((t,e)=>{const r=t.minimum(n,c);return e([n,c]),r},l,null,a.Lb)}})},"8YN0":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("Um8L"),o=n("VO80");const u=Object(o.a)({logicalOr_:function(t,e){const n=Object(s.a)(t,"a","logicalOr","bool"),o=Object(s.a)(e,"b","logicalOr","bool");Object(i.a)(n.shape,o.shape);const u={a:n,b:o};return r.a.runKernelFunc(t=>t.logicalOr(n,o),u,null,a.Bb)}})},"8bUJ":function(t,e,n){"use strict";n.d(e,"a",(function(){return p})),n.d(e,"b",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"e",(function(){return g})),n.d(e,"f",(function(){return y}));var r=n("wE5H"),a=n("o/e8"),s=n("atXS"),i=n("ubnP"),o=n("zvA9"),u=n("uy0A"),c=n("4f3O"),l=n("shz4"),d=n("1N4k"),h=n("VO80");const p=Object(h.a)({equalStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","equalStrict"),o=Object(a.a)(e,"b","equalStrict");return Object(s.e)(n.shape,o.shape,"Error in equalStrict: "),Object(i.a)(n,o)}}),f=Object(h.a)({greaterEqualStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","greaterEqualStrict"),i=Object(a.a)(e,"b","greaterEqualStrict");return Object(s.e)(n.shape,i.shape,"Error in greaterEqualStrict: "),Object(u.a)(n,i)}}),m=Object(h.a)({greaterStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","greaterStrict"),i=Object(a.a)(e,"b","greaterStrict");return Object(s.e)(n.shape,i.shape,"Error in greaterStrict: "),Object(o.a)(n,i)}}),b=Object(h.a)({lessEqualStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","lessEqualStrict"),i=Object(a.a)(e,"b","lessEqualStrict");return Object(s.e)(n.shape,i.shape,"Error in lessEqualStrict: "),Object(l.a)(n,i)}}),g=Object(h.a)({lessStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","lessStrict"),i=Object(a.a)(e,"b","lessStrict");return Object(s.e)(n.shape,i.shape,"Error in lessStrict: "),Object(c.a)(n,i)}}),y=Object(h.a)({notEqualStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","notEqualStrict"),i=Object(a.a)(e,"b","notEqualStrict");return Object(s.e)(n.shape,i.shape,"Error in notEqualStrict: "),Object(d.a)(n,i)}})},"8oxB":function(t,e){var n,r,a=t.exports={};function s(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(t){if(n===setTimeout)return setTimeout(t,0);if((n===s||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"===typeof setTimeout?setTimeout:s}catch(t){n=s}try{r="function"===typeof clearTimeout?clearTimeout:i}catch(t){r=i}}();var u,c=[],l=!1,d=-1;function h(){l&&u&&(l=!1,u.length?c=u.concat(c):d=-1,c.length&&p())}function p(){if(!l){var t=o(h);l=!0;for(var e=c.length;e;){for(u=c,c=[];++d<e;)u&&u[d].run();d=-1,e=c.length}u=null,l=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function m(){}a.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];c.push(new f(t,e)),1!==c.length||l||o(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(t){return[]},a.binding=function(t){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(t){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},"90yW":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("NNfn"),a=n("o/e8"),s=n("atXS");const i=async function(t,e){const n=Object(a.a)(t,"x","setdiff1d"),i=Object(a.a)(e,"y","setdiff1d");s.b(n.dtype===i.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`),s.b(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),s.b(1===i.rank,()=>`y should be 1D tensor, but got y (${i.shape}).`);const o=await n.data(),u=await i.data(),c=new Set(u);let l=0;for(let r=0;r<o.length;r++)c.has(o[r])||l++;const d=new r.b([l],n.dtype),h=new r.b([l],"int32");for(let r=0,a=0;r<o.length;r++)c.has(o[r])||(d.values[a]=o[r],h.values[a]=r,a++);return[d.toTensor(),h.toTensor()]}},"91d6":function(t,e,n){"use strict";n.d(e,"a",(function(){return b}));var r=n("o/e8"),a=n("atXS"),s=n("iuCH"),i=n("NuWS"),o=n("wCH+"),u=n("rm0a"),c=n("VO80"),l=n("yfHJ"),d=n("NclT"),h=n("AV8V"),p=n("Fjpt"),f=n("k7Jv"),m=n("4FMF");const b=Object(c.a)({norm_:function(t,e="euclidean",n=null,c=!1){const b=function t(e,n,r=null){if(0===e.rank)return Object(s.a)(e);if(1!==e.rank&&null===r)return t(Object(d.a)(e,[-1]),n,r);if(1===e.rank||"number"===typeof r||Array.isArray(r)&&1===r.length){if(1===n)return Object(m.a)(Object(s.a)(e),r);if(n===1/0)return Object(o.a)(Object(s.a)(e),r);if(n===-1/0)return Object(u.a)(Object(s.a)(e),r);if("euclidean"===n||2===n)return Object(p.a)(Object(m.a)(Object(l.a)(Object(s.a)(e),Object(h.a)(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return Object(o.a)(Object(m.a)(Object(s.a)(e),r[0]),r[1]-1);if(n===1/0)return Object(o.a)(Object(m.a)(Object(s.a)(e),r[1]),r[0]);if(n===-1/0)return Object(u.a)(Object(m.a)(Object(s.a)(e),r[1]),r[0]);if("fro"===n||"euclidean"===n)return Object(p.a)(Object(m.a)(Object(f.a)(e),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(t=Object(r.a)(t,"x","norm"),e,n);let g=b.shape;if(c){const e=Object(a.I)(n,t.shape);g=i.e(b.shape,e)}return Object(d.a)(b,g)}})},"9JAK":function(t,e,n){"use strict";(function(t,r){let a;function s(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof t)e=t;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function i(t,e){const n=function(){const t=s();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,"b",(function(){return s})),n.d(e,"a",(function(){return i}))}).call(this,n("yLpj"),n("8oxB"))},"9jvw":function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s}));var r=n("atXS");const a=30;function s(t){return t<=a?t:Object(r.G)(t,Math.floor(Math.sqrt(t)))}},"9kyW":function(t,e,n){"use strict";t.exports=function(t){for(var e=5381,n=t.length;n;)e=33*e^t.charCodeAt(--n);return e>>>0}},"ARu+":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("dsKV"),a=n("o/e8"),s=n("x3y4"),i=n("ubnP"),o=n("VO80"),u=n("Z5Ez"),c=n("oJu+");const l=Object(o.a)({divNoNan_:function(t,e){let n=Object(a.a)(t,"a","div"),o=Object(a.a)(e,"b","div");[n,o]=Object(r.makeTypesMatch)(n,o);const l=Object(s.a)(n,o),d=Object(c.a)(l),h=Object(i.a)(o,d);return Object(u.a)(h,d,l)}})},AV8V:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("atXS"),a=n("WVnj");function s(t,e){if((Object(r.A)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(r.A)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(t,[],[],e)}},AoCb:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("BD40");function a(t,e){const n=[];for(let r=0;r<e.length;r++)e[r]&&n.push(r);const a=Object(r.a)(t,"int32"),s=Object(r.a)([n.length,t.length],"int32");for(let r=0;r<n.length;r++){const e=a.indexToLoc(n[r]),i=r*t.length;s.values.set(e,i)}return s.toTensor()}},B3db:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({complex_:function(t,e){const n=Object(s.a)(t,"real","complex"),o=Object(s.a)(e,"imag","complex");i.e(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.a.runKernelFunc(t=>t.complex(n,o),u,null,a.y)}})},B9Yq:function(t,e){t.exports=function(){throw new Error("define cannot be used indirect")}},BD40:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("NNfn"),a=n("atXS");function s(t,e="float32",n){return e=e||"float32",a.c(t),new r.b(t,e,n)}},BLhf:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},BbuY:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("o/e8"),a=n("atXS"),s=n("WVnj");function i(t,e,n){if(Object(a.d)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const i=Object(r.c)(t,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(s.a)(t,e,i,n)}},Bnag:function(t,e){t.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},CKnt:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({round_:function(t){const e=Object(s.a)(t,"x","round"),n={x:e};return r.a.runKernelFunc(t=>t.round(e),n,null,a.mc)}})},CfTU:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("3rNm"),c=n("VO80");const l=Object(c.a)({maximum_:function(t,e){let n=Object(i.a)(t,"a","maximum"),c=Object(i.a)(e,"b","maximum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernelFunc((t,e)=>{const r=t.maximum(n,c);return e([n,c]),r},l,null,a.Ib)}})},"D2/b":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("uBja"),o=n("VO80"),u=n("NclT");const c=Object(o.a)({conv2DBackpropFilter_:function(t,e,n,o,c,l="NHWC",d){let h=t;3===t.rank&&(h=Object(u.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p=e;3===p.rank&&(p=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),s.b(4===h.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+h.shape+"."),s.b(4===p.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+p.shape+"."),s.b(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const f="NHWC"===l?h.shape[3]:h.shape[1],m="NHWC"===l?p.shape[3]:p.shape[1];s.b(f===n[2],()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`),s.b(m===n[3],()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`),null!=d&&s.b(s.v(c),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const b={x:h,dy:p},g={strides:o,pad:c,dataFormat:l,dimRoundingMode:d,filterShape:n};return r.a.runKernelFunc(t=>{const e=i.g(l),r=i.a(h.shape,n,o,1,c,d,!1,e);return t.conv2dDerFilter(h,p,r)},b,null,a.B,g)}})},D4ac:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.a)({resizeNearestNeighbor_:function(t,e,n=!1){const o=Object(s.a)(t,"images","resizeNearestNeighbor");i.b(3===o.rank||4===o.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),i.b(2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+"."),i.b("float32"===o.dtype||"int32"===o.dtype,()=>"`images` must have `int32` or `float32` as dtype");let c=o,l=!1;3===o.rank&&(l=!0,c=Object(u.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const[d,h]=e,p={images:c},f={alignCorners:n,size:e},m=r.a.runKernelFunc((t,e)=>(e([c]),t.resizeNearestNeighbor(c,d,h,n)),p,null,a.ic,f);return l?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},DbV5:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("B3db"),o=n("JLAb"),u=n("VO80"),c=n("17CO"),l=n("oJu+");const d=Object(u.a)({onesLike_:function(t){const e=Object(s.a)(t,"x","onesLike"),n={x:e};return r.a.runKernelFunc((t,n)=>{if("complex64"===e.dtype){const t=d(Object(c.a)(e)),n=Object(l.a)(Object(o.a)(e));return Object(i.a)(t,n)}return t.onesLike(e)},n,null,a.Vb)}})},DrVt:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({pad_:function(t,e,n=0){const i=Object(s.a)(t,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:e,constantValue:n},u={x:i};return r.a.runKernelFunc((t,r)=>(r([i]),t.pad(i,e,n)),u,null,a.Wb,o)}})},E1lT:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({log_:function(t){const e=Object(s.a)(t,"x","log"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.log(e);return n([e]),r},n,null,a.wb)}})},ET5l:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},EWu9:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("o/e8"),a=n("atXS"),s=n("3X4V"),i=n("g4+C"),o=n("VO80"),u=n("NclT");const c=Object(o.a)({separableConv2d_:function(t,e,n,o,c,l=[1,1],d="NHWC"){const h=Object(r.a)(t,"x","separableConv2d"),p=Object(r.a)(e,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=h,b=!1;if(3===h.rank&&(b=!0,m=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===m.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`),a.b(4===p.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`),a.b(4===f.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`),a.b(1===f.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`),a.b(1===f.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`);const g=p.shape[2],y=p.shape[3];a.b(f.shape[2]===g*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${g*y}, but got ${f.shape[2]}.`);const O=Object(i.a)(m,p,o,c,d,l),x=Object(s.a)(O,f,1,"valid",d);return b?Object(u.a)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},EbDI:function(t,e){t.exports=function(t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}},EhIR:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n=function(){var t=4022871197;return function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)}}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function u(t,e){var n=new i(t),r=e&&e.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.alea=u}(0,t,n("B9Yq"))}).call(this,n("YuTi")(t))},Ei6o:function(t,e,n){"use strict";n.d(e,"a",(function(){return g}));var r=n("auKK"),a=n("U45G"),s=n("wFtI"),i=n("o/e8"),o=n("atXS"),u=n("NuWS"),c=n("3rNm"),l=n("x3y4"),d=n("parS"),h=n("wion"),p=n("VO80"),f=n("NclT"),m=n("AV8V"),b=n("4FMF");const g=Object(p.a)({mean_:function(t,e=null,n=!1){const p=Object(i.a)(t,"x","mean"),g=Object(o.I)(e,p.shape),y=Object(u.d)(p.shape,g)[1],O=Object(o.N)(y),x={x:p},w={axis:e,keepDims:n},v=()=>{const t=Object(m.a)(O),r=t.dtype===p.dtype?p:Object(c.a)(p,t.dtype),a=Object(l.a)(r,t);return Object(b.a)(a,e,n)};return Object(a.a)(t=>({value:r.a.runKernelFunc(v,x,null,s.Jb,w),gradFunc:e=>{const n=t.shape.slice();g.forEach(t=>{n[t]=1});const r=Object(f.a)(e,n);return Object(l.a)(Object(d.a)(r,Object(h.a)(t.shape,"float32")),O)}}))(p)}})},EysY:function(t,e,n){"use strict";n.d(e,"a",(function(){return a.a})),n.d(e,"b",(function(){return s.a})),n.d(e,"c",(function(){return i.a})),n.d(e,"d",(function(){return o.a})),n.d(e,"e",(function(){return u.a})),n.d(e,"f",(function(){return c.a})),n.d(e,"g",(function(){return l.a})),n.d(e,"h",(function(){return m})),n.d(e,"i",(function(){return b})),n.d(e,"j",(function(){return g})),n.d(e,"k",(function(){return y.a})),n.d(e,"l",(function(){return O.a})),n.d(e,"m",(function(){return x.a})),n.d(e,"n",(function(){return w.a})),n.d(e,"o",(function(){return v.a})),n.d(e,"p",(function(){return j})),n.d(e,"q",(function(){return I})),n.d(e,"r",(function(){return k})),n.d(e,"s",(function(){return N})),n.d(e,"t",(function(){return S.a})),n.d(e,"u",(function(){return C.a})),n.d(e,"v",(function(){return T.a})),n.d(e,"w",(function(){return A.a})),n.d(e,"x",(function(){return E.a})),n.d(e,"y",(function(){return R.a})),n.d(e,"A",(function(){return $.a})),n.d(e,"B",(function(){return F.a})),n.d(e,"C",(function(){return D.a})),n.d(e,"D",(function(){return _.a})),n.d(e,"E",(function(){return L})),n.d(e,"F",(function(){return B.a})),n.d(e,"G",(function(){return P.a})),n.d(e,"I",(function(){return V.a})),n.d(e,"J",(function(){return W.a})),n.d(e,"K",(function(){return U.a})),n.d(e,"M",(function(){return K.a})),n.d(e,"O",(function(){return H.a})),n.d(e,"P",(function(){return G.a})),n.d(e,"Q",(function(){return X.a})),n.d(e,"R",(function(){return q.a})),n.d(e,"S",(function(){return Y.a})),n.d(e,"T",(function(){return J.a})),n.d(e,"U",(function(){return Z.a})),n.d(e,"V",(function(){return Q.a})),n.d(e,"W",(function(){return tt.a})),n.d(e,"X",(function(){return et.a})),n.d(e,"Y",(function(){return st})),n.d(e,"Z",(function(){return it.a})),n.d(e,"ab",(function(){return ot.a})),n.d(e,"bb",(function(){return ut.a})),n.d(e,"cb",(function(){return ct.a})),n.d(e,"db",(function(){return lt.a})),n.d(e,"eb",(function(){return dt.a})),n.d(e,"fb",(function(){return ht.a})),n.d(e,"gb",(function(){return pt.a})),n.d(e,"hb",(function(){return ft.a})),n.d(e,"ib",(function(){return bt})),n.d(e,"jb",(function(){return gt.a})),n.d(e,"kb",(function(){return yt.a})),n.d(e,"lb",(function(){return Ot.a})),n.d(e,"mb",(function(){return M.a})),n.d(e,"nb",(function(){return xt.a})),n.d(e,"ob",(function(){return wt.a})),n.d(e,"pb",(function(){return vt.a})),n.d(e,"qb",(function(){return jt.a})),n.d(e,"rb",(function(){return It.a})),n.d(e,"sb",(function(){return kt.a})),n.d(e,"tb",(function(){return Nt})),n.d(e,"ub",(function(){return St})),n.d(e,"vb",(function(){return Ct})),n.d(e,"wb",(function(){return Tt})),n.d(e,"xb",(function(){return At.a})),n.d(e,"yb",(function(){return Et.a})),n.d(e,"zb",(function(){return Rt.a})),n.d(e,"Ab",(function(){return $t.a})),n.d(e,"Bb",(function(){return Ft.a})),n.d(e,"Cb",(function(){return Dt.a})),n.d(e,"Db",(function(){return at.a})),n.d(e,"Eb",(function(){return _t.a})),n.d(e,"Fb",(function(){return Mt.a})),n.d(e,"Gb",(function(){return zt.a})),n.d(e,"Hb",(function(){return Lt.a})),n.d(e,"Ib",(function(){return Pt})),n.d(e,"Jb",(function(){return Vt})),n.d(e,"Kb",(function(){return z.a})),n.d(e,"Mb",(function(){return Wt.a})),n.d(e,"Nb",(function(){return Ut.a})),n.d(e,"Ob",(function(){return Ht})),n.d(e,"Pb",(function(){return Gt.a})),n.d(e,"Qb",(function(){return Xt.a})),n.d(e,"Rb",(function(){return qt.a})),n.d(e,"Lb",(function(){return Yt.a})),n.d(e,"z",(function(){return Zt})),n.d(e,"L",(function(){return Ke})),n.d(e,"N",(function(){return He})),n.d(e,"H",(function(){return r}));var r={};n.r(r),n.d(r,"conv2d",(function(){return de})),n.d(r,"depthwiseConv2d",(function(){return fe})),n.d(r,"matMul",(function(){return be}));var a=n("iuCH"),s=n("kRdc"),i=n("34HJ"),o=n("RRa9"),u=n("6J+n"),c=n("l0gX"),l=n("ulO0"),d=n("o/e8"),h=n("atXS"),p=n("cdtJ"),f=n("VO80");const m=Object(f.a)({batchNorm2d_:function(t,e,n,r,a,s){const i=Object(d.a)(t,"x","batchNorm"),o=Object(d.a)(e,"mean","batchNorm"),u=Object(d.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(d.a)(a,"scale","batchNorm")),null!=r&&(l=Object(d.a)(r,"offset","batchNorm")),h.b(2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+"."),h.b(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),h.b(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&h.b(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=l&&h.b(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Object(p.a)(i,o,u,l,c,s)}});const b=Object(f.a)({batchNorm3d_:function(t,e,n,r,a,s){const i=Object(d.a)(t,"x","batchNorm"),o=Object(d.a)(e,"mean","batchNorm"),u=Object(d.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(d.a)(a,"scale","batchNorm")),null!=r&&(l=Object(d.a)(r,"offset","batchNorm")),h.b(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),h.b(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),h.b(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&h.b(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=l&&h.b(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Object(p.a)(i,o,u,l,c,s)}});const g=Object(f.a)({batchNorm4d_:function(t,e,n,r,a,s){const i=Object(d.a)(t,"x","batchNorm"),o=Object(d.a)(e,"mean","batchNorm"),u=Object(d.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(d.a)(a,"scale","batchNorm")),null!=r&&(l=Object(d.a)(r,"offset","batchNorm")),h.b(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),h.b(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),h.b(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&h.b(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=l&&h.b(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Object(p.a)(i,o,u,l,c,s)}});var y=n("BD40"),O=n("3rNm"),x=n("wI/y"),w=n("8Km0"),v=n("ZJ6U");const j=Object(f.a)({concat1d_:function(t){return Object(v.a)(t,0)}});const I=Object(f.a)({concat2d_:function(t,e){return Object(v.a)(t,e)}});const k=Object(f.a)({concat3d_:function(t,e){return Object(v.a)(t,e)}});const N=Object(f.a)({concat4d_:function(t,e){return Object(v.a)(t,e)}});var S=n("dnXz"),C=n("3X4V"),T=n("zR+/"),A=n("FZCF"),E=n("g4+C"),R=n("x3y4"),$=n("njhW"),F=n("ubnP"),D=n("TyAZ"),_=n("2ugP"),M=n("NclT"),z=n("jXH2");const L=Object(f.a)({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const a=Object(y.a)([t,e],r),s=t<=e?t:e;for(let o=0;o<s;++o)a.set(1,o,o);const i=Object(M.a)(a.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return Object(z.a)(Object(_.a)(i,0),[n[0],1,1]);if(2===n.length)return Object(z.a)(Object(_.a)(Object(_.a)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(z.a)(Object(_.a)(Object(_.a)(Object(_.a)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var B=n("RrjA"),P=n("02mo"),V=n("kaMP"),W=n("zvA9"),U=n("uy0A"),K=n("bzdD"),H=n("E1lT"),G=n("gErV"),X=n("4zPZ"),q=n("wCH+"),Y=n("n+ZZ"),J=n("U/2n"),Z=n("CfTU"),Q=n("Ei6o"),tt=n("rm0a"),et=n("8OX7"),nt=n("NuWS"),rt=n("k7Jv"),at=n("oAkI");const st=Object(f.a)({moments_:function(t,e=null,n=!1){t=Object(d.a)(t,"x","moments");const r=Object(h.I)(e,t.shape),a=Object(Q.a)(t,r,n);let s=a.shape;n||(s=Object(nt.e)(a.shape,r));const i=Object(rt.a)(Object(at.a)(Object(O.a)(t,"float32"),Object(M.a)(a,s)));return{mean:a,variance:Object(Q.a)(i,r,n)}}});var it=n("parS"),ot=n("O7f5"),ut=n("1N4k"),ct=n("4iwy"),lt=n("wion"),dt=n("DbV5"),ht=n("DrVt"),pt=n("yfHJ"),ft=n("Ug8H"),mt=n("1OSX");const bt=Object(f.a)({randomNormal_:function(t,e=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new mt.a(e,n,r,!1,a),i=Object(y.a)(t,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var gt=n("hinG"),yt=n("hNYx"),Ot=n("kXpR"),xt=n("0I63"),wt=n("AV8V"),vt=n("s57M"),jt=n("EWu9"),It=n("/7N0"),kt=n("bTzI");const Nt=Object(f.a)({slice1d_:function(t,e,n){const r=Object(d.a)(t,"x","slice1d");return h.b(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Object(kt.a)(r,[e],[n])}});const St=Object(f.a)({slice2d_:function(t,e,n){const r=Object(d.a)(t,"x","slice2d");return h.b(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Object(kt.a)(r,e,n)}});const Ct=Object(f.a)({slice3d_:function(t,e,n){const r=Object(d.a)(t,"x","slice3d");return h.b(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Object(kt.a)(r,e,n)}});const Tt=Object(f.a)({slice4d_:function(t,e,n){const r=Object(d.a)(t,"x","slice4d");return h.b(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Object(kt.a)(r,e,n)}});var At=n("X4fa"),Et=n("n/2y"),Rt=n("RbuM"),$t=n("Fjpt"),Ft=n("0fRV"),Dt=n("1U0N"),_t=n("4FMF"),Mt=n("iIjY"),zt=n("NX3e"),Lt=n("lg8H"),Bt=n("WVnj");function Pt(t,e,n){if(Object(h.d)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(d.c)(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(Bt.a)(t,e,r,n)}function Vt(t,e,n){if(Object(h.d)(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(d.c)(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(Bt.a)(t,e,r,n)}var Wt=n("fmoR"),Ut=n("OkRW"),Kt=n("auKK");function Ht(t,e=!0,n,r){return Kt.a.makeVariable(t,e,n,r)}var Gt=n("Z5Ez"),Xt=n("Wiw4"),qt=n("oJu+"),Yt=n("yRKQ"),Jt=n("NNfn");const Zt=Object(f.a)({dropout_:function(t,e,n,r){const a=Object(d.a)(t,"x","dropout");if(h.b("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),h.b(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof Jt.a?a.clone():a;const i=function(t,e){if(null==e)return t.shape.slice();if(h.a(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(a,n),o=1-e,u=Object(R.a)(Object(P.a)(Object(s.a)(Object(gt.a)(i,0,1,"float32",r),o)),o);return Object(it.a)(a,u)}});var Qt=n("th0q"),te=n("Grcp"),ee=n("THqV"),ne=n("adw1"),re=n("U45G"),ae=n("wFtI"),se=n("dsKV"),ie=n("Um8L"),oe=n("D2/b"),ue=n("c9N1"),ce=n("uBja"),le=n("R0ls");const de=Object(f.a)({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:u,activation:c="linear",preluActivationWeights:l}){if(c=c||"linear",!1===Object(le.d)(Kt.a.state.gradientDepth,c)){let d=Object(C.a)(t,e,n,r,a,i,o);return null!=u&&(d=Object(s.a)(d,u)),Object(le.a)(d,c,l)}const p=Object(d.a)(t,"x","conv2d"),f=Object(d.a)(e,"filter","conv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(M.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),h.b(4===m.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+m.rank+"."),h.b(4===f.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+f.rank+"."),null!=o&&h.b(h.v(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`),h.b(m.shape[3]===f.shape[2],()=>`Error in conv2d: depth of input (${m.shape[3]}) must match input depth for filter ${f.shape[2]}.`),h.b(ce.h(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),h.b("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const g=ce.a(m.shape,f.shape,n,i,r,o);let y,O;null!=u&&(y=Object(d.a)(u,"bias","fused conv2d"),[y]=Object(se.makeTypesMatch)(y,p),ie.a(g.outShape,y.shape)),null!=l&&(O=Object(d.a)(l,"prelu weights","fused conv2d"));const x=(t,e)=>{const[a,s,o,u]=e,l=Object(le.c)(t,o,c);h.b(ce.i(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const d=[Object(ue.a)(s.shape,l,a,n,r),Object(oe.a)(s,l,a.shape,n,r)];if(null!=u){const t=Object(le.b)(u,l);d.push(t)}return d},w=t=>t.fusedConv2d({input:m,filter:f,convInfo:g,bias:y,activation:c,preluActivationWeights:O}),v={x:m,filter:f,bias:y,preluActivationWeights:O},j={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:o,activation:c};if(null==u){return Object(re.a)((t,e,n)=>{let r=Kt.a.runKernelFunc(w,v,null,ae.fb,j);return n([e,t,r]),b&&(r=Object(M.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(m,f)}return Object(re.a)((t,e,n,r)=>{let a=Kt.a.runKernelFunc(w,v,null,ae.fb,j);return r([e,t,a,n]),b&&(a=Object(M.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(m,f,y)}});var he=n("aSZd"),pe=n("jLCh");const fe=Object(f.a)({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:u,activation:c="linear",preluActivationWeights:l}){if(!1===Object(le.d)(Kt.a.state.gradientDepth,c)){let d=Object(E.a)(t,e,n,r,a,i,o);return null!=u&&(d=Object(s.a)(d,u)),Object(le.a)(d,c,l)}const p=Object(d.a)(t,"x","depthwiseConv2d"),f=Object(d.a)(e,"filter","depthwiseConv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(M.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),h.b(4===m.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),h.b(4===f.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`),h.b(m.shape[3]===f.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),null==i&&(i=[1,1]),h.b(ce.h(n,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),null!=o&&h.b(h.v(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`);const g=ce.a(m.shape,f.shape,n,i,r,o,!0);let y,O;null!=u&&(y=Object(d.a)(u,"bias","fused conv2d"),[y]=Object(se.makeTypesMatch)(y,p),ie.a(g.outShape,y.shape)),null!=l&&(O=Object(d.a)(l,"prelu weights","fused depthwiseConv2d"));const x=(t,e)=>{h.b(ce.i(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[a,s,u,l]=e,d=Object(le.c)(t,u,c),p=Object(pe.a)(s.shape,d,a,n,r,i,o),f=Object(he.a)(s,d,a.shape,n,r,i,o);if(null!=l){return[p,f,Object(le.b)(y,d)]}return[p,f]},w=t=>t.fusedDepthwiseConv2D({input:m,filter:f,convInfo:g,bias:y,activation:c,preluActivationWeights:O}),v={x:m,filter:f,bias:y,preluActivationWeights:O},j={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:o,activation:c};if(null==u){return Object(re.a)((t,e,n)=>{let r=Kt.a.runKernelFunc(w,v,null,ae.gb,j);return n([e,t,r]),b&&(r=Object(M.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(m,f)}return Object(re.a)((t,e,n,r)=>{let a=Kt.a.runKernelFunc(w,v,null,ae.gb,j);return r([e,t,a,n]),b&&(a=Object(M.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(m,f,y)}});var me=n("SHv8");const be=Object(f.a)({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:a,activation:i="linear",preluActivationWeights:o}){if(!1===Object(le.d)(Kt.a.state.gradientDepth,i)){let u=Object(me.a)(t,e,n,r);return null!=a&&(u=Object(s.a)(u,a)),Object(le.a)(u,i,o)}let u=Object(d.a)(t,"a","fused matMul"),c=Object(d.a)(e,"b","fused matMul");[u,c]=Object(se.makeTypesMatch)(u,c);const l=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=r?c.shape[c.rank-1]:c.shape[c.rank-2],f=n?u.shape[u.rank-1]:u.shape[u.rank-2],m=r?c.shape[c.rank-2]:c.shape[c.rank-1],b=u.shape.slice(0,-2),g=c.shape.slice(0,-2),y=h.N(b),O=h.N(g);h.b(u.rank>=2&&c.rank>=2&&u.rank===c.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${c.rank}.`),h.b(h.a(b,g),()=>`Error in fused matMul: outer dimensions (${b}) and (${g}) of Tensors with shapes ${u.shape} and `+c.shape+" must match."),h.b(l===p,()=>`Error in fused matMul: inner shapes (${l}) and (${p}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=u.shape.slice(0,-2).concat([f,m]),w=n?Object(M.a)(u,[y,l,f]):Object(M.a)(u,[y,f,l]),v=r?Object(M.a)(c,[O,m,p]):Object(M.a)(c,[O,p,m]);let j,I;null!=a&&(j=Object(d.a)(a,"bias","fused matMul"),[j]=Object(se.makeTypesMatch)(j,u),ie.a(x,j.shape)),null!=o&&(I=Object(d.a)(o,"prelu weights","fused matMul"));const k=(t,e)=>{const[s,o,u,c]=e,l=Object(le.c)(Object(M.a)(t,u.shape),u,i);let d,h;if(n||r?!n&&r?(d=Object(me.a)(l,o,!1,!1),h=Object(me.a)(l,s,!0,!1)):n&&!r?(d=Object(me.a)(o,l,!1,!0),h=Object(me.a)(s,l,!1,!1)):(d=Object(me.a)(o,l,!0,!0),h=Object(me.a)(l,s,!0,!0)):(d=Object(me.a)(l,o,!1,!0),h=Object(me.a)(s,l,!0,!1)),null!=a){return[d,h,Object(le.b)(c,l)]}return[d,h]},N=t=>t.fusedBatchMatMul({a:w,b:v,transposeA:n,transposeB:r,bias:j,activation:i,preluActivationWeights:I}),S={a:w,b:v,bias:j,preluActivationWeights:I},C={transposeA:n,transposeB:r,activation:i};if(null==a){return Object(re.a)((t,e,n)=>{const r=Kt.a.runKernelFunc(N,S,null,ae.Rc,C);return n([t,e,r]),{value:Object(M.a)(r,x),gradFunc:k}})(w,v)}return Object(re.a)((t,e,n,r)=>{const a=Kt.a.runKernelFunc(N,S,null,ae.Rc,C);return r([t,e,a,n]),{value:Object(M.a)(a,x),gradFunc:k}})(w,v,j)}});function ge(t,e,n){const r=1-t%2,a=new Float32Array(t);for(let s=0;s<t;++s){const i=2*Math.PI*s/(t+r-1);a[s]=e-n*Math.cos(i)}return Object(Lt.a)(a,"float32")}Object(f.a)({hammingWindow_:function(t){return ge(t,.54,.46)}});const ye=Object(f.a)({hannWindow_:function(t){return ge(t,.5,.5)}});const Oe=Object(f.a)({frame_:function(t,e,n,r=!1,a=0){let s=0;const i=[];for(;s+e<=t.size;)i.push(Object(kt.a)(t,s,e)),s+=n;if(r)for(;s<t.size;){const r=s+e-t.size,o=Object(v.a)([Object(kt.a)(t,s,e-r),Object(B.a)([r],a)]);i.push(o),s+=n}return 0===i.length?Pt([],[0,e]):Object(M.a)(Object(v.a)(i),[i.length,e])}});Object(f.a)({stft_:function(t,e,n,r,a=ye){var s;null==r&&(s=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const i=Oe(t,e,n),o=Object(it.a)(i,a(e)),u=[];for(let c=0;c<i.shape[0];c++)u.push(Object(Qt.a)(Object(kt.a)(o,[c,0],[1,e]),r));return Object(v.a)(u)}});const xe=Object(f.a)({cropAndResize_:function(t,e,n,r,a,s){const i=Object(d.a)(t,"image","cropAndResize"),o=Object(d.a)(e,"boxes","cropAndResize","float32"),u=Object(d.a)(n,"boxInd","cropAndResize","int32");a=a||"bilinear",s=s||0;const c=o.shape[0];h.b(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),h.b(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),h.b(1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),h.b(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),h.b(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),h.b("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);const l={image:i,boxes:o,boxInd:u},p={method:a,extrapolationValue:s,cropSize:r};return Kt.a.runKernelFunc(t=>t.cropAndResize(i,o,u,r,a,s),l,null,ae.I,p)}});const we=Object(f.a)({flipLeftRight_:function(t){const e=Object(d.a)(t,"image","flipLeftRight","float32");h.b(4===e.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return Kt.a.runKernel(ae.ab,n,{})}});const ve=Object(f.a)({rotateWithOffset_:function(t,e,n=0,r=.5){const a=Object(d.a)(t,"image","rotateWithOffset","float32");h.b(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const s={image:a},i={radians:e,fillValue:n,center:r};return Kt.a.runKernel(ae.lc,s,i)}});function je(t,e,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=t.shape[0];return n=Math.min(n,i),h.b(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),h.b(2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),h.b(4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1]),h.b(1===e.rank,()=>"scores must be a 1D tensor"),h.b(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+e.shape[0]),h.b(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Ie=Object(f.a)({nonMaxSuppression_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(d.a)(t,"boxes","nonMaxSuppression"),i=Object(d.a)(e,"scores","nonMaxSuppression"),o=je(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return Kt.a.runKernelFunc(t=>t.nonMaxSuppression(s,i,n,r,a),{boxes:s,scores:i},null,ae.Qb,u)}});var ke=n("g4m1");const Ne=async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(d.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(d.a)(e,"scores","nonMaxSuppressionAsync"),o=je(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),c=u[0],l=u[1],h=Object(ke.a)(c,l,n,r,a);return s!==t&&s.dispose(),i!==e&&i.dispose(),h};const Se=Object(f.a)({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(d.a)(t,"boxes","nonMaxSuppression"),o=Object(d.a)(e,"scores","nonMaxSuppression"),u=je(i,o,n,r,a,s),c={boxes:i,scores:o},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},h=Kt.a.runKernel(ae.Sb,c,l);return{selectedIndices:h[0],selectedScores:h[1]}}});const Ce=async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(d.a)(t,"boxes","nonMaxSuppressionAsync"),o=Object(d.a)(e,"scores","nonMaxSuppressionAsync"),u=je(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),l=c[0],h=c[1],p=Object(ke.c)(l,h,n,r,a,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),p};const Te=Object(f.a)({nonMaxSuppressionPadded_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(d.a)(t,"boxes","nonMaxSuppression"),o=Object(d.a)(e,"scores","nonMaxSuppression"),u=je(i,o,n,r,a,null),c={boxes:i,scores:o},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},h=Kt.a.runKernel(ae.Rb,c,l);return{selectedIndices:h[0],validOutputs:h[1]}}});const Ae=async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(d.a)(t,"boxes","nonMaxSuppressionAsync"),o=Object(d.a)(e,"scores","nonMaxSuppressionAsync"),u=je(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,[p,f]=await Promise.all([i.data(),o.data()]),m=Object(ke.b)(p,f,c,l,h,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),m};var Ee=n("c/ib"),Re=n("D4ac"),$e=n("shz4");const Fe=Object(f.a)({bandPart_:function(t,e,n){Object(h.b)(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),Object(h.b)(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(d.a)(t,"a","bandPart");Object(h.b)(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[s,i]=r.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=s),n<0&&(n=i);const o=Object(M.a)(Object(yt.a)(0,s,1,"int32"),[-1,1]),u=Object(yt.a)(0,i,1,"int32"),c=Object(at.a)(o,u),l=Object(X.a)(Object($e.a)(c,Object(wt.a)(+e,"int32")),Object(U.a)(c,Object(wt.a)(-n,"int32"))),p=Object(Xt.a)([s,i],r.dtype);return Object(M.a)(Object(Dt.a)(Object(Ut.a)(Object(M.a)(r,[-1,s,i])).map(t=>Object(Gt.a)(l,t,p))),a)}});var De=n("91d6");const _e=Object(f.a)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Object(h.b)(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)Object(h.b)(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=Object(Rt.a)(t,t.shape[0],0).map(t=>Object(Ft.a)(t,[0]));Object(h.b)(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let a=0;a<t.length;++a)n.push(Kt.a.tidy(()=>{let t=r[a];if(a>0)for(let e=0;e<a;++e){const r=Object(it.a)(Object(_t.a)(Object(it.a)(n[e],t)),n[e]);t=Object(at.a)(t,r)}return Object(R.a)(t,Object(De.a)(t,"euclidean"))}));return e?Object(Dt.a)(n,0):n}});var Me=n("wE5H");function ze(t,e=!1){return Kt.a.tidy(()=>{Object(h.b)(2===t.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let a=L(n),s=Object(w.a)(t);const i=Pt([[1]],[1,1]);let o=Object(w.a)(i);const u=n>=r?r:n;for(let t=0;t<u;++t){const e=s,u=o,c=a;[o,s,a]=Kt.a.tidy(()=>{const e=Object(kt.a)(s,[t,t],[n-t,1]),u=Object(De.a)(e),c=Object(kt.a)(s,[t,t],[1,1]),l=Object(Gt.a)(Object(W.a)(c,0),Pt([[-1]]),Pt([[1]])),d=Object(at.a)(c,Object(it.a)(l,u)),h=Object(R.a)(e,d);o=1===h.shape[0]?Object(w.a)(i):Object(v.a)([i,Object(kt.a)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Object(ot.a)(Object(R.a)(Object(me.a)(l,d),u)),f=Object(kt.a)(s,[t,0],[n-t,r]),m=Object(it.a)(p,o),b=Object(Yt.a)(o);if(0===t)s=Object(at.a)(f,Object(me.a)(m,Object(me.a)(b,f)));else{const e=Object(at.a)(f,Object(me.a)(m,Object(me.a)(b,f)));s=Object(v.a)([Object(kt.a)(s,[0,0],[t,r]),e],0)}const g=Object(Yt.a)(m),y=Object(kt.a)(a,[0,t],[n,a.shape[1]-t]);if(0===t)a=Object(at.a)(y,Object(me.a)(Object(me.a)(y,o),g));else{const e=Object(at.a)(y,Object(me.a)(Object(me.a)(y,o),g));a=Object(v.a)([Object(kt.a)(a,[0,0],[n,t]),e],1)}return[o,s,a]}),Object(Me.c)([e,u,c])}return!e&&n>r&&(a=Object(kt.a)(a,[0,0],[n,r]),s=Object(kt.a)(s,[0,0],[r,r])),[a,s]})}const Le=Object(f.a)({qr_:function(t,e=!1){if(Object(h.b)(t.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+t.rank),2===t.rank)return ze(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=Object(Ut.a)(Object(M.a)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),a=[],s=[];r.forEach(t=>{const[n,r]=ze(t,e);a.push(n),s.push(r)});return[Object(M.a)(Object(Dt.a)(a,0),t.shape),Object(M.a)(Object(Dt.a)(s,0),t.shape)]}}});var Be=n("V+B2");const Pe=Object(f.a)({computeWeightedLoss_:function(t,e,n=Be.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(d.a)(t,"losses","computeWeightedLoss");let a=null;null!=e&&(a=Object(d.a)(e,"weights","computeWeightedLoss"));const s=null==a?r:Object(it.a)(r,a);if(n===Be.a.NONE)return s;if(n===Be.a.SUM)return Object(_t.a)(s);if(n===Be.a.MEAN){if(null==a)return Object(Q.a)(s);{const t=r.size/a.size,e=Object(R.a)(Object(_t.a)(s),Object(_t.a)(a));return t>1?Object(R.a)(e,Object(wt.a)(t)):e}}if(n===Be.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(R.a)(Object(_t.a)(s),Object(wt.a)(r.size));{const t=Object(it.a)(a,Object(lt.a)(r.shape)),e=Object(O.a)(Object(_t.a)(Object(ut.a)(t,Object(wt.a)(0))),"float32");return Object(R.a)(Object(_t.a)(s),e)}}throw Error("Unknown reduction: "+n)}});Object(f.a)({absoluteDifference_:function(t,e,n,r=Be.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(d.a)(t,"labels","absoluteDifference"),i=Object(d.a)(e,"predictions","absoluteDifference");let o=null;null!=n&&(o=Object(d.a)(n,"weights","absoluteDifference")),Object(h.e)(s.shape,i.shape,"Error in absoluteDifference: ");const u=Object(a.a)(Object(at.a)(s,i));return Pe(u,o,r)}});Object(f.a)({cosineDistance_:function(t,e,n,r,a=Be.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(d.a)(t,"labels","cosineDistance"),i=Object(d.a)(e,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(d.a)(r,"weights","cosineDistance")),Object(h.e)(s.shape,i.shape,"Error in cosineDistance: ");const u=Object(wt.a)(1),c=Object(at.a)(u,Object(_t.a)(Object(it.a)(s,i),n,!0));return Pe(c,o,a)}});Object(f.a)({hingeLoss_:function(t,e,n,r=Be.a.SUM_BY_NONZERO_WEIGHTS){let a=Object(d.a)(t,"labels","hingeLoss");const s=Object(d.a)(e,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(d.a)(n,"weights","hingeLoss")),Object(h.e)(a.shape,s.shape,"Error in hingeLoss: ");const o=Object(wt.a)(1);a=Object(at.a)(Object(it.a)(Object(wt.a)(2),a),o);const u=Object(Ot.a)(Object(at.a)(o,Object(it.a)(a,s)));return Pe(u,i,r)}});Object(f.a)({huberLoss_:function(t,e,n,r=1,i=Be.a.SUM_BY_NONZERO_WEIGHTS){const o=Object(d.a)(t,"labels","huberLoss"),u=Object(d.a)(e,"predictions","huberLoss");let c=null;null!=n&&(c=Object(d.a)(n,"weights","huberLoss")),Object(h.e)(o.shape,u.shape,"Error in huberLoss: ");const l=Object(wt.a)(r),p=Object(a.a)(Object(at.a)(u,o)),f=Object(et.a)(p,l),m=Object(at.a)(p,f),b=Object(s.a)(Object(it.a)(Object(wt.a)(.5),Object(rt.a)(f)),Object(it.a)(l,m));return Pe(b,c,i)}});Object(f.a)({logLoss_:function(t,e,n,r=1e-7,a=Be.a.SUM_BY_NONZERO_WEIGHTS){const i=Object(d.a)(t,"labels","logLoss"),o=Object(d.a)(e,"predictions","logLoss");let u=null;null!=n&&(u=Object(d.a)(n,"weights","logLoss")),Object(h.e)(i.shape,o.shape,"Error in logLoss: ");const c=Object(wt.a)(1),l=Object(wt.a)(r),p=Object(ot.a)(Object(it.a)(i,Object(H.a)(Object(s.a)(o,l)))),f=Object(it.a)(Object(at.a)(c,i),Object(H.a)(Object(s.a)(Object(at.a)(c,o),l))),m=Object(at.a)(p,f);return Pe(m,u,a)}});var Ve=n("QYQ3");Object(f.a)({meanSquaredError_:function(t,e,n,r=Be.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(d.a)(t,"labels","meanSquaredError"),s=Object(d.a)(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(d.a)(n,"weights","meanSquaredError")),Object(h.e)(a.shape,s.shape,"Error in meanSquaredError: ");const o=Object(Ve.a)(a,s);return Pe(o,i,r)}});var We=n("RrGL");Object(f.a)({sigmoidCrossEntropy_:function(t,e,n,r=0,i=Be.a.SUM_BY_NONZERO_WEIGHTS){let o=Object(d.a)(t,"multiClassLabels","sigmoidCrossEntropy");const u=Object(d.a)(e,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(d.a)(n,"weights","sigmoidCrossEntropy")),Object(h.e)(o.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Object(wt.a)(r),e=Object(wt.a)(1),n=Object(wt.a)(.5);o=Object(s.a)(Object(it.a)(o,Object(at.a)(e,t)),Object(it.a)(n,t))}const l=function(t,e){const n=Object(d.a)(t,"labels","sigmoidCrossEntropyWithLogits"),r=Object(d.a)(e,"logits","sigmoidCrossEntropyWithLogits");Object(h.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=Object(Ot.a)(r),o=Object(it.a)(r,n),u=Object(We.a)(Object(D.a)(Object(ot.a)(Object(a.a)(r))));return Object(s.a)(Object(at.a)(i,o),u)}(o,u);return Pe(l,c,i)}});var Ue=n("r9q9");Object(f.a)({softmaxCrossEntropy_:function(t,e,n,r=0,a=Be.a.SUM_BY_NONZERO_WEIGHTS){let i=Object(d.a)(t,"onehotLabels","softmaxCrossEntropy");const o=Object(d.a)(e,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=Object(d.a)(n,"weights","softmaxCrossEntropy")),Object(h.e)(i.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Object(wt.a)(r),e=Object(wt.a)(1),n=Object(wt.a)(i.shape[1]);i=Object(s.a)(Object(it.a)(i,Object(at.a)(e,t)),Object(R.a)(t,n))}const c=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was `+n);return Object(re.a)((t,e,r)=>{const a=Object(Ue.a)(e,[n],!0),s=Object(at.a)(Object(O.a)(e,"float32"),a);r([t,s]);const i=Object(ot.a)(Object(it.a)(s,t));return{value:Object(_t.a)(i,[n]),gradFunc:(t,e)=>{const[r,a]=e,s=Object(nt.e)(t.shape,[n]);return[Object(it.a)(Object(M.a)(t,s),Object(at.a)(Object(O.a)(r,"float32"),Object(D.a)(a))),Object(it.a)(Object(M.a)(t,s),Object(at.a)(Object(D.a)(a),Object(O.a)(r,"float32")))]}}})(t,e)}(i,o);return Pe(c,u,a)}}),te.a,ee.a,Qt.a,ne.a;const Ke={flipLeftRight:we,resizeNearestNeighbor:Re.a,resizeBilinear:Ee.a,rotateWithOffset:ve,cropAndResize:xe,nonMaxSuppression:Ie,nonMaxSuppressionAsync:Ne,nonMaxSuppressionWithScore:Se,nonMaxSuppressionWithScoreAsync:Ce,nonMaxSuppressionPadded:Te,nonMaxSuppressionPaddedAsync:Ae},He={bandPart:Fe,gramSchmidt:_e,qr:Le}},FZCF:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.a)({conv3d_:function(t,e,n,u,l="NDHWC",d=[1,1,1]){const h=Object(s.a)(t,"x","conv3d"),p=Object(s.a)(e,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===f.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`),i.b(5===p.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+p.rank+"."),i.b(f.shape[4]===p.shape[3],()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${p.shape[3]}.`),i.b(Object(o.h)(n,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`),i.b("NDHWC"===l,()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`);const b={x:f,filter:p},g={strides:n,pad:u,dataFormat:l,dilations:d},y=r.a.runKernelFunc((t,e)=>{const r=o.b(f.shape,p.shape,n,d,u),a=t.conv3d(f,p,r);return e([f,p]),a},b,null,a.D,g);return m?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},Fjpt:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({sqrt_:function(t){const e=Object(s.a)(t,"x","sqrt"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.sqrt(e);return n([e]),r},n,null,a.Bc)}})},G6IW:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({expm1_:function(t){const e=Object(s.a)(t,"x","expm1"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.expm1(e);return n([e]),r},n,null,a.X)}})},Grcp:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80");const o=Object(i.a)({fft_:function(t){Object(s.b)("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return r.a.runKernelFunc(e=>{const n=t.shape[t.shape.length-1],r=t.size/n,a=t.as2D(r,n);return e.fft(a).reshape(t.shape)},e,null,a.Y)}})},H7XF:function(t,e,n){"use strict";e.byteLength=function(t){var e=c(t),n=e[0],r=e[1];return 3*(n+r)/4-r},e.toByteArray=function(t){var e,n,r=c(t),i=r[0],o=r[1],u=new s(function(t,e,n){return 3*(e+n)/4-n}(0,i,o)),l=0,d=o>0?i-4:i;for(n=0;n<d;n+=4)e=a[t.charCodeAt(n)]<<18|a[t.charCodeAt(n+1)]<<12|a[t.charCodeAt(n+2)]<<6|a[t.charCodeAt(n+3)],u[l++]=e>>16&255,u[l++]=e>>8&255,u[l++]=255&e;2===o&&(e=a[t.charCodeAt(n)]<<2|a[t.charCodeAt(n+1)]>>4,u[l++]=255&e);1===o&&(e=a[t.charCodeAt(n)]<<10|a[t.charCodeAt(n+1)]<<4|a[t.charCodeAt(n+2)]>>2,u[l++]=e>>8&255,u[l++]=255&e);return u},e.fromByteArray=function(t){for(var e,n=t.length,a=n%3,s=[],i=0,o=n-a;i<o;i+=16383)s.push(l(t,i,i+16383>o?o:i+16383));1===a?(e=t[n-1],s.push(r[e>>2]+r[e<<4&63]+"==")):2===a&&(e=(t[n-2]<<8)+t[n-1],s.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"="));return s.join("")};for(var r=[],a=[],s="undefined"!==typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,u=i.length;o<u;++o)r[o]=i[o],a[i.charCodeAt(o)]=o;function c(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function l(t,e,n){for(var a,s,i=[],o=e;o<n;o+=3)a=(t[o]<<16&16711680)+(t[o+1]<<8&65280)+(255&t[o+2]),i.push(r[(s=a)>>18&63]+r[s>>12&63]+r[s>>6&63]+r[63&s]);return i.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},HDXh:function(t,e,n){"use strict";(function(t){var r=n("H7XF"),a=n("kVK+"),s=n("49sm");function i(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function o(t,e){if(i()<e)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=u.prototype:(null===t&&(t=new u(e)),t.length=e),t}function u(t,e,n){if(!u.TYPED_ARRAY_SUPPORT&&!(this instanceof u))return new u(t,e,n);if("number"===typeof t){if("string"===typeof e)throw new Error("If encoding is specified then the first argument must be a string");return d(this,t)}return c(this,t,e,n)}function c(t,e,n,r){if("number"===typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r);u.TYPED_ARRAY_SUPPORT?(t=e).__proto__=u.prototype:t=h(t,e);return t}(t,e,n,r):"string"===typeof e?function(t,e,n){"string"===typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(e,n),a=(t=o(t,r)).write(e,n);a!==r&&(t=t.slice(0,a));return t}(t,e,n):function(t,e){if(u.isBuffer(e)){var n=0|p(e.length);return 0===(t=o(t,n)).length||e.copy(t,0,0,n),t}if(e){if("undefined"!==typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!==typeof e.length||(r=e.length)!==r?o(t,0):h(t,e);if("Buffer"===e.type&&s(e.data))return h(t,e.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function l(t){if("number"!==typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function d(t,e){if(l(e),t=o(t,e<0?0:0|p(e)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function h(t,e){var n=e.length<0?0:0|p(e.length);t=o(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function p(t){if(t>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|t}function f(t,e){if(u.isBuffer(t))return t.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!==typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return B(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return P(t).length;default:if(r)return B(t).length;e=(""+e).toLowerCase(),r=!0}}function m(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return T(this,e,n);case"utf8":case"utf-8":return N(this,e,n);case"ascii":return S(this,e,n);case"latin1":case"binary":return C(this,e,n);case"base64":return k(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function b(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function g(t,e,n,r,a){if(0===t.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(a)return-1;n=t.length-1}else if(n<0){if(!a)return-1;n=0}if("string"===typeof e&&(e=u.from(e,r)),u.isBuffer(e))return 0===e.length?-1:y(t,e,n,r,a);if("number"===typeof e)return e&=255,u.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):y(t,[e],n,r,a);throw new TypeError("val must be string, number or Buffer")}function y(t,e,n,r,a){var s,i=1,o=t.length,u=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;i=2,o/=2,u/=2,n/=2}function c(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}if(a){var l=-1;for(s=n;s<o;s++)if(c(t,s)===c(e,-1===l?0:s-l)){if(-1===l&&(l=s),s-l+1===u)return l*i}else-1!==l&&(s-=s-l),l=-1}else for(n+u>o&&(n=o-u),s=n;s>=0;s--){for(var d=!0,h=0;h<u;h++)if(c(t,s+h)!==c(e,h)){d=!1;break}if(d)return s}return-1}function O(t,e,n,r){n=Number(n)||0;var a=t.length-n;r?(r=Number(r))>a&&(r=a):r=a;var s=e.length;if(s%2!==0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var i=0;i<r;++i){var o=parseInt(e.substr(2*i,2),16);if(isNaN(o))return i;t[n+i]=o}return i}function x(t,e,n,r){return V(B(e,t.length-n),t,n,r)}function w(t,e,n,r){return V(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function v(t,e,n,r){return w(t,e,n,r)}function j(t,e,n,r){return V(P(e),t,n,r)}function I(t,e,n,r){return V(function(t,e){for(var n,r,a,s=[],i=0;i<t.length&&!((e-=2)<0);++i)r=(n=t.charCodeAt(i))>>8,a=n%256,s.push(a),s.push(r);return s}(e,t.length-n),t,n,r)}function k(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function N(t,e,n){n=Math.min(t.length,n);for(var r=[],a=e;a<n;){var s,i,o,u,c=t[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:128===(192&(s=t[a+1]))&&(u=(31&c)<<6|63&s)>127&&(l=u);break;case 3:s=t[a+1],i=t[a+2],128===(192&s)&&128===(192&i)&&(u=(15&c)<<12|(63&s)<<6|63&i)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:s=t[a+1],i=t[a+2],o=t[a+3],128===(192&s)&&128===(192&i)&&128===(192&o)&&(u=(15&c)<<18|(63&s)<<12|(63&i)<<6|63&o)>65535&&u<1114112&&(l=u)}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);var n="",r=0;for(;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=4096));return n}(r)}e.Buffer=u,e.SlowBuffer=function(t){+t!=t&&(t=0);return u.alloc(+t)},e.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"===typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(e){return!1}}(),e.kMaxLength=i(),u.poolSize=8192,u._augment=function(t){return t.__proto__=u.prototype,t},u.from=function(t,e,n){return c(null,t,e,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(t,e,n){return function(t,e,n,r){return l(e),e<=0?o(t,e):void 0!==n?"string"===typeof r?o(t,e).fill(n,r):o(t,e).fill(n):o(t,e)}(null,t,e,n)},u.allocUnsafe=function(t){return d(null,t)},u.allocUnsafeSlow=function(t){return d(null,t)},u.isBuffer=function(t){return!(null==t||!t._isBuffer)},u.compare=function(t,e){if(!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,a=0,s=Math.min(n,r);a<s;++a)if(t[a]!==e[a]){n=t[a],r=e[a];break}return n<r?-1:r<n?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(t,e){if(!s(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=u.allocUnsafe(e),a=0;for(n=0;n<t.length;++n){var i=t[n];if(!u.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,a),a+=i.length}return r},u.byteLength=f,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var t=this.length;if(t%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)b(this,e,e+1);return this},u.prototype.swap32=function(){var t=this.length;if(t%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)b(this,e,e+3),b(this,e+1,e+2);return this},u.prototype.swap64=function(){var t=this.length;if(t%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)b(this,e,e+7),b(this,e+1,e+6),b(this,e+2,e+5),b(this,e+3,e+4);return this},u.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?N(this,0,t):m.apply(this,arguments)},u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},u.prototype.compare=function(t,e,n,r,a){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),e<0||n>t.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&e>=n)return 0;if(r>=a)return-1;if(e>=n)return 1;if(this===t)return 0;for(var s=(a>>>=0)-(r>>>=0),i=(n>>>=0)-(e>>>=0),o=Math.min(s,i),c=this.slice(r,a),l=t.slice(e,n),d=0;d<o;++d)if(c[d]!==l[d]){s=c[d],i=l[d];break}return s<i?-1:i<s?1:0},u.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},u.prototype.indexOf=function(t,e,n){return g(this,t,e,n,!0)},u.prototype.lastIndexOf=function(t,e,n){return g(this,t,e,n,!1)},u.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"===typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-e;if((void 0===n||n>a)&&(n=a),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return O(this,t,e,n);case"utf8":case"utf-8":return x(this,t,e,n);case"ascii":return w(this,t,e,n);case"latin1":case"binary":return v(this,t,e,n);case"base64":return j(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return I(this,t,e,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function S(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(127&t[a]);return r}function C(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(t[a]);return r}function T(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=e;s<n;++s)a+=L(t[s]);return a}function A(t,e,n){for(var r=t.slice(e,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function E(t,e,n){if(t%1!==0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function R(t,e,n,r,a,s){if(!u.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>a||e<s)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function $(t,e,n,r){e<0&&(e=65535+e+1);for(var a=0,s=Math.min(t.length-n,2);a<s;++a)t[n+a]=(e&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function F(t,e,n,r){e<0&&(e=4294967295+e+1);for(var a=0,s=Math.min(t.length-n,4);a<s;++a)t[n+a]=e>>>8*(r?a:3-a)&255}function D(t,e,n,r,a,s){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function _(t,e,n,r,s){return s||D(t,0,n,4),a.write(t,e,n,r,23,4),n+4}function M(t,e,n,r,s){return s||D(t,0,n,8),a.write(t,e,n,r,52,8),n+8}u.prototype.slice=function(t,e){var n,r=this.length;if((t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=u.prototype;else{var a=e-t;n=new u(a,void 0);for(var s=0;s<a;++s)n[s]=this[s+t]}return n},u.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||E(t,e,this.length);for(var r=this[t],a=1,s=0;++s<e&&(a*=256);)r+=this[t+s]*a;return r},u.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||E(t,e,this.length);for(var r=this[t+--e],a=1;e>0&&(a*=256);)r+=this[t+--e]*a;return r},u.prototype.readUInt8=function(t,e){return e||E(t,1,this.length),this[t]},u.prototype.readUInt16LE=function(t,e){return e||E(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUInt16BE=function(t,e){return e||E(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUInt32LE=function(t,e){return e||E(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUInt32BE=function(t,e){return e||E(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||E(t,e,this.length);for(var r=this[t],a=1,s=0;++s<e&&(a*=256);)r+=this[t+s]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*e)),r},u.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||E(t,e,this.length);for(var r=e,a=1,s=this[t+--r];r>0&&(a*=256);)s+=this[t+--r]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*e)),s},u.prototype.readInt8=function(t,e){return e||E(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){e||E(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(t,e){e||E(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(t,e){return e||E(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return e||E(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readFloatLE=function(t,e){return e||E(t,4,this.length),a.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return e||E(t,4,this.length),a.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return e||E(t,8,this.length),a.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return e||E(t,8,this.length),a.read(this,t,!1,52,8)},u.prototype.writeUIntLE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||R(this,t,e,n,Math.pow(2,8*n)-1,0);var a=1,s=0;for(this[e]=255&t;++s<n&&(a*=256);)this[e+s]=t/a&255;return e+n},u.prototype.writeUIntBE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||R(this,t,e,n,Math.pow(2,8*n)-1,0);var a=n-1,s=1;for(this[e+a]=255&t;--a>=0&&(s*=256);)this[e+a]=t/s&255;return e+n},u.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,1,255,0),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},u.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):$(this,t,e,!0),e+2},u.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):$(this,t,e,!1),e+2},u.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):F(this,t,e,!0),e+4},u.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):F(this,t,e,!1),e+4},u.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);R(this,t,e,n,a-1,-a)}var s=0,i=1,o=0;for(this[e]=255&t;++s<n&&(i*=256);)t<0&&0===o&&0!==this[e+s-1]&&(o=1),this[e+s]=(t/i>>0)-o&255;return e+n},u.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);R(this,t,e,n,a-1,-a)}var s=n-1,i=1,o=0;for(this[e+s]=255&t;--s>=0&&(i*=256);)t<0&&0===o&&0!==this[e+s+1]&&(o=1),this[e+s]=(t/i>>0)-o&255;return e+n},u.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,1,127,-128),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):$(this,t,e,!0),e+2},u.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):$(this,t,e,!1),e+2},u.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):F(this,t,e,!0),e+4},u.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):F(this,t,e,!1),e+4},u.prototype.writeFloatLE=function(t,e,n){return _(this,t,e,!0,n)},u.prototype.writeFloatBE=function(t,e,n){return _(this,t,e,!1,n)},u.prototype.writeDoubleLE=function(t,e,n){return M(this,t,e,!0,n)},u.prototype.writeDoubleBE=function(t,e,n){return M(this,t,e,!1,n)},u.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var a,s=r-n;if(this===t&&n<e&&e<r)for(a=s-1;a>=0;--a)t[a+e]=this[a+n];else if(s<1e3||!u.TYPED_ARRAY_SUPPORT)for(a=0;a<s;++a)t[a+e]=this[a+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+s),e);return s},u.prototype.fill=function(t,e,n,r){if("string"===typeof t){if("string"===typeof e?(r=e,e=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),1===t.length){var a=t.charCodeAt(0);a<256&&(t=a)}if(void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"===typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var s;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"===typeof t)for(s=e;s<n;++s)this[s]=t;else{var i=u.isBuffer(t)?t:B(new u(t,r).toString()),o=i.length;for(s=0;s<n-e;++s)this[s+e]=i[s%o]}return this};var z=/[^+\/0-9A-Za-z-_]/g;function L(t){return t<16?"0"+t.toString(16):t.toString(16)}function B(t,e){var n;e=e||1/0;for(var r=t.length,a=null,s=[],i=0;i<r;++i){if((n=t.charCodeAt(i))>55295&&n<57344){if(!a){if(n>56319){(e-=3)>-1&&s.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(e-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(e-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((e-=1)<0)break;s.push(n)}else if(n<2048){if((e-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function P(t){return r.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(z,"")).length<2)return"";for(;t.length%4!==0;)t+="=";return t}(t))}function V(t,e,n,r){for(var a=0;a<r&&!(a+n>=e.length||a>=t.length);++a)e[a+n]=t[a];return a}}).call(this,n("yLpj"))},Hfat:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({sign_:function(t){const e=Object(s.a)(t,"x","sign"),n={x:e};return r.a.runKernelFunc(t=>t.sign(e),n,null,a.sc)}})},HmhO:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("NuWS"),o=n("VO80"),u=n("yRKQ");const c=Object(o.a)({cumsum_:function(t,e=0,n=!1,o=!1){const c=Object(s.a)(t,"x","cumsum"),l={x:c},d={axis:e,exclusive:n,reverse:o};return r.a.runKernelFunc((t,r)=>{const a=Object(i.f)([e],c.rank);let s=c;null!=a&&(s=Object(u.a)(c,a));const l=Object(i.g)(1,c.rank)[0];let d=t.cumsum(s,l,n,o);if(r([c]),null!=a){const t=Object(i.h)(a);d=Object(u.a)(d,t)}return d},l,null,a.J,d)}})},I79q:function(t,e,n){"use strict";var r,a,s,i,o;n.d(e,"b",(function(){return c})),n.d(e,"a",(function(){return l})),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(a||(a={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(s||(s={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(i||(i={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function c(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return u[t][e]}function l(t){return c(t,"int32")}},"Ig+c":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({asin_:function(t){const e=Object(s.a)(t,"x","asin"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.asin(e);return n([e]),r},n,null,a.j)}})},Ijbi:function(t,e,n){var r=n("WkPL");t.exports=function(t){if(Array.isArray(t))return r(t)}},JLAb:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({imag_:function(t){const e=Object(s.a)(t,"input","imag"),n={input:e};return r.a.runKernelFunc(t=>t.imag(e),n,null,a.nb)}})},Kajj:function(t,e,n){"use strict";(function(t){var e=n("ftYm"),r=n("szMd");const a=Object(r.b)();a.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>e.isBrowser()),a.registerFlag("IS_NODE",()=>"undefined"!==typeof t&&"undefined"!==typeof t.versions&&"undefined"!==typeof t.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1)}).call(this,n("8oxB"))},KdhW:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},Kfzt:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("o/e8"),a=n("atXS"),s=n("SHv8"),i=n("VO80"),o=n("NclT");const u=Object(i.a)({dot_:function(t,e){const n=Object(r.a)(t,"t1","dot"),i=Object(r.a)(e,"t2","dot");a.b((1===n.rank||2===n.rank)&&(1===i.rank||2===i.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`);const u=1===n.rank?n.size:n.shape[1],c=1===i.rank?i.size:i.shape[0];if(a.b(u===c,()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${c}.`),1===n.rank&&1===i.rank){const t=Object(o.a)(n,[1,-1]),e=Object(o.a)(i,[-1,1]),r=Object(s.a)(t,e);return Object(o.a)(r,[])}if(1===n.rank&&2===i.rank){const t=Object(o.a)(n,[1,-1]),e=Object(o.a)(i,[i.shape[0],i.shape[1]]),r=Object(s.a)(t,e);return Object(o.a)(r,[r.size])}if(2===n.rank&&1===i.rank){const t=Object(o.a)(i,[-1,1]),e=Object(s.a)(n,t);return Object(o.a)(e,[e.size])}{const t=Object(o.a)(i,[i.shape[0],i.shape[1]]);return Object(s.a)(n,t)}}})},L7Hl:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({step_:function(t,e=0){const n=Object(s.a)(t,"x","step"),i={x:n},o={alpha:e};return r.a.runKernelFunc(t=>t.step(n,e),i,null,a.Ec,o)}})},MX0m:function(t,e,n){t.exports=n("3niX")},Mbu7:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},NNfn:function(t,e,n){"use strict";n.d(e,"b",(function(){return c})),n.d(e,"f",(function(){return p})),n.d(e,"e",(function(){return f})),n.d(e,"d",(function(){return m})),n.d(e,"a",(function(){return b})),n.d(e,"c",(function(){return g}));var r=n("atXS");function a(t,e,n,a){const u=Object(r.j)(e),c=function(t,e,n,a){const i=Object(r.N)(e),u=a[a.length-1],c=new Array(u).fill(0),l=e.length,d="complex64"===n?o(t):t;if(l>1)for(let r=0;r<i/u;r++){const t=r*u;for(let e=0;e<u;e++)c[e]=Math.max(c[e],s(d[t+e],0,n).length)}return c}(t,e,n,u),l=e.length,d=function t(e,n,r,a,u,c=!0){const l="complex64"===r?2:1,d=n[0],h=n.length;if(0===h){if("complex64"===r){return[s(o(e)[0],0,r)]}return"bool"===r?[i(e[0])]:[e[0].toString()]}if(1===h){if(d>20){const t=3*l;let n=Array.from(e.slice(0,t)),a=Array.from(e.slice((d-3)*l,d*l));return"complex64"===r&&(n=o(n),a=o(a)),["["+n.map((t,e)=>s(t,u[e],r)).join(", ")+", ..., "+a.map((t,e)=>s(t,u[d-3+e],r)).join(", ")+"]"]}return["["+("complex64"===r?o(e):Array.from(e)).map((t,e)=>s(t,u[e],r)).join(", ")+"]"]}const p=n.slice(1),f=a.slice(1),m=a[0]*l,b=[];if(d>20){for(let n=0;n<3;n++){const a=n*m,s=a+m;b.push(...t(e.slice(a,s),p,r,f,u,!1))}b.push("...");for(let n=d-3;n<d;n++){const a=n*m,s=a+m;b.push(...t(e.slice(a,s),p,r,f,u,n===d-1))}}else for(let s=0;s<d;s++){const n=s*m,a=n+m;b.push(...t(e.slice(n,a),p,r,f,u,s===d-1))}const g=2===h?",":"";b[0]="["+b[0]+g;for(let s=1;s<b.length-1;s++)b[s]=" "+b[s]+g;let y=",\n";for(let s=2;s<h;s++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(c?"":y),b}(t,e,n,u,c),h=["Tensor"];return a&&(h.push("  dtype: "+n),h.push("  rank: "+l),h.push(`  shape: [${e}]`),h.push("  values:")),h.push(d.map(t=>"    "+t).join("\n")),h.join("\n")}function s(t,e,n){let a;return a=Array.isArray(t)?parseFloat(t[0].toFixed(7))+" + "+parseFloat(t[1].toFixed(7))+"j":Object(r.z)(t)?`'${t}'`:"bool"===n?i(t):parseFloat(t.toFixed(7)).toString(),Object(r.L)(a,e)}function i(t){return 0===t?"false":"true"}function o(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var u=n("6366");class c{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=r.N(t),null!=n){const t=n.length;r.b(t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.n(e,this.size),this.strides=Object(r.j)(t)}set(t,...e){0===e.length&&(e=[0]),r.b(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=`+this.shape;throw new Error(e)}e++}let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return l().makeTensor(this.values,this.shape,this.dtype)}}let l=null,d=null,h=null;function p(t){l=t}function f(t){d=t}function m(t){h=t}class b{constructor(t,e,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=r.N(t),this.strides=Object(r.j)(t),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return d.buffer(this.shape,this.dtype,t)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(r.S)(this.shape,t)}arraySync(){return Object(r.S)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=l().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map(t=>u.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=l().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>u.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await l().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(l().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return d.print(this,t)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(t=!1){return a(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),d.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),l().makeVariable(this,t,e,n)}}Object.defineProperty(b,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class g extends b{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!r.a(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);l().disposeTensor(this),this.dataId=t.dataId,l().incRef(this,null)}dispose(){l().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(g,Symbol.hasInstance,{value:t=>t instanceof b&&null!=t.assign&&t.assign instanceof Function})},"NQ+5":function(t,e,n){"use strict";(function(t){n.d(e,"f",(function(){return o})),n.d(e,"e",(function(){return u})),n.d(e,"a",(function(){return h})),n.d(e,"b",(function(){return p})),n.d(e,"d",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"g",(function(){return b}));var r=n("B3db"),a=n("NX3e"),s=n("atXS"),i=n("mEeB");async function o(t,e){const n=[],r=[],a=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(t)?t[s].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise(async t=>{const e=await o.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let a=0;for(let s=0;s<e.length;s++){const t=e[s],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,a),a+=4,r.set(t,a),a+=t.length}t(r)});r.push(t)}else r.push(o.data());null!=e&&(u.group=e),n.push(u)}return{data:c(await Promise.all(r)),specs:n}}function u(t,e){const n={};let o,u=0;for(const c of e){const e=c.name,l=c.dtype,d=c.shape,h=Object(s.N)(d);let p;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=i.a[n.dtype],a=t.slice(u,u+h*r),s="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){p=new Float32Array(s.length);for(let t=0;t<s.length;t++){const e=s[t];p[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===o&&(o=g()),p=o(s)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${e}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);p=new Int32Array(s.length);for(let t=0;t<s.length;t++){const e=s[t];p[t]=Math.round(e*n.scale+n.min)}}u+=h*r}else if("string"===l){const e=Object(s.N)(c.shape);p=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(u,u+4))[0];u+=4;const n=new Uint8Array(t.slice(u,u+e));p.push(n),u+=e}}else{const s=i.a[l],o=t.slice(u,u+h*s);if("float32"===l)p=new Float32Array(o);else if("int32"===l)p=new Int32Array(o);else if("bool"===l)p=new Uint8Array(o);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${e}': ${l}`);{p=new Float32Array(o);const t=new Float32Array(p.length/2),s=new Float32Array(p.length/2);for(let e=0;e<t.length;e++)t[e]=p[2*e],s[e]=p[2*e+1];const i=Object(a.a)(t,d,"float32"),u=Object(a.a)(s,d,"float32");n[e]=Object(r.a)(i,u),i.dispose(),u.dispose()}}u+=h*s}"complex64"!==l&&(n[e]=Object(a.a)(p,d,l))}return n}function c(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)});const r=new Uint8Array(e);let a=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),a),a+=t.byteLength}),r.buffer}const l="undefined"!==typeof t&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function d(e){return l?t.byteLength(e):new Blob([e]).size}function h(e){if(l)return t.from(e).toString("base64");const n=new Uint8Array(e);let r="";for(let t=0,a=n.length;t<a;t++)r+=String.fromCharCode(n[t]);return btoa(r)}function p(e){if(l){const n=t.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(e),r=new Uint8Array(n.length);for(let t=0;t<n.length;++t)r.set([n.charCodeAt(t)],t);return r.buffer}function f(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function m(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function b(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:d(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:d(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function g(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0===(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){const a=r[i],o=t[n[a>>10]+(1023&a)]+e[a>>10];s[i]=o}return new Float32Array(a)}}}).call(this,n("HDXh").Buffer)},NX3e:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("o/e8"),a=n("WVnj");function s(t,e,n){const s=Object(r.c)(t,n);return Object(a.a)(t,e,s,n)}},NclT:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({reshape_:function(t,e){const n=Object(s.a)(t,"x","reshape",null),o={x:n},u={shape:e};return r.a.runKernelFunc((t,r)=>(e=i.s(e,n.size),i.b(n.size===i.N(e),()=>"new shape and old shape must have the same number of elements."),r([n]),t.reshape(n,e)),o,null,a.fc,u)}})},Nk7E:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({depthToSpace_:function(t,e,n="NHWC"){const o=Object(s.a)(t,"x","depthToSpace"),u="NHWC"===n?o.shape[1]:o.shape[2],c="NHWC"===n?o.shape[2]:o.shape[3],l="NHWC"===n?o.shape[3]:o.shape[1];i.b(u*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${e}  for depthToSpace with input shape\n    ${o.shape}`),i.b(c*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${e} for depthToSpace with input shape\n        ${o.shape}`),i.b(l%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${l} for depthToSpace with input shape ${o.shape}`);const d={x:o},h={blockSize:e,dataFormat:n};return r.a.runKernelFunc(t=>t.depthToSpace(o,e,n),d,null,a.K,h)}})},NuWS:function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return i})),n.d(e,"e",(function(){return o})),n.d(e,"a",(function(){return u})),n.d(e,"f",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"g",(function(){return d}));var r=n("atXS");function a(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function s(t,e,n){const r=t.length+e.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(t[s++]):a.push(e[i++]);return a}function i(t,e){const n=[],r=t.length;for(let a=0;a<r;a++)-1===e.indexOf(a)&&n.push(t[a]);return[n,e.map(e=>t[e])]}function o(t,e){return s(t,e.map(t=>1),e)}function u(t,e,n){r.b(a(e,n),()=>t+" supports only inner-most axes for now. "+`Got axes ${e} and rank-${n} input.`)}function c(t,e){if(a(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function l(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function d(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}},"O/w9":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},O7f5:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({neg_:function(t){const e=Object(s.a)(t,"x","neg"),n={x:e};return r.a.runKernelFunc(t=>t.neg(e),n,null,a.Pb)}})},OkRW:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({unstack_:function(t,e=0){const n=Object(s.a)(t,"x","unstack");i.b(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`),e<0&&(e+=n.shape.length);const o={value:n},u={axis:e};return r.a.runKernelFunc(t=>t.unstack(n,e),o,null,a.Oc,u)}})},OygE:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({batchToSpaceND_:function(t,e,n){const o=Object(s.a)(t,"x","batchToSpaceND"),u=e.reduce((t,e)=>t*e);i.b(o.rank>=1+e.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${e.length}`),i.b(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),i.b(o.shape[0]%u===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${u}`);const c={x:o},l={blockShape:e,crops:n};return r.a.runKernelFunc(t=>t.batchToSpaceND(o,e,n),c,null,a.t,l)}})},PDX0:function(t,e){(function(e){t.exports=e}).call(this,{})},PVBm:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},Pvz5:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("o/e8"),s=n("VO80"),i=n("NclT");const o=Object(s.a)({multinomial_:function(t,e,n,s=!1){const o=Object(a.a)(t,"logits","multinomial"),u=o.size,c=o.rank;if(u<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+u+".");if(c>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+c);n=n||Math.random();const l=1===c?Object(i.a)(o,[1,-1]):o,d=r.a.runKernelFunc(t=>t.multinomial(l,s,e,n),{logits2D:l});return 1===c?Object(i.a)(d,[d.size]):d}})},QVv9:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("atXS");function a(t,e,n=0){let a=[];if("number"===typeof e)Object(r.b)(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),a=new Array(e).fill(t.shape[n]/e);else{const s=e.reduce((t,e)=>(-1===e&&(t+=1),t),0);Object(r.b)(s<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(-1!==i){const r=e.reduce((t,e)=>e>0?t+e:t);e[i]=t.shape[n]-r}Object(r.b)(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),a=e}return a}},QYQ3:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.a)({squaredDifference_:function(t,e){let n=Object(i.a)(t,"a","squaredDifference"),u=Object(i.a)(e,"b","squaredDifference");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc((t,e)=>{const r=t.squaredDifference(n,u);return e([n,u]),r},c,null,a.Dc,{})}})},R0ls:function(t,e,n){"use strict";n.d(e,"c",(function(){return h})),n.d(e,"b",(function(){return p})),n.d(e,"a",(function(){return f})),n.d(e,"d",(function(){return m}));var r=n("Um8L"),a=n("njhW"),s=n("parS"),i=n("Ug8H"),o=n("kXpR"),u=n("Rqg+"),c=n("NclT"),l=n("L7Hl"),d=n("4FMF");function h(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Object(s.a)(t,Object(l.a)(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function p(t,e){let n=e;const a=r.c(t.shape,e.shape);return a.length>0&&(n=Object(d.a)(n,a)),Object(c.a)(n,t.shape)}function f(t,e,n){if("linear"===e)return t;if("relu"===e)return Object(o.a)(t);if("elu"===e)return Object(a.a)(t);if("relu6"===e)return Object(u.a)(t);if("prelu"===e)return Object(i.a)(t,n);throw new Error(`Unknown fused activation ${e}.`)}const m=(t,e)=>!(t>0)||"linear"===e},RIqP:function(t,e,n){var r=n("Ijbi"),a=n("EbDI"),s=n("ZhPi"),i=n("Bnag");t.exports=function(t){return r(t)||a(t)||s(t)||i()}},RNiq:function(t,e,n){"use strict";n.r(e),n.d(e,"default",(function(){return yb}));var r={};n.r(r),n.d(r,"simpleAbsImpl",(function(){return Iu})),n.d(r,"addImpl",(function(){return mu})),n.d(r,"ceilImpl",(function(){return Uu})),n.d(r,"expImpl",(function(){return Cc})),n.d(r,"expm1Impl",(function(){return Ec})),n.d(r,"floorImpl",(function(){return Yc})),n.d(r,"logImpl",(function(){return ul})),n.d(r,"maxImpl",(function(){return ml})),n.d(r,"multiplyImpl",(function(){return Fc})),n.d(r,"notEqualImpl",(function(){return Nl})),n.d(r,"rsqrtImpl",(function(){return Dl})),n.d(r,"sliceImpl",(function(){return zc})),n.d(r,"squaredDifferenceImpl",(function(){return sd})),n.d(r,"subImpl",(function(){return Pc})),n.d(r,"transposeImpl",(function(){return bl})),n.d(r,"uniqueImpl",(function(){return fd}));var a=n("o0o1"),s=n.n(a);function i(t,e,n,r,a,s,i){try{var o=t[s](i),u=o.value}catch(c){return void n(c)}o.done?e(u):Promise.resolve(u).then(r,a)}function o(t){return function(){var e=this,n=arguments;return new Promise((function(r,a){var s=t.apply(e,n);function o(t){i(s,r,a,o,u,"next",t)}function u(t){i(s,r,a,o,u,"throw",t)}o(void 0)}))}}var u=n("MX0m"),c=n.n(u),l=n("+hG3");let d;function h(){return null==d&&(d=Object(l.ac)().epsilon()),d}class p extends Error{constructor(t){super(t),Object.setPrototypeOf(this,p.prototype)}}class f extends Error{constructor(t){super(t),Object.setPrototypeOf(this,f.prototype)}}class m extends Error{constructor(t){super(t),Object.setPrototypeOf(this,m.prototype)}}class b extends Error{constructor(t){super(t),Object.setPrototypeOf(this,b.prototype)}}class g extends Error{constructor(t){super(t),Object.setPrototypeOf(this,g.prototype)}}Error;function y(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function O(t,e){if(!t)throw new g(e)}function x(t,e){let n=0;for(const r of t)r===e&&n++;return n}function w(t){return 1===t.length?t[0]:t}function v(t){return Array.isArray(t)?t:[t]}function j(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function I(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let k={};function N(t){if(null===t||void 0===t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function S(t,e={},n={},r="object",a=!1){if("string"===typeof t){const a=t;let s;if(a in n)s=n[a];else if(a in k)s=k[a];else if(s=e[a],null==s)throw new m(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=t;if(null==s.className||null==s.config)throw new m(r+": Improper config format: "+JSON.stringify(s)+".\n'className' and 'config' must set.");const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in k?[o,u]=k.className:i in e&&([o,u]=e[i]),null==o)throw new m(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const n of Object.keys(k))t[n]=k[n];for(const a of Object.keys(n))t[a]=n[a];s.config.customObjects=t;const e=Object.assign({},k);for(const a of Object.keys(n))k[a]=n[a];!function t(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach(e=>t(e));else{const n=Object.keys(e);for(const r of n){const n=e[r];null!=n&&"object"===typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!==typeof n.value?t(n):e[r]=n.value)}}}(s.config);const r=u(o,s.config,n,a);return k=Object.assign({},e),r}{const t=Object.assign({},k);for(const r of Object.keys(n))k[r]=n[r];const e=new o(s.config);return k=Object.assign({},t),e}}}function C(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function T(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function A(t){if(null==t)throw new m("Invalid value in obj: "+JSON.stringify(t));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function E(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new m(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function R(t,e,n=0,r=1/0){return O(n>=0),O(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function $(t,e){Array.isArray(t)?(l.ee.assert(t.length>0,()=>e+" is unexpectedly an empty array."),t.forEach((t,n)=>$(t,`element ${n+1} of ${e}`))):l.ee.assert(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got `+function t(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>t(e)).join(",")+"]":"string"===typeof e?`"${e}"`:""+e}(t)+".")}function F(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function D(t,e){return Object(l.Xd)(()=>l.Ld(l.Pd(l.dd(t,t),e,!0)))}class _ extends l.zd.Serializable{getConfig(){return{}}}class M extends _{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(l.Xd)(()=>{const e=D(t,this.axis),n=l.ic(e,0,this.maxValue);return l.dd(t,l.wc(n,l.Ub(h(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}M.className="MaxNorm",l.zd.registerClass(M);class z extends _{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(l.Xd)(()=>l.wc(t,l.Ub(h(),D(t,this.axis))))}getConfig(){return{axis:this.axis}}}z.className="UnitNorm",l.zd.registerClass(z);class L extends _{apply(t){return l.td(t)}}L.className="NonNeg",l.zd.registerClass(L);class B extends _{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(l.Xd)(()=>{const e=D(t,this.axis),n=l.Ub(l.dd(this.rate,l.ic(e,this.minValue,this.maxValue)),l.dd(1-this.rate,e));return l.dd(t,l.wc(n,l.Ub(h(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}B.className="MinMaxNorm",l.zd.registerClass(B);const P={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function V(t){return N(t)}function W(t,e={}){return S(t,l.zd.SerializationMap.getMap().classNameMap,e,"constraint")}function U(t){if(null==t)return null;if("string"===typeof t){return W({className:t in P?P[t]:t,config:{}})}return t instanceof _?t:W(t)}const K=["channelsFirst","channelsLast"],H=["valid","same","causal"],G=["max","avg"],X=["sum","mul","concat","ave"],q=new Map;function Y(t){E(K,"DataFormat",t)}function J(t){E(H,"PaddingMode",t)}function Z(t){E(G,"PoolMode",t)}const Q=[];function tt(t,e){Q.push(t);try{const t=e();return Q.pop(),t}catch(n){throw Q.pop(),n}}function et(t){if(!at(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Q.length?"":Q.join("/")+"/")+t}function nt(t){if(!at(t))throw new Error("Not a valid tensor name: '"+t+"'");q.has(t)||q.set(t,0);const e=q.get(t);if(q.set(t,q.get(t)+1),e>0){const n=`${t}_${e}`;return q.set(n,1),n}return t}const rt=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function at(t){return!!t.match(rt)}function st(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let a=e;a<n;++a)r*=t[a];return r}function it(t){return t=Array.isArray(t)?new Float32Array(t):t,Object(l.Td)(t)}function ot(t){return l.ad(it(t)).dataSync()[0]}function ut(t){return l.Uc(it(t)).dataSync()[0]}function ct(t,e){if(e<t)throw new m(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function lt(t,e){return t.asType(e)}function dt(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function ht(t,e,n){return Object(l.Xd)(()=>{switch(t.rank){case 1:return l.Dd(t,e,n);case 2:return l.Ed(t,[e,0],[n,t.shape[1]]);case 3:return l.Fd(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return l.Gd(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return l.Cd(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return l.Cd(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new m("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}})}function pt(t,e,n){return Object(l.Xd)(()=>{switch(t.rank){case 1:return l.Dd(t,e,n);case 2:return l.Ed(t,[0,e],[t.shape[0],n]);case 3:return l.Fd(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return l.Gd(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new m("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function ft(t,e,n,r){return Object(l.Xd)(()=>{switch(t.rank){case 1:return l.Dd(t,e,n);case 2:switch(r){case 1:return ht(t,e,n);case 2:return pt(t,e,n);default:throw new m("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return ht(t,e,n);case 2:return l.Fd(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return pt(t,e,n);default:throw new m("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return ht(t,e,n);case 2:return l.Gd(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return l.Gd(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return pt(t,e,n);default:throw new m("The axis is not within the rank of the tensor "+r)}default:throw new m("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function mt(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),l.kc(t,e)}function bt(t,e){switch(t.rank){case 1:return l.lc([t,e]);case 2:return l.mc([t,e],0);case 3:return l.nc([t,e],0);case 4:return l.oc([t,e],0);default:throw new m("concatAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}function gt(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new m(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return l.Yd(t,e)}function yt(t,e=0,n=1,r,a){return l.nd(t,e,n,r,a)}function Ot(t,e,n,r){if(t.rank<2||e.rank<2)throw new b(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new b(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = `+e.shape)}if(2===t.rank&&2===e.rank){const a=!1,s=!1;return l.Hc.matMul({a:t,b:e,transposeA:a,transposeB:s,bias:r?vt(t.rank,r,"channelsLast"):null,activation:n})}{const a=t.shape.slice(),s=a.pop();t=t.reshape([-1,s]);const i=e.shape.slice(),o=i.pop(),u=i.pop(),c=[...i,o],d=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=e.transpose(d).reshape([u,-1]);const h=[...a,...c],p=!1,f=!1;return l.Hc.matMul({a:t,b:e,transposeA:p,transposeB:f,bias:r?vt(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function xt(t,e,n){return Object(l.Xd)(()=>(e=Array.isArray(e)?Object(l.Td)(e,"int32"):e.toInt(),l.Ic(t,e,n)))}function wt(t){return l.dd(t,t)}function vt(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new m("Unexpected bias dimensions: "+e.rank+"; expected it to be 1 or "+t);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new m("Unsupported input rank by biasAdd: "+e.rank)}function jt(t,e,n){return Object(l.Xd)(()=>(null==n&&(n="channelsLast"),Y(n),t.add(vt(t.rank,e,n))))}function It(t,e,n,r){return Object(l.Xd)(()=>l.xc(t,e,n,r))}function kt(t,e,n=!1){return n?t():e()}const Nt=["fanIn","fanOut","fanAvg"],St=["normal","uniform","truncatedNormal"];class Ct extends l.zd.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Tt extends Ct{apply(t,e){return Object(l.je)(t,e)}}Tt.className="Zeros",l.zd.registerClass(Tt);class At extends Ct{apply(t,e){return Object(l.id)(t,e)}}At.className="Ones",l.zd.registerClass(At);class Et extends Ct{constructor(t){if(super(),"object"!==typeof t)throw new m("Expected argument of type ConstantConfig but got "+t);if(void 0===t.value)throw new m("config must have value set but got "+t);this.value=t.value}apply(t,e){return Object(l.Xd)(()=>Object(l.dd)(Object(l.wd)(this.value),Object(l.id)(t,e)))}getConfig(){return{value:this.value}}}Et.className="Constant",l.zd.registerClass(Et);class Rt extends Ct{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Object(l.od)(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Rt.className="RandomUniform",l.zd.registerClass(Rt);class $t extends Ct{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new b(`randomNormal does not support dType ${e}.`);return yt(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}$t.className="RandomNormal",l.zd.registerClass($t);class Ft extends Ct{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new b(`truncatedNormal does not support dType ${e}.`);return Object(l.be)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ft.className="TruncatedNormal",l.zd.registerClass(Ft);class Dt extends Ct{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Object(l.Xd)(()=>{if(2!==t.length||t[0]!==t[1])throw new m("Identity matrix initializer can only be used for 2D square matrices.");return Object(l.dd)(this.gain,Object(l.Ec)(t[0]))})}getConfig(){return{gain:this.gain}}}Dt.className="Identity",l.zd.registerClass(Dt);class _t extends Ct{constructor(t){if(super(),t.scale<0)throw new m("scale must be a positive float. Got: "+t.scale);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,E(Nt,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){E(St,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(Y(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=st(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=st(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=st(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new b(`${this.getClassName()} does not support dType ${e}.`);return Object(l.be)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*s);return Object(l.od)(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}_t.className="VarianceScaling",l.zd.registerClass(_t);class Mt extends _t{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return _t.className}}Mt.className="GlorotUniform",l.zd.registerClass(Mt);class zt extends _t{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return _t.className}}zt.className="GlorotNormal",l.zd.registerClass(zt);class Lt extends _t{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return _t.className}}Lt.className="HeNormal",l.zd.registerClass(Lt);class Bt extends _t{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return _t.className}}Bt.className="HeUniform",l.zd.registerClass(Bt);class Pt extends _t{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return _t.className}}Pt.className="LeCunNormal",l.zd.registerClass(Pt);class Vt extends _t{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return _t.className}}Vt.className="LeCunNormal",l.zd.registerClass(Vt);class Wt extends Ct{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new b("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Object(l.Xd)(()=>{if(t.length<2)throw new b("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=yt(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=l.Qc.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Object(l.dd)(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Wt.className="Orthogonal",l.zd.registerClass(Wt);const Ut={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Kt(t,e={}){return S(t,l.zd.SerializationMap.getMap().classNameMap,e,"initializer")}function Ht(t){return N(t)}function Gt(t){if("string"===typeof t){const e=t in Ut?Ut[t]:t;if("GlorotNormal"===e)return new zt;if("GlorotUniform"===e)return new Mt;if("HeNormal"===e)return new Lt;if("HeUniform"===e)return new Bt;if("LeCunNormal"===e)return new Pt;if("LeCunUniform"===e)return new Vt;{const t={};return t.className=e,t.config={},Kt(t)}}return t instanceof Ct?t:Kt(t)}let Xt=0;function qt(){return Xt++}const Yt={};function Jt(t=""){return t in Yt||(Yt[t]=0),Yt[t]+=1,t+Yt[t].toString()}function Zt(t){return Array.isArray(t)&&Array.isArray(t[0])}function Qt(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function te(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new m("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function ee(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new m("Expected exactly 1 Shape; got "+t.length)}return t}function ne(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}class re{constructor(t,e="float32",n="Variable",r=!0,a=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=qt(),n=null==n?"Variable":n,this.originalName=et(n),this.name=nt(this.originalName),this.trainable_=r,this.constraint=a,this.val=l.fe(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function ae(t){return t.map(t=>t.read())}function se(t){t.forEach(t=>{t[0].write(t[1])})}class ie{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class oe{constructor(t,e,n,r,a,s,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=qt(),null!=s&&(this.originalName=et(s),this.name=nt(this.originalName)),this.rank=e.length}}let ue=0;class ce{constructor(t,e){this.callArgs=e,this.id=ue++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let le=0;class de extends l.zd.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=le++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=j(t)+"_"+Jt(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new f(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new m(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return w(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return w(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new p("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new p("Layer "+this.name+" is not connected, no input to return.");return w(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new p("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new p("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return w(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=v(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=v(this.inputSpec);if(t.length!==e.length)throw new m(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: `+t);for(let n=0;n<t.length;n++){const r=t[n],a=e[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new m(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new m(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new m(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new m(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const t=r.shape;for(const e in a.axes){const r=Number(e),s=a.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new m(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const e=a.shape[t],s=r.shape[t];if(null!=e&&null!=s&&e!==s)throw new m(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=v(t);let r=!0;for(const s of n)if(!(s instanceof oe)){r=!1;break}let a=!0;for(const s of n)if(s instanceof oe){a=!1;break}if(r===a)throw new m("Arguments to apply() must be all SymbolicTensors or all Tensors");return tt(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of v(t))e.push(n.shape);this.build(w(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let r=this.call(t,e);const a=v(r),s=[];for(let t of a)-1!==n.indexOf(t)&&(t=t.clone()),s.push(t);if(r=w(s),null!=this.activityRegularizer)throw new b("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=v(t);const e=[];for(const n of t)e.push(n.shape);return w(e)}(t),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new oe(s,n,this,v(t),e,this.name,r)):new oe(s,r,this,v(t),e,this.name),this.addInboundNode(t,a,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new b("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(t)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new p(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new p(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new f(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ne(this.weights)}build(t){this.built=!0}getWeights(t=!1){return ae(t?this.trainableWeights:this.weights)}setWeights(t){Object(l.Xd)(()=>{const e=this.weights;if(e.length!==t.length)throw new m(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=ae(e);for(let a=0;a<r.length;++a){const s=r[a],i=e[a],o=t[a];if(!l.ee.arraysEqual(s.shape,o.shape))throw new m(`Layer weight shape ${s.shape} not compatible with provided weight shape `+o.shape);n.push([i,o])}se(n)})}addWeight(t,e,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(t))throw new m(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Gt("zeros"));const o=r.apply(e,n),u=new re(o,n,t,s,i);return o.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=v(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,n,r,a,s,i=null){const o=v(t);e=v(e),n=v(n),r=v(r),a=Qt(a),s=Qt(s);const u=[],c=[],l=[];for(const d of o)u.push(d.sourceLayer),c.push(d.nodeIndex),l.push(d.tensorIndex);new ce({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}class he extends de{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Jt("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new m("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new m("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new m("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new oe(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new ce({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new m("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function pe(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new m("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");return new he({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}async function fe(t){if(null==t)return;const e=[],n=[],r=[];for(const a in t){const s=t[a];if("number"!==typeof s){const t=s;e.push(t.data()),n.push(a),r.push(t)}}if(e.length>0){const a=await Promise.all(e);for(let e=0;e<a.length;++e)t[n[e]]=a[e][0];Object(l.vc)(r)}}function me(t){if(null!=t)for(const e in t){const n=t[e];"number"!==typeof n&&n.dispose()}}var be;he.className="InputLayer",l.zd.registerClass(he),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(be||(be={}));class ge{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class ye{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Oe extends ge{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const r in e){const t=e[r];if("number"===typeof t)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+t*n;else{let e;r in this.totals?e=this.totals[r]:this.totals[r]=0;const a=Object(l.Xd)(()=>Object(l.Ub)(this.totals[r],Object(l.dd)(t,n)));this.totals[r]=a,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?e[n]=this.totals[n]/this.seen:Object(l.Xd)(()=>{const t=Object(l.dd)(Object(l.wc)(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),Object(l.Nc)(e[n])}))}}class xe extends ge{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)if("number"!==typeof r[s]){const i=r[s];t.push(i.data()),e.push(a),n.push(s)}}const r=await Promise.all(t);for(let a=0;a<r.length;++a){this.history[e[a]][n[a]].dispose(),this.history[e[a]][n[a]]=r[a][0]}}}class we extends ge{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");l.ee.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=l.ee.now();return(...a)=>{const s=l.ee.now();return s-r<e||(r=s,n=t(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await fe(n),r.push(this.yield(t,e,n))),r.push(Object(l.fd)()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await fe(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await fe(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Object(l.fd)()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await fe(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await fe(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Object(l.fd)()):l.ee.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await fe(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await fe(t),await this.trainEnd(t))}}function ve(t,e){if(null==t&&(t={}),t instanceof ge)return[t];if(Array.isArray(t)&&t[0]instanceof ge)return t;return v(t).map(t=>new we(t,e))}class je{constructor(){}static registerCallbackConstructor(t,e){l.ee.assert(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, but got "+t),je.checkForDuplicate(e),null==je.constructors[t]&&(je.constructors[t]=[]),je.constructors[t].push(e)}static checkForDuplicate(t){for(const e in je.constructors){je.constructors[+e].forEach(e=>{if(e===t)throw new m("Duplicate callback constructor.")})}}static clear(){je.constructors={}}static createCallbacks(t){const e=[];for(const n in je.constructors){const r=+n;t>=r&&e.push(...je.constructors[r])}return e.map(t=>new t)}}function Ie(t,e,n,r,a,s,i,o,u){const c=new xe,l=[new Oe,...je.createCallbacks(e)];null!=t&&l.push(...t),l.push(c);const d=new ye(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:e,doValidation:o,metrics:u}),{callbackList:d,history:c}}function ke(t,e={},n=!1){return S(t,l.zd.SerializationMap.getMap().classNameMap,e,"layer",n)}function Ne(t,e){return Object(l.Xd)(()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=l.Pd(wt(t),e,!0),r=l.Fc(n.shape,h()),a=l.Ld(l.Xc(n,r));return l.wc(t,a)})}function Se(t,e){return Object(l.Xd)(()=>l.Yc(wt(l.Od(e,t)),-1))}function Ce(t,e){return Object(l.Xd)(()=>l.Yc(l.Tb(l.Od(e,t)),-1))}function Te(t,e){return Object(l.Xd)(()=>{const n=l.Od(t,e),r=l.ic(l.Tb(t),h(),Number.MAX_VALUE),a=l.Tb(l.wc(n,r));return l.dd(100,l.Yc(a,-1))})}function Ae(t,e){return Object(l.Xd)(()=>{const n=l.ic(e,h(),Number.MAX_VALUE),r=l.Rc(l.Ub(1,n)),a=l.ic(t,h(),Number.MAX_VALUE),s=l.Rc(l.Ub(1,a));return l.Yc(wt(l.Od(r,s)),-1)})}function Ee(t,e,n=!1){return Object(l.Xd)(()=>{if(n)e=l.Id(e);else{const t=l.Pd(e,e.shape.length-1,!0);e=l.wc(e,t)}return e=l.ic(e,h(),1-h()),l.ed(l.Pd(l.dd(t.toFloat(),l.Rc(e)),e.shape.length-1))})}function Re(t,e,n=!1){return Object(l.Xd)(()=>{const r=l.Gc(function(t){const e=[st(t.shape)];return t.reshape(e)}(t)).toInt(),a=(e=l.ic(e,h(),1-h())).shape;return Ee(l.hd(r,a[a.length-1]).reshape(a),e,n)})}function $e(t,e){return Object(l.Xd)(()=>{let n;return n=l.ic(e,h(),1-h()),n=l.Rc(l.wc(n,l.Od(1,n))),l.Yc(function(t,e){if(!l.ee.arraysEqual(t.shape,e.shape))throw new m(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Object(l.Xd)(()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())})}(t,n),-1)})}function Fe(t,e){return Object(l.Xd)(()=>{const n=l.ic(t,h(),1),r=l.ic(e,h(),1);return l.Pd(l.dd(t,l.Rc(l.wc(n,r))),-1)})}function De(t,e){return Object(l.Xd)(()=>{const n=Ne(t,-1),r=Ne(e,-1),a=l.dd(n,r);return l.ed(l.Pd(a,-1))})}je.constructors={};const _e={meanSquaredError:Se,meanAbsoluteError:Ce,meanAbsolutePercentageError:Te,meanSquaredLogarithmicError:Ae,squaredHinge:function(t,e){return Object(l.Xd)(()=>{const n=l.Xc(0,l.Od(1,l.dd(t,e)));return l.Yc(wt(n),-1)})},hinge:function(t,e){return Object(l.Xd)(()=>{const n=l.Xc(0,l.Od(1,l.dd(t,e)));return l.Yc(n,-1)})},categoricalHinge:function(t,e){return Object(l.Xd)(()=>{const n=l.Pd(l.dd(t,e),-1),r=l.Uc(l.dd(l.Od(1,t),e),-1);return l.Xc(0,l.Ub(1,l.Od(r,n)))})},logcosh:function(t,e){return Object(l.Xd)(()=>{const n=Math.log(2),r=l.Od(e,t),a=l.Od(l.Ub(r,l.Jd(l.dd(-2,r))),n);return l.Yc(a,-1)})},categoricalCrossentropy:Ee,sparseCategoricalCrossentropy:Re,binaryCrossentropy:$e,kullbackLeiblerDivergence:Fe,poisson:function(t,e){return Object(l.Xd)(()=>{const n=l.Rc(l.Ub(h(),e));return l.Yc(l.Od(e,l.dd(t,n)),-1)})},cosineProximity:De};function Me(t){if("string"===typeof t){if(t in _e)return _e[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new m(e)}return t}function ze(t,e){return Object(l.Xd)(()=>{const n=l.dd(.5,l.jd(e)),r=lt(l.Jc(e,n),t.dtype);return l.Yc(l.Bc(t,r),-1)})}function Le(t,e){return Object(l.Xd)(()=>lt(l.Bc(l.Xb(t,-1),l.Xb(e,-1)),"float32"))}function Be(t,e){return Object(l.Xd)(()=>l.Tc(t.equal(1),e.equal(1)).sum().cast("float32"))}function Pe(t,e){return Object(l.Xd)(()=>{const n=Be(t,e),r=function(t,e){return Object(l.Xd)(()=>l.Tc(t.equal(0),e.equal(1)).sum().cast("float32"))}(t,e),a=n.add(r);return l.ie(l.Jc(a,0),n.div(a),0).cast("float32")})}function Ve(t,e){return $e(t,e)}function We(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),l.Bc(t,e).asType("float32")}const Ue=Ee,Ke=Re,He={binaryAccuracy:ze,categoricalAccuracy:Le,precision:Pe,categoricalCrossentropy:Ue,sparseCategoricalCrossentropy:Ke,mse:Se,MSE:Se,mae:Ce,MAE:Ce,mape:Te,MAPE:Te,cosine:De};function Ge(t){if("string"===typeof t&&t in He)return He[t];if("string"!==typeof t&&null!=t)return t;throw new m("Unknown metric "+t)}function Xe(t){if(O(null!==t,"Unknown LossOrMetricFn "+t),"string"===typeof t)return t;{let e;for(const n of Object.keys(_e))if(_e[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(He))if(He[n]===t){e=n;break}return void 0!==e?e:t.name}}function qe(t,e,n=!1){if(null==t||"object"!==typeof t||Object.getPrototypeOf(t)!==Object.prototype||!function t(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const n=Object.keys(e);for(const r of n){if("string"!==typeof r)return!1;if(!t(e[r]))return!1}return!0}if(Array.isArray(e)){for(const n of e)if(!t(n))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Ye(t,e,n,r=console.log){const a=function(t){let e=!0;const n=[],r=[];for(const a in t.nodesByDepth)n.push(t.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){e=!1;break}r.push(...a)}if(e)for(const a of t.layers){let t=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),s=["Layer (type)","Output shape","Param #"];let i;if(a?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!a){s.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),Je(s,n,r),r("=".repeat(e));const o=t.layers;for(let l=0;l<o.length;++l)a?Ze(o[l],n,r):Qe(o[l],n,i,r),r((l===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=function(t){let e;e=null!=t.collectedTrainableWeights?ne(t.collectedTrainableWeights):ne(t.trainableWeights);return e}(t),c=ne(t.nonTrainableWeights);r("Total params: "+(u+c)),r("Trainable params: "+u),r("Non-trainable params: "+c),r("_".repeat(e))}function Je(t,e,n=console.log){let r="";for(let a=0;a<t.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=t[a],r=r.slice(0,e[a]),r+=" ".repeat(e[a]-r.length);n(r)}function Ze(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(a){r="multiple"}Je([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function Qe(t,e,n,r){let a;try{a=JSON.stringify(t.outputShape)}catch(c){a="multiple"}const s=[];for(const l of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let t=0;t<l.inboundLayers.length;++t){const e=l.inboundLayers[t].name,n=l.nodeIndices[t],r=l.tensorIndices[t];s.push(`${e}[${n}][${r}]`)}const i=t.name,o=t.getClassName(),u=0===s.length?"":s[0];Je([`${i} (${o})`,a,t.countParams().toString(),u],e,r);for(let l=1;l<s.length;++l)Je(["","","",s[l]],e,r)}function tn(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"===typeof n}function en(t,e){if(null===t)return null;if("string"===typeof t)return I(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let a=0;a<r;++a){const r=t[a];tn(e,a,r)?n.push(r):n.push(en(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"===typeof r)e[n]=r;else{const t=I(n);e[t]=en(r,t)}}return e}}class nn{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof nn)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new m(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Object(l.hc)(e,t.dtype)}catch(n){throw new m(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof oe){if(null==this.id2Value[t.id])throw new m("Nonexistent key: "+t.name);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new m("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]}}getMask(t){if(t instanceof oe){if(null==this.id2Value[t.id])throw new m("Nonexistent key: "+t.name);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new m("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Object(l.vc)(this.id2Mask)}}const rn={},an={};function sn(t,e,n,r){const a=null!=n&&n.training,s=Array.isArray(t),i=s?t:[t],o=i.map(t=>t.name),u=[],c=e.names();for(const l of o)-1!==c.indexOf(l)?u.push(e.getValue(l)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=o.join(",")+"|"+e.names().join(",");let h,p;if(null==rn[d]){const t=function(t,e){l.ee.assert(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const a=un(t[0],e);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of t){const{sorted:t,recipientMap:i}=un(s,e);for(const e of t)a.has(e.name)||(n.push(e),a.add(e.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:on(r)}}(i,e);h=t.sorted,p=t.recipientCounts,rn[d]=h,an[d]=p}h=rn[d],p={},a||Object.assign(p,an[d]);const f=new nn(e);for(let m=0;m<h.length;++m){if(null!=r){const t=Object(l.Zc)().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const t=h[m],s=t.sourceLayer;if(s instanceof he)continue;const i=[],c=[],d=[];let b=!1;for(const n of t.inputs){const t=f.getValue(n),r=f.getMask(n);i.push(t),c.push(r),null!=r&&(b=!0),a||(p[n.name]--,0!==p[n.name]||e.hasKey(n)||-1!==o.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||d.push(t))}b&&((n=n||{}).mask=c[0]);const g=v(s.apply(i,n));let y=null;s.supportsMasking&&(y=s.computeMask(i,c));const O=cn(t),x=Array.isArray(O)?O:[O];for(let e=0;e<x.length;++e){f.hasKey(x[e])||f.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}a||Object(l.vc)(d)}return f.disposeMasks(),s?u:u[0]}function on(t){const e={};for(const n in t)e[n]=t[n].size;return e}function un(t,e){const n=new Set,r=[],a={};for(const o of e.names())n.add(o);const s=[],i=[];for(s.push(t);s.length>0;){const t=s[s.length-1];if(n.has(t.name)){s.pop();continue}const e=i[i.length-1]===s.length-1;if(0===t.inputs.length||e)s.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(s.length-1);for(const e of t.inputs)null==a[e.name]&&(a[e.name]=new Set),a[e.name].add(t.name),n.has(e.name)||s.push(e)}}return{sorted:r,recipientMap:a}}function cn(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class ln extends de{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Jt(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],T(this.inputs).length!==this.inputs.length)throw new m("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(t=>t.name));T(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(t=>t.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const f of this.outputs){const t=f.sourceLayer,e=f.nodeIndex,n=f.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const f of this.inputs){const t=f.sourceLayer,e=f.nodeIndex,n=f.tensorIndex;O(0===e,"input layer has >1 nodes"),O(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let f=0;f<this.inputLayers.length;f++){const e=this.inputLayers[f];if(!(e instanceof he))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${f} (0-based) originates from layer type ${e.getClassName()}.`);this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const f of this.outputLayers)this.outputNames.push(f.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},a={},s={},i=[],o=(t,e,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=t.sourceLayer,a=t.nodeIndex,u=t.tensorIndex);const c=r.inboundNodes[a];if(-1!==n.indexOf(c))throw new f(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(c))return;this.containerNodes.add(ln.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let s=0;s<l;s++){const t=c.inputTensors[s],r=c.inboundLayers[s],a=c.nodeIndices[s],i=c.tensorIndices[s];o(t,e,n,r,a,i)}for(e.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);i.push(c)},u=[],c=[];for(const f of this.outputs)o(f,u,c);const l=i.slice().reverse();for(const f of l){n[f.id]=f,f.id in e||(e[f.id]=0);let t=e[f.id];const s=null==r[f.outboundLayer.id]?0:r[f.outboundLayer.id];t=Math.max(t,s),r[f.outboundLayer.id]=t,a[f.outboundLayer.id]=f.outboundLayer,e[f.id]=t;for(let r=0;r<f.inboundLayers.length;r++){const a=f.inboundLayers[r],s=f.nodeIndices[r],i=a.inboundNodes[s],o=null==e[i.id]?0:e[i.id];e[i.id]=Math.max(t+1,o),n[i.id]=i}}const d={};for(const f in e){const t=e[f];t in d||(d[t]=[]),d[t].push(n[f])}const h={};for(const f in r){const t=r[f];t in h||(h[t]=[]),h[t].push(a[f])}let p=Object.keys(h).map(t=>parseInt(t,10)).sort(C);this.layers=[];for(const f of p){const t=h[f];t.sort((t,e)=>{const n=s[t.id],r=s[e.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof ln&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,p=Object.keys(d).map(t=>parseInt(t,10)).sort(C);const b=this.inputs.slice(),g=[];for(const m of p)for(const t of d[m]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===b.indexOf(n))throw new f("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${e.name}". The following previous layers were accessed without issue: `+g);for(const e of t.outputTensors)b.push(e);g.push(e.name)}}this.nodesByDepth=d;const y=this.layers.map(t=>t.name);for(const m of y){const t=y.filter(t=>t===m).length;if(1!==t)throw new f(`The name "${m}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new ce({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new m("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const s of this.layers)for(const t of s.weights){if(null!=n[t.originalName])throw new m("Duplicate weight name: "+t.originalName);n[t.originalName]=t,r++}const a=[];for(const s in t){let r=s;if(null==n[s]){const t=s.split("/");r=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[r])a.push([n[r],t[s]]);else if(e)throw new m("Provided weight data has no target variable: "+s);delete n[r]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new m(`${t.length} of ${r} weights are not set: `+t)}se(a)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.7.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=function t(e,n){if(null===e||void 0===e)return null;if("string"===typeof e)return j(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const r=[],a=e.length;for(let s=0;s<a;++s){const a=e[s];tn(n,s,a)?r.push(a):r.push(t(a,n))}return r}{const n={};for(const r of Object.keys(e)){const a=e[r];n[j(r)]="name"!==r&&"className"!==r||"string"!==typeof a?t(a,r):a}return n}}(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Object(l.Xd)(()=>{t=v(t);const n=new nn;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return sn(this.outputs,n,e)})}computeMask(t,e){return Object(l.Xd)(()=>{let n;return t=v(t),n=null==e?y(null,t.length):v(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=Qt(t);if(e.length!==this.inputLayers.length)throw new m(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<e.length;i++){const t=this.inputLayers[i],r=e[i];n[t.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(C);if(r.length>1)for(const i of r){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(t.id))continue;const r=[];for(let i=0;i<e.inboundLayers.length;i++){const t=e.inboundLayers[i],a=e.nodeIndices[i],s=e.tensorIndices[i],o=n[`${t.name}_${a}_${s}`];r.push(o)}const a=Qt(t.computeOutputShape(w(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}const a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],e=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${t.name}_${e}_${n}`;s.push(r)}for(let i=0;i<s.length;i++){const t=s[i];O(t in n),a.push(n[t])}return w(a)}runInternalGraph(t,e){null==e&&(e=y(null,t.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],a=t[o],s=e[o];n[r.id]=[a,s]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(C);for(const o of r){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,c={};if(null!=e.callArgs&&(c=e.callArgs),1===s.length){const[e,n]=s[0];null==c.mask&&(c.mask=n),o=v(t.call(e,c)),u=v(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map(t=>t[0]),i=s.map(t=>t[1]),null==c.mask&&(c.mask=i),o=v(t.call(r,c)),u=v(t.computeMask(r,i));if(t.activityRegularizer)throw new b("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<a.length;++t){const e=a[t],r=o[t],s=u[t];n[e.id]=[r,s]}}}}const a=[],s=[],i=[];for(const o of this.outputs){O(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[t,e]=n[o.id];i.push(t.shape),a.push(t),s.push(e)}return[a,s,i]}buildNodeConversionMap(t){const e={};let n;for(const r of this.layers){n=r instanceof ln?1:0;for(let t=0;t<r.inboundNodes.length;t++){const a=ln.nodeKey(r,t);this.containerNodes.has(a)&&(e[a]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new m(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new m("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new m("No such layer: "+t)}calculateLosses(){return Object(l.Xd)(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=ln.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const t=i.getClassName(),r=i.getConfig(),a=[];for(let n=0;n<i.inboundNodes.length;n++){const t=i.inboundNodes[n],r=ln.nodeKey(i,n);let o={};if(this.containerNodes.has(r)){if(t.callArgs)try{JSON.stringify(t.callArgs),o=t.callArgs}catch(s){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: `+t.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),o={}}if(t.inboundLayers.length>0){const n=[];for(let r=0;r<t.inboundLayers.length;r++){const a=t.inboundLayers[r],s=t.nodeIndices[r],i=t.tensorIndices[r];let u=e[ln.nodeKey(a,s)];null==u&&(u=0),n.push([a.name,u,i,o])}a.push(n)}}}const o={};o.name=i.name,o.className=t,o.config=r,o.inboundNodes=a,n.push(o)}t.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const t=this.inputLayers[i],n=this.inputLayersNodeIndices[i],a=ln.nodeKey(t,n);if(!this.containerNodes.has(a))continue;let s=e[a];null!==s&&void 0!==s||(s=0);const o=this.inputLayersTensorIndices[i];r.push([t.name,s,o])}t.inputLayers=r;const a=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=ln.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let s=e[r];null!==s&&void 0!==s||(s=0);const o=this.outputLayersTensorIndices[i];a.push([t.name,s,o])}return t.outputLayers=a,t}static fromConfig(t,e,n={},r=!1){const a={},s={};function i(t,e){t.name in s?s[t.name].push(e):s[t.name]=[e]}function o(t,e){const n=[];let r;for(const s of e){const o=s[0],u=s[1],c=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(t,e);const l=a[o];if(l.inboundNodes.length<=u)return void i(t,e);const d=l.inboundNodes[u];n.push(d.outputTensors[c])}n.length>0&&t.apply(w(n),r)}function u(t){const n=t.name,s=ke(t,null!=e.customObjects?e.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s;t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new m("Corrupted configuration, expected array for nodeData: "+t);i(s,t)})}const c=e.name,l=e.layers;for(const m of l)u(m);for(;!A(s);)for(const t of l){const e=a[t.name];if(e.name in s){const t=s[e.name];delete s[e.name];for(const n of t)o(e,n)}}const d=[],h=[],p=e.inputLayers;for(const m of p){const t=m[0],e=m[1],n=m[2];O(t in a);const r=a[t].inboundNodes[e].outputTensors;d.push(r[n])}const f=e.outputLayers;for(const m of f){const t=m[0],e=m[1],n=m[2];O(t in a);const r=a[t].inboundNodes[e].outputTensors;h.push(r[n])}return new t({inputs:d,outputs:h,name:c})}get stateful(){if(this._stateful)throw new m("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Object(l.Xd)(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function dn(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"===typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"===typeof t&&Object.keys(t).length>0&&"object"===typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function hn(t,e){return dn(t,e,"classWeight")}async function pn(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Object(l.Xd)(()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await e.data());Object(l.vc)(e);const a=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);a.push(n[t])}),Object(l.Td)(a,"float32")}return null}function fn(t,e){return Object(l.dd)(t,e)}function mn(t,e){let n,r;const a=e;n=a.xs,r=a.ys,l.ee.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e);const s=bn("input",t.inputNames,n),i=bn("output",t.outputNames,r),o=s[0].shape[0];l.ee.assert(s.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: `+JSON.stringify(t.inputNames)+")"),l.ee.assert(i.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: `+JSON.stringify(t.outputNames)+")");for(let u=0;u<s.length;u++)l.ee.assert(s[u].shape[0]===o,()=>`Batch size mismatch: input ${t.inputNames[u]} has ${s[u].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);for(let u=0;u<i.length;u++)l.ee.assert(i[u].shape[0]===o,()=>`Batch size mismatch: output ${t.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`);return{xs:s,ys:i}}function bn(t,e,n){if(n instanceof l.Ob)return[n];if(Array.isArray(n))return l.ee.assert(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const a of e){if(null==n[a])throw new m(`The feature data generated by the dataset lacks the required ${t} key '${a}'.`);r.push(n[a])}return r}}async function gn(t,e,n){const r=null!=n.batchesPerEpoch;if(l.ee.assert(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),l.ee.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),l.ee.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),l.ee.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),l.ee.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(yn(n.validationData))l.ee.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const t=function(t){if(3===t.length)throw new b("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);s=t.xs,i=t.ys}const o=t.makeTrainFunction(),u=t.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map(t=>"val_"+t)):u.slice();const d=ve(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=Ie(d,h,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,a,c);p.setModel(t),t.history=f,await p.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;m<n.epochs;){const c={};await p.onEpochBegin(m);let d=0,h=0;for(r||(g=await e.iterator());!r||d<n.batchesPerEpoch;){const e=await g.next();if(r&&e.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+d+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:a}=mn(t,e.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const e=hn(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await pn(a[t],null,e[t]))}const c=r.concat(a).concat(i),f=o(c);l.vc(c);for(let t=0;t<u.length;++t){const e=u[t],n=f[t];s[e]=n,l.Nc(n)}await p.onBatchEnd(h,s),me(s),h++,d++}if(r?d>=n.batchesPerEpoch:e.done){if(a){let e;e=yn(n.validationData)?v(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):v(t.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)c["val_"+t.metricsNames[n]]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(m,c),m++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function yn(t){return"function"===typeof t.iterator}function On(t){l.ee.assert(t>0&&Number.isInteger(t),()=>"batchSize is required to be a positive integer, but got "+t)}function xn(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>ht(t,e,n-e)):ht(t,e,n-e)}function wn(t,e){return l.Xd(()=>null==t?null:Array.isArray(t)?t.map(t=>wn(t,e)):xt(t,"int32"===e.dtype?e:e.toInt()))}function vn(t,e){const n=[];let r=0,a=null;for(;r<t;)a=r+e,a>=t&&(a=t),n.push([r,a]),r=a;return n}async function jn(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,c,d;t.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;On(h);const p=!1,f=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,p,h);a=f[0],s=f[1],d=f[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new b("validationData including sample weights is not supported yet."):new m("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");i=r.validationData[0],o=r.validationData[1];const e=!0,n=await t.standardizeUserData(i,o,null,null,e,h);u=n[0],c=n[1],g=u.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const t=Math.floor(a[0].shape[0]*(1-r.validationSplit)),e=a[0].shape[0];u=xn(a,t,e),a=xn(a,0,t),c=xn(s,t,e),s=xn(s,0,t),g=u.concat(c)}else null!=r.validationSteps&&(y=!0);const O=a.concat(s).concat(d);t.checkTrainableWeightsConsistency();const x=t.makeTrainFunction(),w=t.getDedupedMetricsNames();let v,j;y?(t.makeTestFunction(),v=t.testFunction,j=w.slice().concat(w.map(t=>"val_"+t))):(v=null,g=[],j=w.slice());const I=ve(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,a,s,i,o,u,c,d,h,p,f,g){null==a&&(a=32),null==s&&(s=1),null==d&&(d=!0),null==p&&(p=0);let y=!1;if(null!=u&&null!=c&&(y=!0),null!=g&&(y=!0,null==f))throw new m("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const O=t.checkNumSamples(n,a,f,"steps_per_epoch");let x;null!=O&&(x=ct(0,O)),null==i&&(i=1);const{callbackList:w,history:v}=Ie(o,i,s,p,O,f,a,y,h);w.setModel(t),t.history=v,await w.onTrainBegin(),t.stopTraining_=!1;for(let m=p;m<s;++m){await w.onEpochBegin(m);const s={};if(null!=f)throw new b("stepsPerEpoch mode is not implemented yet.");{if("batch"===d)throw new b("batch shuffling is not implemneted yet");d&&l.ee.shuffle(x);const i=Object(l.Td)(x),o=vn(O,a);for(let d=0;d<o.length;++d){const h={};if(await w.onBatchBegin(d,h),l.Xd(()=>{const p=o[d][0],f=o[d][1],m=ht(i,p,f-p);h.batch=d,h.size=f-p;const b=wn(n,m),g=e(b);for(let t=0;t<r.length;++t){const e=r[t],n=g[t];h[e]=n,l.Nc(n)}if(d===o.length-1&&y){const e=t.testLoop(u,c,a);for(let t=0;t<r.length;++t){const n=r[t],a=e[t];l.Nc(a),s["val_"+n]=a}}}),await w.onBatchEnd(d,h),me(h),t.stopTraining_)break}i.dispose()}if(await w.onEpochEnd(m,s),t.stopTraining_)break}return await w.onTrainEnd(),await t.history.syncData(),t.history}(t,x,O,w,h,r.epochs,r.verbose,I,v,g,r.shuffle,j,r.initialEpoch,null,null)}finally{t.isTraining=!1,kn(a,e),kn(s,n),kn(u,i),kn(c,o),null!=d&&l.vc(d)}}function In(t){const e=[];t instanceof l.Ob&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(dt(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function kn(t,e){if(null==t)return;const n=[];if(e instanceof l.Ob)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const a in e){const t=e[a];n.push(t.id)}const r=[];if(t instanceof l.Ob)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const a in t){const e=t[a];-1===n.indexOf(e.id)&&r.push(e)}r.forEach(t=>{t.isDisposed||t.dispose()})}function Nn(t){return Array.isArray(t)}function Sn(t){return!function(t){return t instanceof l.Ob}(t)&&!Nn(t)}function Cn(t,e,n,r=!0,a=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Nn(t)&&t.length>0)e=!0;else if(Sn(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new m(`Error when checking model ${a} expected no data, but got `+t)}return[]}if(null==t)return e.map(t=>null);let s;if(Sn(t)){t=t,s=[];for(const n of e){if(null==t[n])throw new m(`No data provided for "${n}". Need data for each key in: `+e);s.push(t[n])}}else if(Nn(t)){if((t=t).length!==e.length)throw new m(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): `+t);s=t}else{if(t=t,e.length>1)throw new m(`The model ${a} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+t.shape);s=[t]}if(s=In(s),null!=n)for(let i=0;i<e.length;++i){if(null==n[i])continue;const t=s[i];if(t.shape.length!==n[i].length)throw new m(`Error when checking ${a}: expected ${e[i]} to have ${n[i].length} dimension(s). but got array with shape `+t.shape);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=t.shape[s],u=n[i][s];if(null!=u&&u>=0&&o!==u)throw new m(`Error when checking ${a}: expected ${e[i]} to have shape [${n[i]}], but got array with shape [${t.shape}].`)}}return s}function Tn(t,e,n,r=!0,a=""){let s;if(Array.isArray(t)){if(t.length!==e.length)throw new m(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);s=t}else{if(e.length>1)throw new m(`The model expects ${e.length} ${a} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(t.shape)+".");s=[t]}if(null!=n)for(let i=0;i<e.length;++i){if(null==n[i])continue;const t=s[i];if(t.shape.length!==n[i].length)throw new m(`Error when checking ${a}: expected ${e[i]} to have ${n[i].length} dimension(s), but got array with shape `+JSON.stringify(t.shape));for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=t.shape[s],u=n[i][s];if(null!=u&&u!==o)throw new m(`Error when checking ${a}: expected ${e[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(t.shape)}.`)}}}class An extends ln{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new m("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Ye(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"===typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>l.Zd.adagrad(.01),Adadelta:()=>l.Zd.adadelta(1,.95,h()),Adam:()=>l.Zd.adam(.001,.9,.999,h()),Adamax:()=>l.Zd.adamax(.002,.9,.999,h(),0),RMSProp:()=>l.Zd.rmsprop(.001,.9,0,h()),SGD:()=>l.Zd.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new m("Unknown Optimizer "+t)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof l.ob))throw new m("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"===typeof t.loss||"function"===typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new m(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map(t=>Me(t))}else{const n=Me(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new m(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Me(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const t=this.internalOutputShapes[s],e=this.outputNames[s];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],tt("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"===typeof t||"function"===typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!==typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+t);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),a=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};tt("metric",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,r,s;for(const i of e){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let a;1===e[e.length-1]||this.lossFunctions[t]===$e?-1!==["accuracy","acc"].indexOf(i)?r=ze:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ve):this.lossFunctions[t]===Re?-1!==["accuracy","acc"].indexOf(i)?r=We:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ke):-1!==["accuracy","acc"].indexOf(i)?r=Le:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ue),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const t=Ge(i);s=t,n=""+Xe(i)}let e;tt(n,()=>{e=s}),a(t,n,e)}})(r[t])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;On(r);const a=this.standardizeUserDataXY(t,e,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return w(this.testLoop(i,s,r,n.verbose,n.steps))}finally{kn(a[0],t),kn(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,a=t.testFunction;let s=[];if(n.verbose>0)throw new b("Verbose mode is not implemented yet.");l.ee.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const i="function"===typeof e.next?e:await e.iterator();let o=0,u=0;for(;!r||u<n.batches;){const e=await i.next();if(s=l.Xd(()=>{if(e.value){const{xs:n,ys:r}=mn(t,e.value),i=n.concat(r),c=l.Xd(()=>a(i));if(l.vc(i),0===u)for(let t=0;t<c.length;++t)s.push(Object(l.wd)(0));const d=i[0].shape[0];for(let t=0;t<c.length;++t){const e=c[t],n=s[t];s[t]=l.Xd(()=>l.Ub(s[t],l.dd(d,e))),u>0&&l.vc(n)}l.vc(c),o+=d,++u}return s}),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<s.length;++c){const t=s[c];s[c]=l.wc(s[c],o),l.vc(t)}return w(s)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let a;if(null!=n){if(a=null,null!=e)throw new m(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+e)}else{if(null==t)throw new m("Either the input data should have a defined shape, or "+r+" shoud be specified.");a=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return a}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new m("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],a=this.retrieveSymbolicTensors(r),s=new nn;if(t instanceof l.Ob&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new m(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(const o of this.inputs){const e=t[o.name];if(null==e)throw new m("No value is provided for the model's input "+o.name);s.add(o,e)}const i=sn(a,s);return n?i:i[0]}retrieveSymbolicTensors(t){const e=y(null,t.length);let n=t.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map(t=>t.name);for(let r=0;r<t.length;++r){const i=s.indexOf(t[r]);if(-1!==i&&(e[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new m("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return e}predictLoop(t,e=32,n=!1){return l.Xd(()=>{const r=this.checkNumSamples(t);if(n)throw new b("Verbose predictLoop() is not implemented yet.");const a=vn(r,e),s=this.outputs.map(t=>[]);for(let e=0;e<a.length;++e){l.Xd(()=>{const n=a[e][0],r=a[e][1],s=xn(t,n,r),i=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)i.push({key:this.inputs[t],value:s[t]});else i.push({key:this.inputs[0],value:s});const o=new nn(i);return sn(this.outputs,o)}).forEach((t,e)=>s[e].push(t))}return w(s.map(t=>l.kc(t,0)))})}predict(t,e={}){const n=In(t);Tn(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return On(r),this.predictLoop(n,r)}finally{kn(n,t)}}predictOnBatch(t){Tn(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new f("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let s=0;s<this.feedOutputShapes.length;++s){const t=this.feedOutputShapes[s];this.feedLossFns[s]===Re?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(t,e,n){const r=T(t.map(t=>t.shape[0]));r.sort();const a=T(e.map(t=>t.shape[0]));if(a.sort(),r.length>1)throw new m("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(t=>t.shape)));if(a.length>1)throw new m("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(t=>t.shape)));if(r.length>0&&a.length>0&&!l.ee.arraysEqual(r,a))throw new m(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(t=Cn(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Cn(e,this.feedOutputNames,a,!1,"target")),function(t,e,n){const r=[Se,$e,Ee];for(let a=0;a<t.length;++a){const s=t[a],i=e[a],o=n[a];if(null!=i){if(i===Ee&&1===s.shape[s.shape.length-1])throw new m(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=s.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],a=e[n];if(null!=a&&r!==a)throw new m(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!==0)throw new m(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(t,e,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=hn(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await pn(o[e],null,t[e]))}return[i,o,u]}testLoop(t,e,n,r=0,a){return l.Xd(()=>{const s=this.checkNumSamples(e,n,a,"steps"),i=[];if(r>0)throw new b("Verbose mode is not implemented yet.");if(null!=a)throw new b("steps mode in testLoop() is not implemented yet");{const r=vn(s,n),a=Object(l.Td)(ct(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=ht(a,s,o-s),c=wn(e,u),d=t(c);if(0===n)for(let t=0;t<d.length;++t)i.push(Object(l.wd)(0));for(let t=0;t<d.length;++t){const e=d[t];i[t]=l.Ub(i[t],l.dd(o-s,e))}}for(let t=0;t<i.length;++t)i[t]=l.wc(i[t],s)}return i})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let a=r;if(x(t,r)>1){a+="_"+x(t.slice(0,n),r)}e.push(a)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map(t=>t.read());return[this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new nn(t),o=sn(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(r[n],o[n]);null!=a[n]&&(t=fn(t,a[n]));const s=l.Yc(t);e.push(s),u=0===n?t:l.Ub(u,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],a=this.metricsTensors[n][1];t=l.Yc(e(r[a],o[a]))}l.Nc(t),s.push(t)}return u=l.Yc(u),this.calculateLosses().forEach(t=>{u=l.Ub(u,t)}),u},!0,i)].concat(s)}}makeTestFunction(){this.testFunction=t=>l.Xd(()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let t=0;t<this.inputs.length;++t)s.push({key:this.inputs[t],value:r[t]});const i=new nn(s),o=sn(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],s=l.Yc(r(a[t],o[t]));n=0===t?s:l.Ub(n,s),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],s=l.Yc(n(a[r],o[r]));e.push(s)}return e})}async fit(t,e,n={}){return jn(this,t,e,n)}async fitDataset(t,e){return gn(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const o of s){const t=await o.data();i.push(t[0])}return l.vc(s),w(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||e.push({name:r[s].originalName,tensor:a[s]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=l.Zc().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-l.Zc().numTensors}return t}getLossIdentifiers(){let t;if("string"===typeof this.loss)t=j(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!==typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>j(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=j(n[r])}}return t}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[j(Xe(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>j(Xe(t)));{const t={};for(const e in this.metrics)t[e]=j(Xe(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=ke(en(t.optimizer_config));let n,r;if("string"===typeof t.loss)n=I(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>I(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=I(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>I(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=I(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"===typeof t){const e=l.Mc.getSaveHandlers(t);if(0===e.length)throw new m(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new m(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new m("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await l.Mc.encodeWeights(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.7.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:a}=await l.Mc.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...a),n.data=l.Mc.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;qe(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){qe(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}An.className="Model",l.zd.registerClass(An);class En extends An{}En.className="Functional",l.zd.registerClass(En);class Rn extends An{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Jt("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new m("Negative dimension size caused by adding layer "+t.name+" with input shape ["+t.inboundNodes[0].inputTensors[0].shape+"]")}add(t){const e=t instanceof Rn||t instanceof An;let n;if(e){if(n=t,1!==n.outputs.length)throw new m("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new m("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new m("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=pe({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new m(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new m("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=function t(e,n,r){if((null==n||null!=r&&r>0)&&(n=e.sourceLayer,r=e.nodeIndex),0===n.inboundNodes.length)return[e];{const e=n.inboundNodes[r];if(0===e.inboundLayers.length)return e.inputTensors;{const n=[];for(let r=0;r<e.inboundLayers.length;r++){const a=t(e.inputTensors[r],e.inboundLayers[r],e.nodeIndices[r]);for(const t of a)-1===n.indexOf(t)&&n.push(t)}return n}}}(this.outputs[0])}this.inboundNodes=[],new ce({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:y(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(ee(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new An({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new f("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new f("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new f("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new f("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let a,s={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new m("Legacy serialization format not supported yet.");a=e}else l.ee.assert(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=e.layers,delete e.layers,s=e;const i=new t(s);if(!(i instanceof Rn))throw new b("Sequential.fromConfig called on non-Sequential input: "+i);for(const o of a){const t=ke(o,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(t){if(null==this.model)throw new m("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new m("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Rn.className="Sequential",l.zd.registerClass(Rn);class $n extends l.zd.Serializable{getConfig(){return{}}}class Fn extends $n{apply(t,e=1){return function(t,e=1){if(1!==e)throw new b(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return l.yc(t)}(t,e)}}Fn.className="elu",l.zd.registerClass(Fn);class Dn extends $n{apply(t){return l.xd(t)}}Dn.className="selu",l.zd.registerClass(Dn);class _n extends $n{apply(t){return l.td(t)}}_n.className="relu",l.zd.registerClass(_n);class Mn extends $n{apply(t){return Object(l.Xd)(()=>l.bd(6,l.td(t)))}}Mn.className="relu6",l.zd.registerClass(Mn);class zn extends $n{apply(t){return t}}zn.className="linear",l.zd.registerClass(zn);class Ln extends $n{apply(t){return l.Bd(t)}}Ln.className="sigmoid",l.zd.registerClass(Ln);class Bn extends $n{apply(t){return function(t){return Object(l.Xd)(()=>{const e=l.Ub(.5,l.dd(.2,t));return l.ic(e,0,1)})}(t)}}Bn.className="hardSigmoid",l.zd.registerClass(Bn);class Pn extends $n{apply(t){return l.Jd(t)}}Pn.className="softplus",l.zd.registerClass(Pn);class Vn extends $n{apply(t){return function(t){return Object(l.Xd)(()=>l.wc(t,l.Tb(t).add(1)))}(t)}}Vn.className="softsign",l.zd.registerClass(Vn);class Wn extends $n{apply(t){return l.Rd(t)}}Wn.className="tanh",l.zd.registerClass(Wn);class Un extends $n{apply(t,e=-1){return l.Id(t,e)}}Un.className="softmax",l.zd.registerClass(Un);class Kn extends $n{apply(t,e=-1){return l.Sc(t,e)}}Kn.className="logSoftmax",l.zd.registerClass(Kn);class Hn extends $n{apply(t,e=1){return Object(l.Xd)(()=>l.Bd(t.mul(e)).mul(t))}}function Gn(t){return t.getClassName()}function Xn(t,e={}){return S(t,l.zd.SerializationMap.getMap().classNameMap,e,"activation")}function qn(t){if(null==t){const t={className:"linear",config:{}};return Xn(t)}if("string"===typeof t){const e={};return e.className=t,e.config={},Xn(e)}return t instanceof $n?t:Xn(t)}function Yn(t){if(null!=t&&"object"!==typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+t)}Hn.className="swish",l.zd.registerClass(Hn);class Jn extends l.zd.Serializable{}class Zn extends Jn{constructor(t){super(),Yn(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Object(l.Xd)(()=>{let e=Object(l.je)([1]);return this.hasL1&&(e=Object(l.Ub)(e,Object(l.Pd)(l.dd(this.l1,Object(l.Tb)(t))))),this.hasL2&&(e=Object(l.Ub)(e,Object(l.Pd)(l.dd(this.l2,wt(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Zn.className="L1L2",l.zd.registerClass(Zn);const Qn={l1l2:"L1L2"};function tr(t){return N(t)}function er(t,e={}){return S(t,l.zd.SerializationMap.getMap().classNameMap,e,"regularizer")}function nr(t){if(null==t)return null;if("string"===typeof t){return er({className:t in Qn?Qn[t]:t,config:{}})}return t instanceof Jn?t:er(t)}class rr extends de{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=te(t);let n=Object(l.td)(t);return null!=this.maxValue&&(n=Object(l.ic)(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}rr.className="ReLU",l.zd.registerClass(rr);class ar extends de{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=te(t);return Object(l.Pc)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}ar.className="LeakyReLU",l.zd.registerClass(ar);class sr extends de{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Gt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=nr(t.alphaRegularizer),this.alphaConstraint=U(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!==typeof t.sharedAxes)throw new m("Expected sharedAxes to be a number or an array of numbers, but got "+t.sharedAxes);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=ee(t)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<t.length;++r)n[r]=t[r];this.inputSpec=[new ie({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=te(t),Object(l.md)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Ht(this.alphaInitializer),alphaRegularizer:tr(this.alphaRegularizer),alphaConstraint:V(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}sr.className="PReLU",l.zd.registerClass(sr);class ir extends de{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new b(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=te(t);return Object(l.yc)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}ir.className="ELU",l.zd.registerClass(ir);class or extends de{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=te(t);return n.mul(lt(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}or.className="ThresholdedReLU",l.zd.registerClass(or);class ur extends de{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Un).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=te(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function cr(t,e,n){if("number"===typeof t)return y(t,e);if(t.length!==e)throw new m(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let a=0;a<e;++a){const s=t[a];if((r=s)!==parseInt(r.toString(),10))throw new m(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number `+s)}return t;var r}function lr(t,e,n,r,a=1){if(null==t)return t;let s;return s="same"===n?t:t-(e+(e-1)*(a-1))+1,Math.floor((s+r-1)/r)}function dr(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+ut([n-e,0]);else{if("same"!==r)throw new m(`Unsupport padding mode: ${r}.`);t*=e}return t}function hr(t,e){return Object(l.Xd)(()=>(Y(e),"channelsFirst"===e?l.ae(t,[0,2,3,1]):t))}function pr(t,e){return Object(l.Xd)(()=>(Y(e),"channelsFirst"===e?l.ae(t,[0,2,3,4,1]):t))}function fr(t,e,n,r=1,a="valid",s,i=1){return Object(l.Xd)(()=>{if(null==s&&(s="channelsLast"),Y(s),3!==t.shape.length)throw new m("The input of a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead.");if(3!==e.shape.length)throw new m("The kernel for a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new m("The bias for a conv1dWithBias operation should be 1, but is "+e.shape.length+" instead");if("channelsFirst"===s&&(t=l.ae(t,[0,2,1])),"causal"===a)throw new b("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=l.pc(t,e,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=jt(o,n)),o})}function mr(t,e,n,r=[1,1],a="valid",s,i,o=null){return Object(l.Xd)(()=>{if(null==s&&(s="channelsLast"),Y(s),3!==t.rank&&4!==t.rank)throw new m(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new m(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let u=hr(t,s);if("causal"===a)throw new b("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=l.Hc.conv2d({x:u,filter:e,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=l.ae(u,[0,3,1,2])),u})}function br(t,e,n,r=[1,1,1],a="valid",s,i){return Object(l.Xd)(()=>{if(null==s&&(s="channelsLast"),Y(s),4!==t.rank&&5!==t.rank)throw new m("conv3dWithBias expects input to be of rank 4 or 5, but received "+t.rank+".");if(4!==e.rank&&5!==e.rank)throw new m("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+t.rank+".");let o=pr(t,s);if("causal"===a)throw new b("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=l.sc(o,e,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=jt(o,n)),"channelsFirst"===s&&(o=l.ae(o,[0,4,1,2,3])),o})}ur.className="Softmax",l.zd.registerClass(ur);class gr extends de{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",gr.verifyArgs(e),this.rank=t,$(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new b(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=cr(e.kernelSize,t,"kernelSize"),this.strides=cr(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,J(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Y(this.dataFormat),this.activation=qn(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=U(e.biasConstraint),this.biasRegularizer=nr(e.biasRegularizer),this.activityRegularizer=nr(e.activityRegularizer),this.dilationRate=cr(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new m("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new m("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new m("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(t){if(O("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!==typeof t.kernelSize&&!R(t.kernelSize,"number",1,3))throw new m(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Gn(this.activation),useBias:this.useBias,biasInitializer:Ht(this.biasInitializer),biasRegularizer:tr(this.biasRegularizer),activityRegularizer:tr(this.activityRegularizer),biasConstraint:V(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class yr extends gr{constructor(t,e){super(t,e),this.kernel=null,yr.verifyArgs(e),this.filters=e.filters,$(this.filters,"filters"),this.kernelInitializer=Gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=U(e.kernelConstraint),this.kernelRegularizer=nr(e.kernelRegularizer)}build(t){t=ee(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new m("The channel dimension of the input should be defined. Found "+t[e]);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Object(l.Xd)(()=>{let e;t=te(t);const n=null==this.bias?null:this.bias.read(),r=F(this.activation.getClassName());if(null!=r&&2===this.rank)e=mr(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=fr(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=mr(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new b("convolutions greater than 3D are not implemented yet.");e=br(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=ee(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<n.length;++a){const t=lr(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Ht(this.kernelInitializer),kernelRegularizer:tr(this.kernelRegularizer),kernelConstraint:V(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!==typeof t.filters||t.filters<1)throw new m("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))}}class Or extends yr{constructor(t){super(2,t),Or.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!R(t.kernelSize,"number",1,2))throw new m(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Or.className="Conv2D",l.zd.registerClass(Or);class xr extends yr{constructor(t){super(3,t),xr.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new m(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}xr.className="Conv3D",l.zd.registerClass(xr);class wr extends Or{constructor(t){if(super(t),this.inputSpec=[new ie({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new m("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(4!==(t=ee(t)).length)throw new m("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new m("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ie({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return l.Xd(()=>{let e=te(t);if(4!==e.shape.length)throw new m("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);const n=e.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],c=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[r,dr(i,d,u,this.padding),dr(o,h,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=l.ae(e,[0,2,3,1]));let f=l.rc(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=l.ae(f,[0,3,1,2])),null!=this.bias&&(f=jt(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f})}computeOutputShape(t){const e=(t=ee(t)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=dr(e[r],o,s,this.padding),e[a]=dr(e[a],u,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}wr.className="Conv2DTranspose",l.zd.registerClass(wr);class vr extends yr{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new m("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new m("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new m(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(e.padding));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Gt(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=nr(e.depthwiseRegularizer),this.depthwiseConstraint=U(e.depthwiseConstraint),this.pointwiseInitializer=Gt(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=nr(e.pointwiseRegularizer),this.pointwiseConstraint=U(e.pointwiseConstraint)}build(t){if((t=ee(t)).length<this.rank+2)throw new m(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new m("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let s=0;s<this.rank;++s)a.push(1);a.push(n*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,true,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,true,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,true,this.biasConstraint):this.bias=null,this.inputSpec=[new ie({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Object(l.Xd)(()=>{let e;if(t=te(t),1===this.rank)throw new b("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=l.ae(t,[0,2,3,1])),e=l.yd(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=jt(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=l.ae(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Ht(this.depthwiseInitializer),t.pointwiseInitializer=Ht(this.pointwiseInitializer),t.depthwiseRegularizer=tr(this.depthwiseRegularizer),t.pointwiseRegularizer=tr(this.pointwiseRegularizer),t.depthwiseConstraint=V(this.depthwiseConstraint),t.pointwiseConstraint=V(this.pointwiseConstraint),t}}vr.className="SeparableConv";class jr extends vr{constructor(t){super(2,t)}}jr.className="SeparableConv2D",l.zd.registerClass(jr);class Ir extends yr{constructor(t){super(1,t),Ir.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!R(t.kernelSize,"number",1,1))throw new m(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Ir.className="Conv1D",l.zd.registerClass(Ir);class kr extends de{constructor(t){super(t),"number"===typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"===typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Object(l.Xd)(()=>{if(t=te(t),"channelsLast"===this.dataFormat){const e=ft(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ft(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=ft(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ft(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}kr.className="Cropping2D",l.zd.registerClass(kr);class Nr extends de{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return l.Xd(()=>{let e=te(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=l.ae(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],a=e.resizeNearestNeighbor([t,r]);return l.ae(a,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return e.resizeNearestNeighbor([t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Nr.className="UpSampling2D",l.zd.registerClass(Nr);class Sr extends gr{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Gt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=U(t.depthwiseConstraint),this.depthwiseRegularizer=nr(t.depthwiseRegularizer)}build(t){if((t=ee(t)).length<4)throw new m(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new m(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(l.Xd)(()=>{let e=function(t,e,n=[1,1],r="valid",a,s){return Object(l.Xd)(()=>{null==a&&(a="channelsLast"),Y(a);let i=hr(t,a);if(4!==t.rank)throw new m("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==e.rank)throw new m("depthwiseKernel is required to be 4-D, but is instead "+e.rank+"-D");return i=l.tc(i,e,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=l.ae(i,[0,3,1,2])),i})}(t=te(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=jt(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=ee(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,a=lr(e,this.kernelSize[0],this.padding,this.strides[0]),s=lr(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,a,s]:[t[0],a,s,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Ht(this.depthwiseInitializer),t.depthwiseRegularizer=tr(this.depthwiseRegularizer),t.depthwiseConstraint=V(this.depthwiseRegularizer),t}}function Cr(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new m("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function a(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=a(e),constants:n=a(n)}}function Tr(t,e,n,r=!1,a,s,i=!1,o=!1){return l.Xd(()=>{const u=e.shape.length;if(u<3)throw new m(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(ct(2,u));if(e=l.ae(e,c),null!=s)throw new b("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===u-1&&(a=l.Dc(a,-1)),a=l.ae(a,c)),r&&(e=l.vd(e,0),null!=a&&(a=l.vd(a,0)));const d=[];let h,p=n;const f=e.shape[0],g=l.ce(e);let y,O;null!=a&&(y=l.ce(a));for(let e=0;e<f;++e){const n=g[e],r=l.Xd(()=>t(n,p));if(null==a)h=r[0],p=r[1];else{const t=l.Xd(()=>{const t=y[e],n=l.jd(t).sub(t);return{output:r[0].mul(t).add(p[0].mul(n)),newStates:p.map((e,a)=>r[1][a].mul(t).add(e.mul(n)))}});h=t.output,p=t.newStates}o&&d.push(h)}if(o){const t=1;O=l.Nd(d,t)}return[h,O,p]})}Sr.className="DepthwiseConv2D",l.zd.registerClass(Sr);class Ar extends de{constructor(t){let e;if(super(t),null==t.cell)throw new m("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new zr({cells:t.cell}):t.cell,null==e.stateSize)throw new m("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new ie({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return ct(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null)}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Zt(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return l.Xd(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new b("Constants support is not implemented in RNN yet.");Zt(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new ie({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!l.ee.arraysEqual(this.stateSpec.map(t=>t.shape[t.shape.length-1]),a))throw new m(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=a.map(t=>new ie({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){Object(l.Xd)(()=>{if(!this.stateful)throw new p("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new m("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>l.je([n,t])):this.states_=[l.je([n,this.cell.stateSize])];else if(null==t)l.vc(this.states_),null!=this.keptStates&&(l.vc(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>l.je([n,t])):this.states_[0]=l.je([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new m(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);!0===e?this.keptStates.push(this.states_.slice()):l.vc(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,s=[n,a];if(!l.ee.arraysEqual(r.shape,s))throw new m(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>l.Nc(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const a=Cr(t,n,r,this.numConstants);t=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){e.initialState=n,s=s.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new ie({shape:t.shape}));i=i.concat(this.stateSpec)}null!=r&&(e.constants=r,s=s.concat(r),this.numConstants=r.length);if(s[0]instanceof oe){const n=[t].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=a,o}return super.apply(t,e)}call(t,e){return Object(l.Xd)(()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let a=null==e?null:e.initialState;t=te(t),null==a&&(a=this.stateful?this.states_:this.getInitialState(t));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new m(`RNN Layer has ${s} state(s) but was passed `+a.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Tr((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]},t,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],c=o[1],l=o[2];this.stateful&&this.resetStates(l,r);const d=this.returnSequences?c:u;return this.returnState?[d].concat(l):d})}getInitialState(t){return Object(l.Xd)(()=>{let e=l.je(t.shape);return e=l.Pd(e,[1,2]),e=dt(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?gt(e,[1,t]):e):this.cell.stateSize>1?[gt(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ar.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=ke(e.cell,n);return new t(Object.assign(e,{cell:r}))}}Ar.className="RNN",l.zd.registerClass(Ar);class Er extends de{}class Rr extends Er{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,$(this.units,"units"),this.activation=qn(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Gt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=nr(t.kernelRegularizer),this.recurrentRegularizer=nr(t.recurrentRegularizer),this.biasRegularizer=nr(t.biasRegularizer),this.kernelConstraint=U(t.kernelConstraint),this.recurrentConstraint=U(t.recurrentConstraint),this.biasConstraint=U(t.biasConstraint),this.dropout=ot([1,ut([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ot([1,ut([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ee(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(l.Xd)(()=>{if(2!==(t=t).length)throw new m(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Lr({ones:()=>l.jd(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Lr({ones:()=>l.jd(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=Ot(null!=s?l.dd(t,s):t,this.kernel.read()),null!=this.bias&&(a=jt(a,this.bias.read())),null!=i&&(n=l.dd(n,i));let o=l.Ub(a,Ot(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Gn(this.activation),useBias:this.useBias,kernelInitializer:Ht(this.kernelInitializer),recurrentInitializer:Ht(this.recurrentInitializer),biasInitializer:Ht(this.biasInitializer),kernelRegularizer:tr(this.kernelRegularizer),recurrentRegularizer:tr(this.recurrentRegularizer),biasRegularizer:tr(this.biasRegularizer),activityRegularizer:tr(this.activityRegularizer),kernelConstraint:V(this.kernelConstraint),recurrentConstraint:V(this.recurrentConstraint),biasConstraint:V(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Rr.className="SimpleRNNCell",l.zd.registerClass(Rr);class $r extends Ar{constructor(t){t.cell=new Rr(t),super(t)}call(t,e){return Object(l.Xd)(()=>{null!=this.cell.dropoutMask&&(l.vc(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(l.vc(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})})}static fromConfig(t,e){return new t(e)}}$r.className="SimpleRNN",l.zd.registerClass($r);class Fr extends Er{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new m("GRUCell does not support reset_after parameter set to true.");this.units=t.units,$(this.units,"units"),this.activation=qn(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=qn(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Gt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=nr(t.kernelRegularizer),this.recurrentRegularizer=nr(t.recurrentRegularizer),this.biasRegularizer=nr(t.biasRegularizer),this.kernelConstraint=U(t.kernelConstraint),this.recurrentConstraint=U(t.recurrentConstraint),this.biasConstraint=U(t.biasConstraint),this.dropout=ot([1,ut([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ot([1,ut([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=ee(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(l.Xd)(()=>{if(2!==(t=t).length)throw new m("GRUCell expects 2 input Tensors (inputs, h, c), got "+t.length+".");const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Lr({ones:()=>l.jd(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Lr({ones:()=>l.jd(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(t=l.dd(t,a[0]));let c=Ot(t,this.kernel.read());this.useBias&&(c=jt(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=l.dd(r,s[0]));const d=this.recurrentKernel.read(),[h,p]=l.Kd(d,[2*this.units,this.units],d.rank-1),f=Ot(r,h),[b,g,y]=l.Kd(c,3,c.rank-1),[O,x]=l.Kd(f,2,f.rank-1);i=this.recurrentActivation.apply(l.Ub(b,O)),o=this.recurrentActivation.apply(l.Ub(g,x));const w=Ot(l.dd(o,r),p);u=this.activation.apply(l.Ub(y,w));const v=l.Ub(l.dd(i,r),l.dd(l.Ub(1,l.ed(i)),u));return[v,v]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Gn(this.activation),recurrentActivation:Gn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ht(this.kernelInitializer),recurrentInitializer:Ht(this.recurrentInitializer),biasInitializer:Ht(this.biasInitializer),kernelRegularizer:tr(this.kernelRegularizer),recurrentRegularizer:tr(this.recurrentRegularizer),biasRegularizer:tr(this.biasRegularizer),activityRegularizer:tr(this.activityRegularizer),kernelConstraint:V(this.kernelConstraint),recurrentConstraint:V(this.recurrentConstraint),biasConstraint:V(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Fr.className="GRUCell",l.zd.registerClass(Fr);class Dr extends Ar{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Fr(t),super(t)}call(t,e){return Object(l.Xd)(()=>{null!=this.cell.dropoutMask&&(l.vc(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(l.vc(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Dr.className="GRU",l.zd.registerClass(Dr);class _r extends Er{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,$(this.units,"units"),this.activation=qn(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=qn(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Gt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=nr(t.kernelRegularizer),this.recurrentRegularizer=nr(t.recurrentRegularizer),this.biasRegularizer=nr(t.biasRegularizer),this.kernelConstraint=U(t.kernelConstraint),this.recurrentConstraint=U(t.recurrentConstraint),this.biasConstraint=U(t.biasConstraint),this.dropout=ot([1,ut([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ot([1,ut([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=ee(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends Ct{apply(e,r){const a=t.apply([n]),s=(new At).apply([n]),i=t.apply([2*n]);return bt(bt(a,s),i)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Object(l.Xd)(()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new m("LSTMCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");let r=t[1];const a=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Lr({ones:()=>l.jd(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Lr({ones:()=>l.jd(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,c,d;0<this.dropout&&this.dropout<1&&(t=l.dd(t,s[0]));let h=Ot(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=l.dd(r,i[0])),h=l.Ub(h,Ot(r,this.recurrentKernel.read())),this.useBias&&(h=jt(h,this.bias.read()));const[p,f,b,g]=l.Kd(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=l.Ub(l.dd(u,a),l.dd(o,this.activation.apply(b))),d=this.recurrentActivation.apply(g);const y=l.dd(d,this.activation.apply(c));return[y,y,c]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Gn(this.activation),recurrentActivation:Gn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ht(this.kernelInitializer),recurrentInitializer:Ht(this.recurrentInitializer),biasInitializer:Ht(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:tr(this.kernelRegularizer),recurrentRegularizer:tr(this.recurrentRegularizer),biasRegularizer:tr(this.biasRegularizer),activityRegularizer:tr(this.activityRegularizer),kernelConstraint:V(this.kernelConstraint),recurrentConstraint:V(this.recurrentConstraint),biasConstraint:V(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}_r.className="LSTMCell",l.zd.registerClass(_r);class Mr extends Ar{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new _r(t),super(t)}call(t,e){return Object(l.Xd)(()=>{null!=this.cell.dropoutMask&&(l.vc(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(l.vc(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Mr.className="LSTM",l.zd.registerClass(Mr);class zr extends Er{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Object(l.Xd)(()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[t[0]].concat(n):[s[0]].concat(n),s=o.call(s,e),a.push(s.slice(1))}n=[];for(const t of a.slice().reverse())n.push(...t);return[s[0]].concat(n)})}build(t){let e;Zt(t)&&(t=t[0]),t=t,this.cells.forEach((n,r)=>{tt("RNNCell_"+r,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map(t=>({className:t.getClassName(),config:t.getConfig()}))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const a of e.cells)r.push(ke(a,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return ae(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,a=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],a[t]])}se(e)}}function Lr(t){const{ones:e,rate:n,training:r=!1,count:a=1}=t,s=()=>It(e(),n),i=()=>kt(s,e,r);if(!a||a<=1)return l.Nc(i().clone());return Array(a).fill(void 0).map(i).map(t=>l.Nc(t.clone()))}zr.className="StackedRNNCells",l.zd.registerClass(zr);var Br=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(t);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(t,r[a])&&(n[r[a]]=t[r[a]])}return n};class Pr extends Ar{constructor(t){if(t.unroll)throw new b("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new b("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new ie({ndim:5})]}call(t,e){return l.Xd(()=>{if(null!=this.cell.dropoutMask&&(l.vc(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(l.vc(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new m("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return l.Xd(()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=l.je(a);return Array.isArray(e)?Array(e.length).fill(s):[s]})}resetStates(t,e=!1){l.Xd(()=>{if(!this.stateful)throw new p("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new m("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>l.je(a)):this.states_=[l.je(a)];else if(null==t)l.vc(this.states_),null!=this.keptStates&&(l.vc(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>l.je(a)):this.states_[0]=l.je(a);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new m(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);e?this.keptStates.push(this.states_.slice()):l.vc(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=a;if(!l.ee.arraysEqual(n.shape,r))throw new m(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map(t=>l.Nc(t.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===e,u=t[o?3:2],c=t[o?4:3],l=lr(u,r[0],a,s[0],i[0]),d=lr(c,r[1],a,s[1],i[1]);return[...t.slice(0,2),...o?[n,l,d]:[l,d,n]]}}Pr.className="ConvRNN2D";class Vr extends _r{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,$(this.filters,"filters"),this.kernelSize=cr(n,2,"kernelSize"),this.kernelSize.forEach(t=>$(t,"kernelSize")),this.strides=cr(r||1,2,"strides"),this.strides.forEach(t=>$(t,"strides")),this.padding=a||"valid",J(this.padding),this.dataFormat=s||"channelsLast",Y(this.dataFormat),this.dilationRate=cr(i||1,2,"dilationRate"),this.dilationRate.forEach(t=>$(t,"dilationRate"))}build(t){var e;t=ee(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new m("The channel dimension of the input should be defined. Found "+t[n]);const r=t[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends Ct{apply(t,e){return mt([n.apply([r]),l.id([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return l.Xd(()=>{if(3!==t.length)throw new m("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");const n=e.training||!1,r=t[0],a=t[1],s=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Lr({ones:()=>l.jd(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(t,e,n)=>e&&e[n]?l.dd(e[n],t):t;let u=o(r,i,0),c=o(r,i,1),d=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Lr({ones:()=>l.jd(a),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let f=o(a,p,0),b=o(a,p,1),g=o(a,p,2),y=o(a,p,3);const[O,x,w,v]=l.Kd(this.kernel.read(),4,3),[j,I,k,N]=this.useBias?l.Kd(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,O,j,this.padding),c=this.inputConv(c,x,I,this.padding),d=this.inputConv(d,w,k,this.padding),h=this.inputConv(h,v,N,this.padding);const[S,C,T,A]=l.Kd(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,S),b=this.recurrentConv(b,C),g=this.recurrentConv(g,T),y=this.recurrentConv(y,A);const E=this.recurrentActivation.apply(l.Ub(u,f)),R=this.recurrentActivation.apply(l.Ub(c,b)),$=l.Ub(l.dd(R,s),l.dd(E,this.activation.apply(l.Ub(d,g)))),F=l.dd(this.recurrentActivation.apply(l.Ub(h,y)),this.activation.apply($));return[F,F,$]})}getConfig(){const t=super.getConfig(),{units:e}=t,n=Br(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const a=l.qc(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?jt(a,n,this.dataFormat):a}recurrentConv(t,e){return l.qc(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Vr.className="ConvLSTM2DCell",l.zd.registerClass(Vr);class Wr extends Pr{constructor(t){const e=new Vr(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Wr.className="ConvLSTM2D",l.zd.registerClass(Wr);class Ur extends de{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n}call(t,e){return Object(l.Xd)(()=>{this.invokeCallHook(t,e);const n=te(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return kt(()=>It(n,this.rate,r,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Ur.className="Dropout",l.zd.registerClass(Ur);class Kr extends Ur{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Kr.className="SpatialDropout1D",l.zd.registerClass(Kr);class Hr extends de{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,$(this.units,"units"),this.activation=qn(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=U(t.kernelConstraint),this.biasConstraint=U(t.biasConstraint),this.kernelRegularizer=nr(t.kernelRegularizer),this.biasRegularizer=nr(t.biasRegularizer),this.activityRegularizer=nr(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=ee(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=ee(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Object(l.Xd)(()=>{this.invokeCallHook(t,e);const n=te(t),r=F(this.activation.getClassName());let a;return null!=r?a=Ot(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Ot(n,this.kernel.read()),null!=this.bias&&(a=jt(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const t={units:this.units,activation:Gn(this.activation),useBias:this.useBias,kernelInitializer:Ht(this.kernelInitializer),biasInitializer:Ht(this.biasInitializer),kernelRegularizer:tr(this.kernelRegularizer),biasRegularizer:tr(this.biasRegularizer),activityRegularizer:tr(this.activityRegularizer),kernelConstraint:V(this.kernelConstraint),biasConstraint:V(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Hr.className="Dense",l.zd.registerClass(Hr);class Gr extends de{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=ee(t);for(const e of t.slice(1))if(null==e)throw new m(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],st(t,1)]}call(t,e){return Object(l.Xd)(()=>{this.invokeCallHook(t,e);let n=te(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new m(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],st(t.shape,1)];return t.reshape(e)}(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Gr.className="Flatten",l.zd.registerClass(Gr);class Xr extends de{constructor(t){super(t),this.supportsMasking=!0,this.activation=qn(t.activation)}call(t,e){return Object(l.Xd)(()=>{this.invokeCallHook(t,e);const n=te(t);return this.activation.apply(n)})}getConfig(){const t={activation:Gn(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Xr.className="Activation",l.zd.registerClass(Xr);class qr extends de{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Object(l.Xd)(()=>{return t=te(t),e=t,n=this.n,Object(l.Xd)(()=>{if(2!==e.shape.length)throw new m(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return gt(dt(e,1),[1,n,1])});var e,n})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}qr.className="RepeatVector",l.zd.registerClass(qr);class Yr extends de{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let a=1,s=null;for(let o=0;o<r.length;++o){const t=r[o];if(this.isUnknown(t)){if(null!==s)throw new m("Can only specifiy one unknown dimension.");s=o}else a*=t}const i=st(t);if(null!==s){if(0===a||i%a!==0)throw new m(n);r[s]=i/a}else if(i!==a)throw new m(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Object(l.Xd)(()=>{this.invokeCallHook(t,e);const n=te(t),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Yr.className="Reshape",l.zd.registerClass(Yr);class Jr extends de{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+t.dims+" instead.");const e=ct(1,t.dims.length+1);if(!l.ee.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ie({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=ee(t)).slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return Object(l.ae)(te(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Jr.className="Permute",l.zd.registerClass(Jr);class Zr extends de{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=te(t);return Object(l.Wb)(Object(l.gd)(n,this.maskValue),-1)}call(t,e){return Object(l.Xd)(()=>{this.invokeCallHook(t,e);const n=te(t),r=Object(l.Wb)(Object(l.gd)(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}Zr.className="Masking",l.zd.registerClass(Zr);class Qr extends de{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(v(t.inputLength))}this.inputDim=t.inputDim,$(this.inputDim,"inputDim"),this.outputDim=t.outputDim,$(this.outputDim,"outputDim"),this.embeddingsInitializer=Gt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=nr(t.embeddingsRegularizer),this.activityRegularizer=nr(t.activityRegularizer),this.embeddingsConstraint=U(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Object(l.Xd)(()=>this.maskZero?(t=te(t),Object(l.gd)(t,Object(l.ke)(t))):null)}computeOutputShape(t){if(t=ee(t),null==this.inputLength)return[...t,this.outputDim];const e=v(this.inputLength);if(e.length!==t.length-1)throw new m(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);{let n=0;for(let r=0;r<e.length;++r){const a=e[r],s=t[r+1];if(null!=a&&null!=s&&a!==s)throw new m(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);null==a&&(e[n]=s),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Object(l.Xd)(()=>{this.invokeCallHook(t,e);let n=te(t);"int32"!==n.dtype&&(n=lt(n,"int32"));return xt(this.embeddings.read(),n.as1D()).reshape(ee(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ht(this.embeddingsInitializer),embeddingsRegularizer:tr(this.embeddingsRegularizer),activityRegularizer:tr(this.activityRegularizer),embeddingsConstraint:V(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Qr.className="Embedding",l.zd.registerClass(Qr);class ta extends de{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new b}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const a=t[t.length-e.length+r],s=e[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new m("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(a)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[ee(t)]),(t=t).length<2)throw new m(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const a of t)null!=a&&null!==a[0]&&e.push(a[0]);if(e=T(e),e.length>1)throw new m(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const e=null==t[a]?null:t[a].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===T(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Object(l.Xd)(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=ut(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=dt(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],a=t.slice(1).concat([r]);let i=s.reshape([r].concat(st(t.slice(1))));i=l.ae(i,[1,0]),i=i.reshape(a),e.push(i),n=!0}else if(t>1){const r=ct(1,t).concat([0]);e.push(l.ae(s,r)),n=!0}else e.push(s)}let r=this.mergeFunction(e);const a=r.rank;if(n)if(null==a){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=l.ae(r.reshape([-1,e]),[1,0]).reshape(n)}else if(a>1){const t=[a-1].concat(ct(0,a-1));r=l.ae(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const n=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const r of t)null!=r&&null!==r[0]&&n.push(r[0]);return n=T(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return l.Xd(()=>{if(null==e)return null;if(!Array.isArray(e))throw new m("`mask` should be an Array");if(!Array.isArray(t))throw new m("`inputs` should be an Array");if(e.length!==t.length)throw new m(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:l.Dc(t,0)))[0];for(let t=1;t<e.length-1;++t)n=l.Tc(n,e[t]);return n})}}class ea extends ta{constructor(t){super(t)}mergeFunction(t){return Object(l.Xd)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=l.Ub(e,t[n]);return e})}}ea.className="Add",l.zd.registerClass(ea);class na extends ta{constructor(t){super(t)}mergeFunction(t){return Object(l.Xd)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=l.dd(e,t[n]);return e})}}na.className="Multiply",l.zd.registerClass(na);class ra extends ta{constructor(t){super(t)}mergeFunction(t){return Object(l.Xd)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=l.Ub(e,t[n]);return l.dd(1/t.length,e)})}}ra.className="Average",l.zd.registerClass(ra);class aa extends ta{constructor(t){super(t)}mergeFunction(t){return Object(l.Xd)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=l.Xc(e,t[n]);return e})}}aa.className="Maximum",l.zd.registerClass(aa);class sa extends ta{constructor(t){super(t)}mergeFunction(t){return Object(l.Xd)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=l.bd(e,t[n]);return e})}}sa.className="Minimum",l.zd.registerClass(sa);class ia extends ta{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new m("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(null!=r){e=!1;break}if(e)return;const n=[];for(let r=0;r<t.length;++r){const e=t[r].slice();e.splice(this.axis,1);let a=!1;for(const t of n)if(l.ee.arraysEqual(t,e)){a=!0;break}a||n.push(e)}if(n.length>1)throw new m("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Object(l.Xd)(()=>mt(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new m("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of e.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new m("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new m("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new m(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return l.Xd(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let s=0;s<t.length;++s)null==e[s]?r.push(l.jd(t[s]).asType("bool")):e[s].rank<t[s].rank?r.push(l.Dc(e[s],-1)):r.push(e[s]);const a=l.kc(r,this.axis);return l.Vb(a,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function oa(t,e){for(;t<0;)t+=e;return t}ia.className="Concatenate",l.zd.registerClass(ia);class ua extends ta{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){l.ee.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new b("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new m(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new m(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>oa(e,t[n].shape.length)):[oa(this.axes,n.shape.length),oa(this.axes,r.shape.length)],this.normalize&&(n=Ne(n,e[0]),r=Ne(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new b("batchDot is not implemented for tensors of 4D or higher rank yet");if(l.ee.assert(t.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+t.shape.length),l.ee.assert(t.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+e.shape.length),"number"===typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new b("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,a=e.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return l.Xd(()=>{let n,i;if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=s[0]===s[1]?t.mul(e).sum(s[0]):t.transpose([1,0]).mul(e).sum(s[1]);else{const n=s[0]!==t.shape.length-1,r=s[1]===e.shape.length-1;i=t.matMul(e,n,r)}if(n>0){let t;t=r>a?r+a-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);i=i.squeeze(e)}return 1===i.shape.length&&(i=i.expandDims(1)),i})}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[oa(this.axes,t.length),oa(this.axes,e.length)],n}computeOutputShape(t){l.ee.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new b("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=e.concat(n);return 1===a.length&&a.push(1),a}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}ua.className="Dot",l.zd.registerClass(ua);class ca extends de{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Object(l.Xd)(()=>{this.invokeCallHook(t,e);const n=te(t);return kt(()=>yt(n.shape,0,this.stddev).add(n),()=>n,e.training||!1)})}}ca.className="GaussianNoise",l.zd.registerClass(ca);class la extends de{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(l.Xd)(()=>{this.invokeCallHook(t,e);const n=te(t);if(this.rate>0&&this.rate<1){return kt(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(yt(n.shape,1,t))},()=>n,e.training||!1)}return n})}}la.className="GaussianDropout",l.zd.registerClass(la);class da extends de{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||te(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(l.Xd)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return kt(()=>{const e=te(t),r=-1.7580993408473766;let a=Object(l.Kc)(Object(l.od)(n),this.rate);a=lt(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return e.mul(a).add(a.add(-1).mul(r)).mul(s).add(i)},()=>te(t),e.training||!1)}return t})}}function ha(t,e,n,r,a,s=.001){let i;if(2===t.rank)i=l.cc(t,e,n,r,a,s);else if(3===t.rank)i=l.dc(t,e,n,r,a,s);else{if(4!==t.rank)throw new b(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=l.ec(t,e,n,r,a,s)}return i}function pa(t,e,n,r,a=.001){return l.ee.arraysEqual(r.slice().sort(),ct(0,t.rank-1))?function(t,e,n,r,a=.001){return Object(l.Xd)(()=>{const s=l.cd(t,r),i=s.mean,o=s.variance;return[ha(t,i,o,n,e,a),i,o]})}(t,e,n,r,a):function(t,e,n,r,a=.001){return Object(l.Xd)(()=>{const s=l.cd(t,r),i=s.mean,o=s.variance,u=[];for(const e of ct(0,t.rank))-1!==r.indexOf(e)?u.push(1):u.push(t.shape[e]);const c=i.reshape(u),d=o.reshape(u),h=null==e?null:e.reshape(u),p=null==n?null:n.reshape(u);return[ha(t,c,d,p,h,a),i,o]})}(t,e,n,r,a)}da.className="AlphaDropout",l.zd.registerClass(da);class fa extends de{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Gt(t.betaInitializer||"zeros"),this.gammaInitializer=Gt(t.gammaInitializer||"ones"),this.movingMeanInitializer=Gt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Gt(t.movingVarianceInitializer||"ones"),this.betaConstraint=U(t.betaConstraint),this.gammaConstraint=U(t.gammaConstraint),this.betaRegularizer=nr(t.betaRegularizer),this.gammaRegularizer=nr(t.gammaRegularizer)}build(t){t=ee(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new m(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(t)+".");this.inputSpec=[new ie({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Object(l.Xd)(()=>{const n=null!=e.training&&e.training,r=te(t),a=r.shape,s=a.length,i=ct(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=y(1,s);u[o]=a[o];const c=i.slice();c.sort();const d=!l.ee.arraysEqual(c,ct(0,s).slice(0,s-1));if(!n)return(()=>{if(d){const t=this.movingMean.read().reshape(u),e=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,a=this.scale?this.gamma.read().reshape(u):null;return ha(r,t,e,n,a,this.epsilon)}return ha(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=pa(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(t,e,n)=>{l.Xd(()=>{const r=1-n,a=t.read(),s=a.sub(e).mul(r);t.write(a.sub(s))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ht(this.betaInitializer),gammaInitializer:Ht(this.gammaInitializer),movingMeanInitializer:Ht(this.movingMeanInitializer),movingVarianceInitializer:Ht(this.movingVarianceInitializer),betaRegularizer:tr(this.betaRegularizer),gammaRegularizer:tr(this.gammaRegularizer),betaConstraint:V(this.betaConstraint),gammaConstraint:V(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}fa.className="BatchNormalization",l.zd.registerClass(fa);class ma extends de{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Gt(t.betaInitializer||"zeros"),this.gammaInitializer=Gt(t.gammaInitializer||"ones"),this.betaRegularizer=nr(t.betaRegularizer),this.gammaRegularizer=nr(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=ee(t)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error("Invalid axis: "+r);if(this.axis.length!==T(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(e=>t[e]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(t,e){const n=te(t),r=n.shape,a=r.length;return Object(l.Xd)(()=>{let{mean:t,variance:e}=Object(l.cd)(n,this.axis,!0);const s=y(1,a);for(const n of this.axis)s[n]=r[n];const i=t=>null!=t&&t.shape.length!==a&&this.axis!==[a-1]?t.reshape(s):t;let o=i(this.gamma.read()),u=i(this.beta.read());const c=[],d=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(c.push(r[n]),d.push(1)):(c.push(1),d.push(r[n]));return t=t.tile(c),e=e.tile(c),o=o.tile(d),u=u.tile(d),ha(n,t,e,u,o,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ht(this.betaInitializer),gammaInitializer:Ht(this.gammaInitializer),betaRegularizer:tr(this.betaRegularizer),gammaRegularizer:tr(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}ma.className="LayerNormalization",l.zd.registerClass(ma);class ba extends de{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new m(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"===typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new m(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new m(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new ie({ndim:4})]}computeOutputShape(t){let e,n;return t=ee(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Object(l.Xd)(()=>{return e=te(t),n=this.padding,r=this.dataFormat,Object(l.Xd)(()=>{if(4!==e.rank)throw new m("temporalPadding expects input tensor to be 4-D, but received a "+e.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new m("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new m(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],l.kd(e,t)});var e,n,r})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function ga(t,e,n,r,a,s){return Object(l.Xd)(()=>{let i;Y(a),Z(s),J(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),t=hr(t,a);const o="same"===r?"same":"valid";return i="max"===s?l.Vc(t,e,n,o):l.Yb(t,e,n,o),"channelsFirst"===a&&(i=l.ae(i,[0,3,1,2])),i})}function ya(t,e,n,r,a,s){return Object(l.Xd)(()=>{let i;Y(a),Z(s),J(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),t=pr(t,a);const o="same"===r?"same":"valid";return i="max"===s?l.Wc(t,e,n,o):l.Zb(t,e,n,o),"channelsFirst"===a&&(i=l.ae(i,[0,4,1,2,3])),i})}ba.className="ZeroPadding2D",l.zd.registerClass(ba);class Oa extends de{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"===typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!==typeof t.poolSize[0])throw new m("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if($(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"===typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!==typeof t.strides[0])throw new m("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}$(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,J(this.padding),this.inputSpec=[new ie({ndim:3})]}computeOutputShape(t){const e=lr((t=ee(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Object(l.Xd)(()=>{this.invokeCallHook(t,e),t=dt(te(t),2);const n=this.poolingFunction(te(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return l.Md(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class xa extends Oa{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Y(a),J(r),ga(t,e,n,r,a,"max")}}xa.className="MaxPooling1D",l.zd.registerClass(xa);class wa extends Oa{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Y(a),J(r),ga(t,e,n,r,a,"avg")}}wa.className="AveragePooling1D",l.zd.registerClass(wa);class va extends de{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new m("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides];$(this.poolSize,"poolSize"),$(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Y(this.dataFormat),J(this.padding),this.inputSpec=[new ie({ndim:4})]}computeOutputShape(t){t=ee(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=lr(e,this.poolSize[0],this.padding,this.strides[0]),n=lr(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Object(l.Xd)(()=>(this.invokeCallHook(t,e),this.poolingFunction(te(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ja extends va{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Y(a),J(r),ga(t,e,n,r,a,"max")}}ja.className="MaxPooling2D",l.zd.registerClass(ja);class Ia extends va{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Y(a),J(r),ga(t,e,n,r,a,"avg")}}Ia.className="AveragePooling2D",l.zd.registerClass(Ia);class ka extends de{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new m("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];$(this.poolSize,"poolSize"),$(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Y(this.dataFormat),J(this.padding),this.inputSpec=[new ie({ndim:5})]}computeOutputShape(t){t=ee(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=lr(e,this.poolSize[0],this.padding,this.strides[0]),n=lr(n,this.poolSize[1],this.padding,this.strides[1]),r=lr(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Object(l.Xd)(()=>(this.invokeCallHook(t,e),this.poolingFunction(te(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Na extends ka{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Y(a),J(r),ya(t,e,n,r,a,"max")}}Na.className="MaxPooling3D",l.zd.registerClass(Na);class Sa extends ka{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Y(a),J(r),ya(t,e,n,r,a,"avg")}}Sa.className="AveragePooling3D",l.zd.registerClass(Sa);class Ca extends de{constructor(t){super(t),this.inputSpec=[new ie({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new b}}class Ta extends Ca{constructor(t){super(t||{})}call(t,e){return Object(l.Xd)(()=>{const e=te(t);return l.Yc(e,1)})}}Ta.className="GlobalAveragePooling1D",l.zd.registerClass(Ta);class Aa extends Ca{constructor(t){super(t||{})}call(t,e){return Object(l.Xd)(()=>{const e=te(t);return l.Uc(e,1)})}}Aa.className="GlobalMaxPooling1D",l.zd.registerClass(Aa);class Ea extends de{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Y(this.dataFormat),this.inputSpec=[new ie({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new b}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Ra extends Ea{call(t,e){return Object(l.Xd)(()=>{const e=te(t);return"channelsLast"===this.dataFormat?l.Yc(e,[1,2]):l.Yc(e,[2,3])})}}Ra.className="GlobalAveragePooling2D",l.zd.registerClass(Ra);class $a extends Ea{call(t,e){return Object(l.Xd)(()=>{const e=te(t);return"channelsLast"===this.dataFormat?l.Uc(e,[1,2]):l.Uc(e,[2,3])})}}$a.className="GlobalMaxPooling2D",l.zd.registerClass($a);class Fa extends de{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=ke(e.layer,n);delete e.layer;const a={layer:r};return Object.assign(a,e),new t(a)}}class Da extends Fa{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=ee(t)).length<3)throw new m("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(t));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=ee(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Object(l.Xd)(()=>Tr((t,n)=>[te(this.layer.call(t,e)),[]],t=te(t),[],!1,null,null,!1,!0)[1])}}Da.className="TimeDistributed",l.zd.registerClass(Da);class _a extends Fa{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=ke(n),e.goBackwards=!0!==e.goBackwards;const r={};var a;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=ke(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,a=this.mergeMode,E(X,"BidirectionalMergeMode",a),t.weights)throw new b("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,a=this.forwardLayer.computeOutputShape(t);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),e=a[0]):e=a[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):w(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const a=Cr(t,n,r,this.numConstants);if(t=a.inputs,n=a.initialState,r=a.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const s=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new m("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,s.push(...n);const r=n.map(t=>new ie({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new b("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof oe;for(const u of s)if(u instanceof oe!==o)throw new m("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=a,o}return super.apply(t,e)}call(t,e){return Object(l.Xd)(()=>{const n=e.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(t,e),a=this.backwardLayer.call(t,e);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:s})),a=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=l.vd(a,1)),"concat"===this.mergeMode?i=mt([r,a]):"sum"===this.mergeMode?i=l.Ub(r,a):"ave"===this.mergeMode?i=l.dd(.5,l.Ub(r,a)):"mul"===this.mergeMode?i=l.dd(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){tt(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),tt(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=ke(e.layer);if(delete e.layer,null!=e.numConstants)throw new b("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}_a.className="Bidirectional",l.zd.registerClass(_a);var Ma=n("+Luo"),za=n("Umw7");class La{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return Object(za.e)(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Object(za.e)(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(Ma.f)(this.node.rawAttrs,t,e);if(null!=n.s)return Object(Ma.i)(this.node.rawAttrs,t,e);if(null!=n.b)return Object(Ma.c)(this.node.rawAttrs,t,e);if(null!=n.shape)return Object(Ma.k)(this.node.rawAttrs,t,e);if(null!=n.type)return Object(Ma.e)(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(Ma.g)(this.node.rawAttrs,t,e);if(null!=n.list.s)return Object(Ma.h)(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Object(Ma.j)(this.node.rawAttrs,t,e);if(null!=n.list.b)return Object(Ma.b)(this.node.rawAttrs,t,e);if(null!=n.list.type)return Object(Ma.d)(this.node.rawAttrs,t,e)}return e}}var Ba=n("0wNd"),Pa=n("kRdc"),Va=n("SFB9"),Wa=n("RhH0"),Ua=n("parS"),Ka=n("x3y4"),Ha=n("ARu+"),Ga=n("UI8N"),Xa=n("oAkI"),qa=n("8OX7"),Ya=n("CfTU"),Ja=n("yfHJ"),Za=n("QYQ3");var Qa=n("iuCH"),ts=n("o3Rt"),es=n("RhVc"),ns=n("Ig+c"),rs=n("3FnS"),as=n("fjZN"),ss=n("YAKK"),is=n("0ahe"),os=n("WWBm"),us=n("B3db"),cs=n("7/dO"),ls=n("waK1"),ds=n("njhW"),hs=n("jgXy"),ps=n("TyAZ"),fs=n("G6IW"),ms=n("02mo"),bs=n("E1lT"),gs=n("RrGL"),ys=n("JLAb"),Os=n("O7f5"),xs=n("tQDl"),ws=n("17CO"),vs=n("kXpR"),js=n("CKnt"),Is=n("s57M"),ks=n("/7N0"),Ns=n("aTLu"),Ss=n("Hfat"),Cs=n("XcSs"),Ts=n("n/2y"),As=n("Fjpt"),Es=n("k7Jv"),Rs=n("iIjY"),$s=n("0wrZ"),Fs=n("wI/y"),Ds=n("Xyqe"),_s=n("867m"),Ms=n("bzdD"),zs=n("Ug8H");function Ls(t,e,n=""){l.ee.assert(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}(t,e),()=>n+` Shapes ${t} and ${e} must match`)}class Bs{constructor(t,e,n,r,a,s,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Object(l.wd)(0),Object(l.Nc)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),Ls(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Object(l.Nc)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Object(l.Sd)([],[0].concat(this.elementShape));const n=this.readMany(t);return Ls(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(l.Nd)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Object(l.Sd)([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const n=this.readMany(e);return Ls(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(l.kc)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Object(l.ce)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:e.size/n,s=[];Object(l.Xd)(()=>{e=Object(l.ud)(e,[1,n,a]);for(let n=0;n<t.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,t[n],a];s[n]=Object(l.ud)(Object(l.Cd)(e,i,o),this.elementShape)}return s});const i=[];for(let o=0;o<t.length;o++)i[o]=o;this.writeMany(i,s)}}class Ps{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach(t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);Ls(e,t.shape,"TensorList shape mismatch: "),Object(l.Nc)(t)}),this.idTensor=Object(l.wd)(0),this.maxNumElements=r,Object(l.Nc)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Ps([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return Ls(t,this.elementShape,"TensorList shape mismatch: "),Object(l.Xd)(()=>{const e=this.tensors.map(e=>Object(l.ud)(e,t));return Object(l.Nd)(e,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return Ls(n.shape,t,"TensorList shape mismatch: "),Object(l.ud)(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Ls(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(l.Nc)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+t);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);return Ls(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Ls(this.elementShape,e.shape,"TensorList shape mismatch: "),Object(l.Nc)(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);return Ls(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?Object(l.Sd)([],[0].concat(this.elementShape)):Object(l.Xd)(()=>{const e=t.map(t=>Object(l.ud)(this.tensors[t],n));return Object(l.Nd)(e,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);return Ls(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?Object(l.Sd)([],[0].concat(this.elementShape)):Object(l.Xd)(()=>{const t=this.tensors.map(t=>Object(l.ud)(t,e));return Object(l.kc)(t,0)})}}const Vs=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=Object(za.d)("thenBranch",t,e,n),a=Object(za.d)("elseBranch",t,e,n),s=Object(za.d)("cond",t,e,n),i=Object(za.d)("args",t,e,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(za.d)("body",t,e,n),a=Object(za.d)("cond",t,e,n),s=Object(za.d)("args",t,e,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(t=>t.id);let u=await i[0].data();i.forEach(t=>{t.kept||-1!==o.indexOf(t.id)||t.dispose()});let c=s;for(;u[0];){const t=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const e=c.map(t=>t.id);t.forEach(t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()});const s=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach(t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()})}return c}case"LoopCond":{const r=Object(za.d)("pred",t,e,n);return[Object(za.a)(r)]}case"Switch":{const r=Object(za.d)("pred",t,e,n);let a=Object(za.d)("data",t,e,n);return a.kept||(a=Object(za.a)(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=t.inputNames.find(t=>void 0!==Object(za.e)(t,e,n));if(r){const t=Object(za.e)(r,e,n);return[Object(za.a)(t)]}return}case"Enter":{const r=Object(za.d)("frameName",t,e,n),a=Object(za.d)("tensor",t,e,n);return n.enterFrame(r),[Object(za.a)(a)]}case"Exit":{const r=Object(za.d)("tensor",t,e,n);return n.exitFrame(),[Object(za.a)(r)]}case"NextIteration":{const r=Object(za.d)("tensor",t,e,n);return n.nextIteration(),[Object(za.a)(r)]}case"TensorArrayV3":{const r=Object(za.d)("size",t,e,n),a=Object(za.d)("dtype",t,e,n),s=Object(za.d)("elementShape",t,e,n),i=Object(za.d)("dynamicSize",t,e,n),o=Object(za.d)("clearAfterRead",t,e,n),u=Object(za.d)("identicalElementShapes",t,e,n),c=Object(za.d)("name",t,e,n),d=new Bs(c,a,r,s,u,i,o);return n.addTensorArray(d),[d.idTensor,Object(l.wd)(1)]}case"TensorArrayWriteV3":{const r=Object(za.d)("tensorArrayId",t,e,n),a=Object(za.d)("index",t,e,n),s=Object(za.d)("tensor",t,e,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=Object(za.d)("tensorArrayId",t,e,n),a=Object(za.d)("index",t,e,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Object(za.d)("tensorArrayId",t,e,n),a=Object(za.d)("indices",t,e,n),s=Object(za.d)("dtype",t,e,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=Object(za.d)("tensorArrayId",t,e,n),a=Object(za.d)("indices",t,e,n),s=Object(za.d)("tensor",t,e,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=Object(za.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id),s=Object(za.d)("dtype",t,e,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=Object(za.d)("tensorArrayId",t,e,n),a=Object(za.d)("tensor",t,e,n),s=Object(za.d)("lengths",t,e,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=Object(za.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id);return[Object(l.wd)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(za.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(za.d)("tensorListId",t,e,n),a=Object(za.d)("index",t,e,n),s=Object(za.d)("tensor",t,e,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=Object(za.d)("tensorListId",t,e,n),a=Object(za.d)("index",t,e,n),s=Object(za.d)("elementShape",t,e,n),i=Object(za.d)("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(za.d)("indices",t,e,n),a=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const a=Math.max(...e);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Ps([],n,t.dtype,r),i=Object(l.ce)(t,0);return e.forEach((t,e)=>{s.setItem(t,i[e])}),s}(Object(za.d)("tensor",t,e,n),r,Object(za.d)("elementShape",t,e,n),Object(za.d)("numElements",t,e,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":{const r=function(t,e,n){return new Ps([],t,e,n)}(Object(za.d)("elementShape",t,e,n),Object(za.d)("elementDType",t,e,n),Object(za.d)("numElements",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListGather":{const r=Object(za.d)("tensorListId",t,e,n),a=Object(za.d)("indices",t,e,n),s=Object(za.d)("elementShape",t,e,n),i=Object(za.d)("elementDType",t,e,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=Object(za.d)("tensorListId",t,e,n),a=Object(za.d)("elementShape",t,e,n),s=Object(za.d)("elementDType",t,e,n),i=Object(za.d)("numElements",t,e,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+t.shape);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);Ls(t.shape.slice(1),e,"TensorList shape mismatch: ");const a=Object(l.ce)(t);return new Ps(a,e,r)}(Object(za.d)("tensor",t,e,n),Object(za.d)("elementShape",t,e,n),Object(za.d)("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Object(za.d)("tensorListId",t,e,n),a=n.getTensorList(r.id),s=Object(za.d)("dtype",t,e,n),i=Object(za.d)("elementShape",t,e,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=Object(za.d)("tensorListId",t,e,n),a=Object(za.d)("tensor",t,e,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=Object(za.d)("tensorListId",t,e,n),a=Object(za.d)("elementShape",t,e,n),s=Object(za.d)("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=Object(za.d)("tensor",t,e,n),a=Object(za.d)("elementShape",t,e,n),s=function(t,e,n){let r=0;const a=e.map(t=>(r+=t,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const s=0===r?0:t.size/r,i=Object(l.Xd)(()=>{const i=[];t=Object(l.ud)(t,[1,r,s]);for(let r=0;r<e.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,e[r],s];i[r]=Object(l.ud)(Object(l.Cd)(t,o,u),n)}return t.dispose(),i}),o=new Ps([],n,t.dtype,e.length);for(let u=0;u<i.length;u++)o.setItem(u,i[u]);return o}(r,Object(za.d)("lengths",t,e,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};var Ws=n("dnXz"),Us=n("3X4V"),Ks=n("EysY"),Hs=n("zR+/"),Gs=n("g4+C"),Xs=n("FZCF"),qs=n("l0gX"),Ys=n("n+ZZ"),Js=n("i8k8"),Zs=n("ulO0"),Qs=n("U/2n"),ti=n("wXC5");function ei(t,e,n){const[r,a]=Object(za.d)("fusedOps",t,e,n),s="biasadd"===r,i="prelu"===a,o="fusedbatchnorm"===r,u=Object(za.d)("numArgs",t,e,n);if(s){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const c=Object(za.d)("strides",t,e,n),l=Object(za.c)(t,e,n),d=Object(za.d)("dataFormat",t,e,n).toUpperCase(),h=Object(za.d)("dilations",t,e,n),[p,f]=Object(za.d)("args",t,e,n);return{stride:c,pad:l,dataFormat:d,dilations:h,biasArg:p,preluArg:f,activationFunc:a}}var ni=n("RrjA"),ri=n("WJRb"),ai=n("Pvz5"),si=n("4iwy"),ii=n("wion"),oi=n("DbV5"),ui=n("hinG"),ci=n("hNYx"),li=n("fmoR"),di=n("Wiw4"),hi=n("oJu+");var pi=n("3rNm"),fi=n("p4Cv"),mi=n("90yW");function bi(t,e,n){return{boxes:Object(za.d)("boxes",t,e,n),scores:Object(za.d)("scores",t,e,n),maxOutputSize:Object(za.d)("maxOutputSize",t,e,n),iouThreshold:Object(za.d)("iouThreshold",t,e,n),scoreThreshold:Object(za.d)("scoreThreshold",t,e,n),softNmsSigma:Object(za.d)("softNmsSigma",t,e,n)}}var gi=n("VhY8"),yi=n("hT5K");var Oi=n("lg8H"),xi=n("AV8V");class wi{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Object(l.wd)(0),this.tensorMap=new Map,Object(l.Nc)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),Object(l.Xd)(()=>{const t=Object(l.ce)(e),r=n.length,a=t.length;l.ee.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let e=0;e<r;e++){const r=n[e],a=t[e];Object(l.Nc)(a),this.tensorMap.set(r,a)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Object(l.Xd)(()=>{const t=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,e);t.push(s)}return Object(l.Nd)(t)})}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+t.dtype);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+e.dtype)}}var vi=n("ubnP"),ji=n("1N4k"),Ii=n("zvA9"),ki=n("uy0A"),Ni=n("4f3O"),Si=n("shz4"),Ci=n("4zPZ"),Ti=n("7wDt"),Ai=n("8YN0"),Ei=n("Z5Ez");var Ri=n("SHv8"),$i=n("yRKQ");var Fi=n("cdtJ"),Di=n("4QEz"),_i=n("X4fa"),Mi=n("gErV"),zi=n("vGLV");var Li=n("wCH+"),Bi=n("Ei6o"),Pi=n("rm0a"),Vi=n("4FMF"),Wi=n("34HJ"),Ui=n("RRa9"),Ki=n("6J+n"),Hi=n("20lx"),Gi=n("HmhO");var Xi=n("ZJ6U"),qi=n("kaMP"),Yi=n("0I63"),Ji=n("bTzI"),Zi=n("3hph"),Qi=n("0fRV"),to=n("NclT"),eo=n("1U0N"),no=n("OkRW"),ro=n("jXH2"),ao=n("RbuM"),so=n("i/oj"),io=n("ukBL");var oo=n("Grcp"),uo=n("THqV"),co=n("th0q"),lo=n("adw1");var ho=n("2ugP"),po=n("k9tH"),fo=n("DrVt"),mo=n("dYAU"),bo=n("OygE"),go=n("Nk7E"),yo=n("SNsm");function Oo(t,e,n,r){const a=((t,e,n)=>{switch(t.category){case"arithmetic":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[Pa.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"AddN":return[Va.a(Object(za.d)("tensors",t,e,n))];case"FloorMod":case"Mod":return[Wa.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"Mul":return[Ua.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"RealDiv":case"Div":return[Ka.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"DivNoNan":return[Ha.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"FloorDiv":return[Ga.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"Sub":return[Xa.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"Minimum":return[qa.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"Maximum":return[Ya.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"Pow":return[Ja.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"SquaredDifference":return[Za.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"basic_math":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[Qa.a(Object(za.d)("x",t,e,n))];case"Acos":return[ts.a(Object(za.d)("x",t,e,n))];case"Acosh":return[es.a(Object(za.d)("x",t,e,n))];case"Asin":return[ns.a(Object(za.d)("x",t,e,n))];case"Asinh":return[rs.a(Object(za.d)("x",t,e,n))];case"Atan":return[as.a(Object(za.d)("x",t,e,n))];case"Atan2":return[ss.a(Object(za.d)("x",t,e,n),Object(za.d)("y",t,e,n))];case"Atanh":return[is.a(Object(za.d)("x",t,e,n))];case"Ceil":return[os.a(Object(za.d)("x",t,e,n))];case"Complex":return[us.a(Object(za.d)("real",t,e,n),Object(za.d)("imag",t,e,n))];case"Cos":return[cs.a(Object(za.d)("x",t,e,n))];case"Cosh":return[ls.a(Object(za.d)("x",t,e,n))];case"Elu":return[ds.a(Object(za.d)("x",t,e,n))];case"Erf":return[hs.a(Object(za.d)("x",t,e,n))];case"Exp":return[ps.a(Object(za.d)("x",t,e,n))];case"Expm1":return[fs.a(Object(za.d)("x",t,e,n))];case"Floor":return[ms.a(Object(za.d)("x",t,e,n))];case"Log":return[bs.a(Object(za.d)("x",t,e,n))];case"Log1p":return[gs.a(Object(za.d)("x",t,e,n))];case"Imag":return[ys.a(Object(za.d)("x",t,e,n))];case"Neg":return[Os.a(Object(za.d)("x",t,e,n))];case"Reciprocal":return[xs.a(Object(za.d)("x",t,e,n))];case"Real":return[ws.a(Object(za.d)("x",t,e,n))];case"Relu":return[vs.a(Object(za.d)("x",t,e,n))];case"Round":return[js.a(Object(za.d)("x",t,e,n))];case"Selu":return[Is.a(Object(za.d)("x",t,e,n))];case"Sigmoid":return[ks.a(Object(za.d)("x",t,e,n))];case"Sin":return[Ns.a(Object(za.d)("x",t,e,n))];case"Sign":return[Ss.a(Object(za.d)("x",t,e,n))];case"Sinh":return[Cs.a(Object(za.d)("x",t,e,n))];case"Softplus":return[Ts.a(Object(za.d)("x",t,e,n))];case"Sqrt":return[As.a(Object(za.d)("x",t,e,n))];case"Square":return[Es.a(Object(za.d)("x",t,e,n))];case"Tanh":return[Rs.a(Object(za.d)("x",t,e,n))];case"Tan":return[$s.a(Object(za.d)("x",t,e,n))];case"Relu6":case"ClipByValue":return[Fs.a(Object(za.d)("x",t,e,n),Object(za.d)("clipValueMin",t,e,n),Object(za.d)("clipValueMax",t,e,n))];case"Rsqrt":return[Ds.a(Object(za.e)(t.inputNames[0],e,n))];case"Prod":return[_s.a(Object(za.d)("x",t,e,n),Object(za.d)("axes",t,e,n))];case"LeakyRelu":return[Ms.a(Object(za.d)("x",t,e,n),Object(za.d)("alpha",t,e,n))];case"Prelu":return[zs.a(Object(za.d)("x",t,e,n),Object(za.d)("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"control":return Vs(t,e,n);case"convolution":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=Object(za.d)("stride",t,e,n),a=Object(za.d)("pad",t,e,n),s=Object(za.d)("dataFormat",t,e,n).toUpperCase(),i=Object(za.d)("dilation",t,e,n);return[Ws.a(Object(za.d)("x",t,e,n),Object(za.d)("filter",t,e,n),r,a,s,i)]}case"Conv2D":{const r=Object(za.d)("strides",t,e,n),a=Object(za.c)(t,e,n),s=Object(za.d)("dataFormat",t,e,n).toUpperCase(),i=Object(za.d)("dilations",t,e,n);return[Us.a(Object(za.d)("x",t,e,n),Object(za.d)("filter",t,e,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:c}=ei(t,e,n);return[Ks.H.conv2d({x:Object(za.d)("x",t,e,n),filter:Object(za.d)("filter",t,e,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:c}=ei(t,e,n);return[Ks.H.depthwiseConv2d({x:Object(za.d)("x",t,e,n),filter:Object(za.d)("filter",t,e,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(za.d)("outputShape",t,e,n),a=Object(za.d)("strides",t,e,n),s=Object(za.c)(t,e,n);return[Hs.a(Object(za.d)("x",t,e,n),Object(za.d)("filter",t,e,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(za.d)("strides",t,e,n),a=Object(za.c)(t,e,n),s=Object(za.d)("dilations",t,e,n),i=Object(za.d)("dataFormat",t,e,n).toUpperCase();return[Gs.a(Object(za.d)("input",t,e,n),Object(za.d)("filter",t,e,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=Object(za.d)("strides",t,e,n),a=Object(za.d)("pad",t,e,n),s=Object(za.d)("dataFormat",t,e,n).toUpperCase(),i=Object(za.d)("dilations",t,e,n);return[Xs.a(Object(za.d)("x",t,e,n),Object(za.d)("filter",t,e,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Object(za.d)("strides",t,e,n),a=Object(za.d)("pad",t,e,n),s=Object(za.d)("kernelSize",t,e,n);return[qs.a(Object(za.d)("x",t,e,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Object(za.d)("strides",t,e,n),a=Object(za.d)("pad",t,e,n),s=Object(za.d)("kernelSize",t,e,n);return[Ys.a(Object(za.d)("x",t,e,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Object(za.d)("strides",t,e,n),a=Object(za.d)("pad",t,e,n),s=Object(za.d)("kernelSize",t,e,n),i=Object(za.d)("includeBatchInIndex",t,e,n),{result:o,indexes:u}=Js.a(Object(za.d)("x",t,e,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=Object(za.d)("strides",t,e,n),a=Object(za.d)("pad",t,e,n),s=Object(za.d)("kernelSize",t,e,n);return[Zs.a(Object(za.d)("x",t,e,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Object(za.d)("strides",t,e,n),a=Object(za.d)("pad",t,e,n),s=Object(za.d)("kernelSize",t,e,n);return[Qs.a(Object(za.d)("x",t,e,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Object(za.d)("strides",t,e,n),a=Object(za.d)("pad",t,e,n),s=Object(za.d)("dilations",t,e,n),i=r[1],o=r[2],u=s[1],c=s[2];return[ti.a(Object(za.d)("x",t,e,n),Object(za.d)("filter",t,e,n),[i,o],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"creation":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=Object(za.d)("shape",t,e,n),a=Object(za.d)("dtype",t,e,n),s=Object(za.d)("value",t,e,n);return[ni.a(r,s,a)]}case"LinSpace":{const r=Object(za.d)("start",t,e,n),a=Object(za.d)("stop",t,e,n),s=Object(za.d)("num",t,e,n);return[ri.a(r,a,s)]}case"Multinomial":{const r=Object(za.d)("logits",t,e,n),a=Object(za.d)("numSamples",t,e,n),s=Object(za.d)("seed",t,e,n);return[ai.a(r,a,s)]}case"OneHot":{const r=Object(za.d)("indices",t,e,n),a=Object(za.d)("depth",t,e,n),s=Object(za.d)("onValue",t,e,n),i=Object(za.d)("offValue",t,e,n);return[si.a(r,a,s,i)]}case"Ones":return[ii.a(Object(za.d)("shape",t,e,n),Object(za.d)("dtype",t,e,n))];case"OnesLike":return[oi.a(Object(za.d)("x",t,e,n))];case"RandomUniform":return[ui.a(Object(za.d)("shape",t,e,n),Object(za.d)("minval",t,e,n),Object(za.d)("maxval",t,e,n),Object(za.d)("dtype",t,e,n))];case"Range":{const r=Object(za.d)("start",t,e,n),a=Object(za.d)("stop",t,e,n),s=Object(za.d)("step",t,e,n);return[ci.a(r,a,s,Object(za.d)("dtype",t,e,n))]}case"TruncatedNormal":{const r=Object(za.d)("shape",t,e,n),a=Object(za.d)("mean",t,e,n),s=Object(za.d)("stdDev",t,e,n),i=Object(za.d)("seed",t,e,n);return[li.a(r,a,s,Object(za.d)("dtype",t,e,n),i)]}case"Zeros":return[di.a(Object(za.d)("shape",t,e,n),Object(za.d)("dtype",t,e,n))];case"ZerosLike":return[hi.a(Object(za.d)("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=bi(t,e,n),c=await Ks.L.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=bi(t,e,n),u=Object(za.d)("padToMaxOutputSize",t,e,n),c=await Ks.L.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=bi(t,e,n);return[await Ks.L.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=pi.a(Object(za.d)("condition",t,e,n),"bool"),a=[await fi.a(r)];return r.dispose(),a}case"ListDiff":return mi.a(Object(za.d)("x",t,e,n),Object(za.d)("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=Object(za.d)("x",t,e,n),a=Object(za.d)("k",t,e,n),s=Object(za.d)("sorted",t,e,n),i=gi.a(r,a,s);return[i.values,i.indices]}case"Unique":{const r=Object(za.d)("x",t,e,n),a=yi.a(r);return[a.values,a.indices]}case"UniqueV2":{const r=Object(za.d)("x",t,e,n),a=Object(za.d)("axis",t,e,n),s=yi.a(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"image":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=Object(za.d)("images",t,e,n),a=Object(za.d)("size",t,e,n),s=Object(za.d)("alignCorners",t,e,n);return[Ks.L.resizeBilinear(r,[a[0],a[1]],s)]}case"ResizeNearestNeighbor":{const r=Object(za.d)("images",t,e,n),a=Object(za.d)("size",t,e,n),s=Object(za.d)("alignCorners",t,e,n);return[Ks.L.resizeNearestNeighbor(r,[a[0],a[1]],s)]}case"CropAndResize":{const r=Object(za.d)("image",t,e,n),a=Object(za.d)("boxes",t,e,n),s=Object(za.d)("boxInd",t,e,n),i=Object(za.d)("cropSize",t,e,n),o=Object(za.d)("method",t,e,n),u=Object(za.d)("extrapolationValue",t,e,n);return[Ks.L.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"graph":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=Object(za.d)("default",t,e,n);return[Object(za.e)(t.name,e,n)||r];case"Placeholder":return[Object(za.e)(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(za.d)("x",t,e,n);return[Object(za.a)(r)]}case"IdentityN":return Object(za.d)("x",t,e,n).map(t=>Object(za.a)(t));case"Snapshot":const a=Object(za.d)("x",t,e,n);return[Object(za.a)(a)];case"Shape":return[Oi.a(Object(za.d)("x",t,e,n).shape,"int32")];case"ShapeN":return Object(za.d)("x",t,e,n).map(t=>Oi.a(t.shape));case"Size":return[xi.a(Object(za.d)("x",t,e,n).size,"int32")];case"Rank":return[xi.a(Object(za.d)("x",t,e,n).rank,"int32")];case"NoOp":return[xi.a(1)];case"Print":const s=Object(za.d)("x",t,e,n),i=Object(za.d)("data",t,e,n),o=Object(za.d)("message",t,e,n),u=Object(za.d)("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let t=0;t<i.length;t++)console.log(Array.prototype.slice.call(i[t].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"logical":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"Equal":return[vi.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"NotEqual":return[ji.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"Greater":return[Ii.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"GreaterEqual":return[ki.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"Less":return[Ni.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"LessEqual":return[Si.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"LogicalAnd":return[Ci.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"LogicalNot":return[Ti.a(Object(za.d)("a",t,e,n))];case"LogicalOr":return[Ai.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];case"Select":case"SelectV2":return[Ei.a(Object(za.d)("condition",t,e,n),Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"matrices":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ri.a(Object(za.d)("a",t,e,n),Object(za.d)("b",t,e,n),Object(za.d)("transposeA",t,e,n),Object(za.d)("transposeB",t,e,n))];case"Transpose":return[$i.a(Object(za.d)("x",t,e,n),Object(za.d)("perm",t,e,n))];case"_FusedMatMul":const[r,a]=Object(za.d)("fusedOps",t,e,n),s="biasadd"===r,i="prelu"===a,o=Object(za.d)("numArgs",t,e,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=Object(za.d)("args",t,e,n);return[Ks.H.matMul({a:Object(za.d)("a",t,e,n),b:Object(za.d)("b",t,e,n),transposeA:Object(za.d)("transposeA",t,e,n),transposeB:Object(za.d)("transposeB",t,e,n),bias:u,activation:a,preluActivationWeights:c})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"normalization":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Fi.a(Object(za.d)("x",t,e,n),Object(za.d)("mean",t,e,n),Object(za.d)("variance",t,e,n),Object(za.d)("offset",t,e,n),Object(za.d)("scale",t,e,n),Object(za.d)("epsilon",t,e,n))];case"LRN":return[Di.a(Object(za.d)("x",t,e,n),Object(za.d)("radius",t,e,n),Object(za.d)("bias",t,e,n),Object(za.d)("alpha",t,e,n),Object(za.d)("beta",t,e,n))];case"Softmax":return[_i.a(Object(za.d)("x",t,e,n))];case"LogSoftmax":return[Mi.a(Object(za.d)("x",t,e,n))];case"SparseToDense":return[zi.a(Object(za.d)("sparseIndices",t,e,n),Object(za.d)("outputShape",t,e,n),Object(za.d)("sparseValues",t,e,n),Object(za.d)("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"reduction":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"Max":{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("keepDims",t,e,n);return[Li.a(Object(za.d)("x",t,e,n),r,a)]}case"Mean":{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("keepDims",t,e,n);return[Bi.a(Object(za.d)("x",t,e,n),r,a)]}case"Min":{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("keepDims",t,e,n);return[Pi.a(Object(za.d)("x",t,e,n),r,a)]}case"Sum":{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("keepDims",t,e,n);return[Vi.a(Object(za.d)("x",t,e,n),r,a)]}case"All":{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("keepDims",t,e,n);return[Wi.a(Object(za.d)("x",t,e,n),r,a)]}case"Any":{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("keepDims",t,e,n);return[Ui.a(Object(za.d)("x",t,e,n),r,a)]}case"ArgMax":{const r=Object(za.d)("axis",t,e,n);return[Ki.a(Object(za.d)("x",t,e,n),r)]}case"ArgMin":{const r=Object(za.d)("axis",t,e,n);return[Hi.a(Object(za.d)("x",t,e,n),r)]}case"Prod":{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("keepDims",t,e,n);return[_s.a(Object(za.d)("x",t,e,n),r,a)]}case"Cumsum":{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("exclusive",t,e,n),s=Object(za.d)("reverse",t,e,n);return[Gi.a(Object(za.d)("x",t,e,n),r,a,s)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"slice_join":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=Object(za.d)("n",t,e,n),a=Object(za.d)("axis",t,e,n);let s=Object(za.d)("tensors",t,e,n);return s=s.slice(0,r),[Xi.a(s,a)]}case"GatherV2":case"Gather":{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("x",t,e,n),s=Object(za.d)("indices",t,e,n);return[qi.a(a,pi.a(s,"int32"),r)]}case"ReverseV2":case"Reverse":{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("x",t,e,n);return[Yi.a(a,r)]}case"Slice":{const r=Object(za.d)("begin",t,e,n),a=Object(za.d)("size",t,e,n);return[Ji.a(Object(za.d)("x",t,e,n),r,a)]}case"StridedSlice":{const r=Object(za.d)("begin",t,e,n),a=Object(za.d)("end",t,e,n),s=Object(za.d)("strides",t,e,n),i=Object(za.d)("beginMask",t,e,n),o=Object(za.d)("endMask",t,e,n),u=Object(za.d)("ellipsisMask",t,e,n),c=Object(za.d)("newAxisMask",t,e,n),l=Object(za.d)("shrinkAxisMask",t,e,n),d=Object(za.d)("x",t,e,n);return[Zi.a(d,r,a,s,i,o,u,c,l)]}case"Pack":return Object(l.Xd)(()=>{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("tensors",t,e,n),s=a[0].shape,i=Qi.a(a[0]).shape,o=a.map(t=>{const e=l.ee.arraysEqual(t.shape,s);if(!e&&!l.ee.arraysEqual(Qi.a(t).shape,i))throw new Error("the input tensors shape does not match");return e?t:to.a(t,s)});return[eo.a(o,r)]});case"Unpack":{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("tensor",t,e,n);return no.a(a,r)}case"Tile":{const r=Object(za.d)("reps",t,e,n);return[ro.a(Object(za.d)("x",t,e,n),r)]}case"Split":case"SplitV":{const r=Object(za.d)("axis",t,e,n),a=Object(za.d)("numOrSizeSplits",t,e,n),s=Object(za.d)("x",t,e,n);return ao.a(s,a,r)}case"ScatterNd":{const r=Object(za.d)("indices",t,e,n),a=Object(za.d)("values",t,e,n),s=Object(za.d)("shape",t,e,n);return[so.a(r,a,s)]}case"GatherNd":{const r=Object(za.d)("x",t,e,n),a=Object(za.d)("indices",t,e,n);return[io.a(r,a)]}case"SparseToDense":{const r=Object(za.d)("sparseIndices",t,e,n),a=Object(za.d)("outputShape",t,e,n),s=Object(za.d)("sparseValues",t,e,n),i=Object(za.d)("defaultValue",t,e,n);return[zi.a(r,s,a,s.dtype===i.dtype?i:pi.a(i,s.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"spectral":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"FFT":return[oo.a(Object(za.d)("x",t,e,n))];case"IFFT":return[uo.a(Object(za.d)("x",t,e,n))];case"RFFT":return[co.a(Object(za.d)("x",t,e,n))];case"IRFFT":return[lo.a(Object(za.d)("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"transformation":return l.Xd(()=>((t,e,n)=>{switch(t.op){case"Cast":return[pi.a(Object(za.d)("x",t,e,n),Object(za.d)("dtype",t,e,n))];case"ExpandDims":{const r=Object(za.d)("axis",t,e,n);return[ho.a(Object(za.d)("x",t,e,n),r)]}case"Squeeze":{const r=Object(za.d)("axis",t,e,n);return[Qi.a(Object(za.d)("x",t,e,n),r)]}case"Reshape":return[to.a(Object(za.d)("x",t,e,n),Object(za.d)("shape",t,e,n))];case"MirrorPad":return[po.a(Object(za.d)("x",t,e,n),Object(za.d)("padding",t,e,n),Object(za.d)("mode",t,e,n))];case"PadV2":case"Pad":return[fo.a(Object(za.d)("x",t,e,n),Object(za.d)("padding",t,e,n),Object(za.d)("constantValue",t,e,n))];case"SpaceToBatchND":{const r=Object(za.d)("blockShape",t,e,n),a=Object(za.d)("paddings",t,e,n);return[mo.a(Object(za.d)("x",t,e,n),r,a)]}case"BatchToSpaceND":{const r=Object(za.d)("blockShape",t,e,n),a=Object(za.d)("crops",t,e,n);return[bo.a(Object(za.d)("x",t,e,n),r,a)]}case"DepthToSpace":{const r=Object(za.d)("blockSize",t,e,n),a=Object(za.d)("dataFormat",t,e,n).toUpperCase();return[go.a(Object(za.d)("x",t,e,n),r,a)]}case"BroadcastTo":return[yo.a(Object(za.d)("x",t,e,n),Object(za.d)("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const a=Object(za.d)("keyDType",t,e,n),s=Object(za.d)("valueDType",t,e,n),i=new wi(a,s);return r.addHashTable(t.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Object(za.d)("tableHandle",t,e,n,r),s=Object(za.d)("keys",t,e,n),i=Object(za.d)("values",t,e,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(za.d)("tableHandle",t,e,n,r),s=Object(za.d)("keys",t,e,n),i=Object(za.d)("defaultValue",t,e,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,r);case"custom":const a=Object(Ba.a)(t.op);if(a&&a.customExecutor)return a.customExecutor(new La(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return l.ee.isPromise(a)?a.then(t=>[].concat(t)):[].concat(a)}class xo{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function wo(t,e,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,c=Object.keys(t).map(t=>Object(za.g)(t)[0]);let l=[];null!=r&&(l=r.map(t=>Object(za.g)(t.name)[0]));const d=[...e];for(;d.length>0;){const t=d.pop();(ko(t)||No(t)||So(t))&&null==i&&(i=t,o=i.children.map(t=>t.name).filter(t=>a.has(t))),a.add(t.name),null==n[t.name]&&(-1===c.indexOf(t.name)&&-1===l.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach(t=>{u.has(t.name)||(u.add(t.name),d.push(t))}):s.push(t.name)))}return{inputs:t,outputs:e,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const vo=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],jo=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Io=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function ko(t){return vo.indexOf(t.op)>=0}function No(t){return jo.indexOf(t.op)>=0}function So(t){return Io.indexOf(t.op)>=0}class Co{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new Co(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(e=>t[e].map(t=>t.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){const n=t.map(t=>t.name).sort(),r=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=wo(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=e.map(t=>t.name),a=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map(t=>Object(za.g)(t)[0]).map(e=>t.nodes[e]),o=t.initNodes;i.forEach(t=>{r.has(t.name)&&s.push(t)}),t.weights.forEach(t=>{r.has(t.name)&&s.push(t)}),null!=o&&o.forEach(t=>{r.has(t.name)&&s.push(t)});const u=new Set,c=[];for(;s.length>0;){const t=s.pop();u.add(t.name),e[t.name]||c.push(t),t.children.forEach(t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every(t=>u.has(t.name))&&s.push(t)})}return c}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map(t=>this.graph.nodes[Object(za.g)(t)[0]]),a=e.map(t=>Object(za.g)(t)[0]);let s=a.map(t=>this.graph.nodes[t]);0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(t,s),this.compiledMap.set(i,o));const u={},c={};return Object(l.Xd)(()=>{const n=new xo(this.weightMap,u,c,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,a]=Object(za.g)(e),s=[];s[a]=t[e],r[n]=s});const s=this.getFrozenTensorIds(r),i={};for(let t=0;t<o.length;t++){const e=o[t];if(!r[e.name]){const t=Oo(e,r,n,this._resourceManager);if(l.ee.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),e.map(t=>Object(za.e)(t,r,n))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,r,a,s,i){"control"!==e.category&&-1===s.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(i[t.id]=(i[t.id]||0)+e.children.length)}),e.inputs.forEach(t=>{if("control"!==t.category){const e=Object(za.f)(t.name,n,r);null!=e&&e.forEach(t=>{if(t&&!a.has(t.id)){const e=i[t.id];1===e?(t.dispose(),delete i[t.id]):null!=e&&i[t.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},a={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const s=new xo(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(t,s,e,n),o=e.map(t=>Object(za.e)(t,i,s)),u=o.map(t=>t.id),c=Object.keys(t).map(e=>t[e].id),l=new Set([...u,...c,...this.weightIds]);return Object.keys(i).forEach(t=>{i[t].forEach(t=>{!t||t.isDisposed||l.has(t.id)||t.dispose()})}),null==this.parent&&s.dispose(l),o}async executeFunctionAsync(t,e,n){const r=t.reduce((t,e,n)=>(t[this.inputs[n].name]=e,t),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const a=Object.keys(t),s=a.map(t=>this.graph.nodes[Object(za.g)(t)[0]]),i=n.map(t=>Object(za.g)(t)[0]);let o=i.map(t=>this.graph.nodes[t]);0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:d}=wo(t,o,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map(t=>({node:t,contexts:e.currentContext})),p=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=Object(za.g)(e),a=[];a[r]=t[e],p[n]=a});const f={},m=this.getFrozenTensorIds(p),b={};for(;h.length>0;){const t=this.processStack(s,h,e,p,b,m,i,f,u);await Promise.all(t)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const g=o.filter(t=>!ko(t)&&!Object(za.e)(t.name,p,e)).map(t=>t.name);if(g.length>0){let t="";throw null!=l&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${g}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${t}`)}return p}processStack(t,e,n,r,a,s,i,o,u){const c=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let d="";if("Enter"===t.node.op&&Object(za.d)("isConstant",t.node,r,n)&&([d]=Object(za.b)(t.node.name,n)),null==r[t.node.name]){const h=Oo(t.node,r,n,this._resourceManager);d||([d]=Object(za.b)(t.node.name,n));const p=n.currentContext;l.ee.isPromise(h)?c.push(h.then(c=>(r[d]=c,n.currentContext=p,this.checkTensorForDisposal(d,t.node,r,n,s,i,o),this.processChildNodes(t.node,e,n,r,a,u),c))):(r[d]=h,this.checkTensorForDisposal(d,t.node,r,n,s,i,o),this.processChildNodes(t.node,e,n,r,a,u))}else this.processChildNodes(t.node,e,n,r,a,u)}return c}processChildNodes(t,e,n,r,a,s){t.children.forEach(t=>{const[i]=Object(za.b)(t.name,n);!a[i]&&s.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!Object(za.e)(t,r,n))&&(a[i]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!Object(za.e)(t,r,n))&&(a[i]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const n=t[e],[r]=Object(za.g)(e),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const t=a.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every((e,n)=>-1===t[n]||t[n]===e);l.ee.assert(e,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&l.ee.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter(t=>{const[e]=Object(za.g)(t);return null==this.graph.nodes[e]});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t},{})}checkOutputs(t){t.forEach(t=>{const[e]=Object(za.g)(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)})}}class To{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class Ao{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new To}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=l.Mc.browserHTTPRequest(t,this.loadOptions);else{const e=l.Mc.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(l.Mc.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=l.Mc.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Co(Ma.a.Instance.transformGraph(e,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer){const e=Ma.a.Instance.transformGraph(t.modelInitializer);this.initializer=new Co(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"===typeof t){const e=l.Mc.getSaveHandlers(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof l.Ob)&&!Array.isArray(t))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,n,r)=>(e[n]=t[r],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Eo(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t+="model.json?tfjs-format=file");const n=new Ao(t,e);return await n.load(),n}var Ro=n("YSVl"),$o=n("w4jT"),Fo=n("vc8R");class Do{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return l.ee.assert(t>0,()=>"batchSize needs to be positive, but it is\n      "+t),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),_o(async()=>(await n.iterator()).columnMajorBatch(t,e,Mo),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,_o(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,_o(async()=>(await e.iterator()).filter(e=>l.Xd(()=>t(e))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return _o(async()=>(await e.iterator()).map(e=>l.Xd(()=>t(e))),this.size)}mapAsync(t){const e=this;return _o(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return _o(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,_o(async()=>{const n=Object($o.e)(async()=>({value:await e.iterator(),done:!1}));return Object($o.d)(n.take(t))},n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,_o(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Ro.alea(e||l.ee.now().toString());return _o(async()=>{let e=a.int32();return n&&(e+=a.int32()),(await r.iterator()).shuffle(t,e.toString())},this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,_o(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function _o(t,e=null){return new class extends Do{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Mo(t){if(null===t)return null;const e=t[0];if(Object(Fo.a)(e)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof l.Ob?l.Nd(t):l.Sd(t)}(t),recurse:!1}}return{value:null,recurse:!0}}Do.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");$o.a;$o.a;var zo=n("3BSK");zo.a;function Lo(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&l.ee.assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the CPU backend.")})}const Bo=l.Oc.nonMaxSuppressionV3Impl,Po=l.Oc.split,Vo=l.Oc.tile,Wo=l.Oc.topkImpl,Uo=l.Oc.whereImpl;class Ko extends l.Z{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new l.z(this,Object(l.zc)())}write(t,e,n){this.firstUse&&(this.firstUse=!1,Object(l.Ac)().get("IS_NODE")&&l.bc.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&l.ee.isString(n[0])){const a=n.map(t=>l.ee.encodeString(t));r=this.write(a,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return l.bc.mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>l.ee.decodeString(t))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return l.gc(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Object(l.zc)().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=l.ee.now();t();return{kernelMs:l.ee.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(t,e,n,r){Lo(t,"stridedSlice");const a=l.Hd.computeOutShape(e,n,r);if(a.some(t=>0===t))return l.Sd([],a);const s=l.gc(a,t.dtype),i=this.bufferSync(t);for(let o=0;o<s.size;o++){const t=s.indexToLoc(o),n=new Array(t.length);for(let a=0;a<n.length;a++)n[a]=t[a]*r[a]+e[a];s.set(i.get(...n),...t)}return s.toTensor()}diag(t){const e=this.readSync(t.dataId),n=l.gc([t.size,t.size],t.dtype),r=n.values;for(let a=0;a<e.length;a++)r[a*t.size+a]=e[a];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let a=0;for(let u=0;u<t.rank;u++)u!==e&&(r[a++]=t.shape[u]);const s=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let u=0;u<o.length;u++)s[e]=u,o[u]=l.Cd(t,s,i).reshape(r);return o}reverse(t,e){Lo(t,"reverse");const n=l.gc(t.shape,t.dtype),r=this.bufferSync(t);for(let a=0;a<n.size;a++){const s=n.indexToLoc(a),i=s.slice();e.forEach(e=>i[e]=t.shape[e]-1-i[e]),n.set(r.get(...i),...s)}return n.toTensor()}neg(t){return Lo(t,"neg"),l.dd(l.wd(-1),t)}addN(t){Lo(t,"addN");const e=t.map(t=>this.readSync(t.dataId)),n=l.gc(t[0].shape,t[0].dtype),r=n.values;for(let a=0;a<t.length;a++){const t=e[a];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=l.ee.parseAxisParam([e],t.shape),r=Object(l.Uc)(t,n),a=l.bc.expandShapeToKeepDim(r.shape,n),s=l.Od(t,r.reshape(a)),i=l.Cc(s),o=this.sum(i,n).reshape(a);return l.wc(i,o)}pow(t,e){return Lo([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.pow(t,e))}floorDiv(t,e){Lo([t,e],"floorDiv");return this.broadcastedBinaryOp(t,e,"int32",(t,e)=>Math.floor(t/e))}sum(t,e){Lo(t,"sum"),l.bc.assertAxesAreInnerMostDims("sum",e,t.rank);const[n,r]=l.bc.computeOutAndReduceShapes(t.shape,e),a=Object(l.de)(t.dtype,"int32"),s=l.je(n,a),i=l.ee.sizeFromShape(r),o=this.readSync(s.dataId),u=this.readSync(t.dataId);for(let c=0;c<o.length;++c){const t=c*i;let e=0;for(let n=0;n<i;++n)e+=u[t+n];o[c]=e}return s}prod(t,e){Lo(t,"sum");const[n,r]=l.bc.computeOutAndReduceShapes(t.shape,e),a=Object(l.de)(t.dtype,"int32"),s=l.je(n,a),i=l.ee.sizeFromShape(r),o=this.readSync(s.dataId),u=this.readSync(t.dataId);for(let c=0;c<o.length;++c){const t=c*i;let e=1;for(let n=0;n<i;++n)e*=u[t+n];o[c]=e}return s}unsortedSegmentSum(t,e,n){Lo(t,"unsortedSegmentSum");const r=[],a=t.rank-e.rank;for(let s=0;s<a;++s)e=e.expandDims(s+1);for(let s=0;s<n;++s){const n=l.wd(s,"int32"),a=l.Bc(n,e).asType("float32").mul(t).sum(0);r.push(a)}return l.Nd(r)}argMin(t,e){Lo(t,"argMin");const n=[e];l.bc.assertAxesAreInnerMostDims("argMin",n,t.rank);const[r,a]=l.bc.computeOutAndReduceShapes(t.shape,n),s=l.je(r,"int32"),i=l.ee.sizeFromShape(a),o=this.readSync(s.dataId),u=this.readSync(t.dataId);for(let c=0;c<o.length;++c){const t=c*i;let e=u[t],n=0;for(let r=0;r<i;++r){const a=u[t+r];a<e&&(e=a,n=r)}o[c]=n}return s}argMax(t,e){Lo(t,"argMax");const n=[e];l.bc.assertAxesAreInnerMostDims("argMax",n,t.rank);const[r,a]=l.bc.computeOutAndReduceShapes(t.shape,n),s=l.je(r,"int32"),i=l.ee.sizeFromShape(a),o=this.readSync(s.dataId),u=this.readSync(t.dataId);for(let c=0;c<o.length;++c){const t=c*i;let e=u[t],n=0;for(let r=0;r<i;++r){const a=u[t+r];a>e&&(e=a,n=r)}o[c]=n}return s}cumsum(t,e,n,r){if(Lo(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=`+e);const a=Object(l.de)(t.dtype,"int32"),s=l.je(t.shape,a),i=this.readSync(s.dataId),o=this.readSync(t.dataId),u=t.shape[t.rank-1],c=r?(t,e)=>t+u-e-1:(t,e)=>t+e;for(let l=0;l<o.length;l+=u)for(let t=0;t<u;t++){const e=c(l,t);if(0===t)i[e]=n?0:o[e];else{const r=c(l,t-1);i[e]=n?o[r]+i[r]:o[e]+i[r]}}return s}equal(t,e){return Lo([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t===e?1:0)}notEqual(t,e){return Lo([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t!==e?1:0)}less(t,e){return Lo([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t<e?1:0)}lessEqual(t,e){return Lo([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t<=e?1:0)}greater(t,e){return Lo([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t>e?1:0)}greaterEqual(t,e){return Lo([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t>=e?1:0)}logicalAnd(t,e){return Lo([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t&&e)}logicalOr(t,e){return Lo([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t||e)}select(t,e,n){Lo([t,e,n],"select");const r=this.readSync(t.dataId),a=this.readSync(e.dataId),s=this.readSync(n.dataId),i=l.je(e.shape,Object(l.de)(e.dtype,n.dtype)),o=this.readSync(i.dataId);let u=0;const c=0===t.rank||t.rank>1||1===e.rank?1:l.ee.sizeFromShape(e.shape.slice(1));for(let l=0;l<r.length;l++)for(let t=0;t<c;t++)1===r[l]?o[u++]=a[l]:o[u++]=s[l];return i}where(t){Lo([t],"where");const e=this.readSync(t.dataId);return Uo(t.shape,e)}topk(t,e,n){Lo(t,"topk");const r=this.readSync(t.dataId);return Wo(r,t.shape,t.dtype,e,n)}min(t,e){Lo(t,"min"),l.bc.assertAxesAreInnerMostDims("min",e,t.rank);const[n,r]=l.bc.computeOutAndReduceShapes(t.shape,e),a=l.je(n,t.dtype),s=l.ee.sizeFromShape(r),i=this.readSync(a.dataId),o=this.readSync(t.dataId);for(let u=0;u<i.length;++u){const t=u*s;let e=o[t];for(let n=0;n<s;++n){const r=o[t+n];r<e&&(e=r)}i[u]=e}return a}minimum(t,e){return Lo([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.min(t,e))}mod(t,e){return Lo([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})}maximum(t,e){return Lo([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.max(t,e))}all(t,e){Lo(t,"all"),l.bc.assertAxesAreInnerMostDims("all",e,t.rank);const[n,r]=l.bc.computeOutAndReduceShapes(t.shape,e),a=l.je(n,t.dtype),s=l.ee.sizeFromShape(r),i=this.readSync(a.dataId),o=this.readSync(t.dataId);for(let u=0;u<i.length;++u){const t=u*s;let e=o[t];for(let n=0;n<s;++n){const r=o[t+n];e=e&&r}i[u]=e}return a}any(t,e){Lo(t,"any"),l.bc.assertAxesAreInnerMostDims("any",e,t.rank);const[n,r]=l.bc.computeOutAndReduceShapes(t.shape,e),a=l.je(n,t.dtype),s=l.ee.sizeFromShape(r),i=this.readSync(a.dataId),o=this.readSync(t.dataId);for(let u=0;u<i.length;++u){const t=u*s;let e=o[t];for(let n=0;n<s;++n){const r=o[t+n];e=e||r}i[u]=e}return a}squaredDifference(t,e){return Lo([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>{const n=t-e;return n*n})}eluDer(t,e){Lo([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),a=this.readSync(t.dataId);for(let s=0;s<r.length;++s){const t=r[s];n[s]=t>=1?a[s]:a[s]*(t+1)}return this.makeOutput(n,e.shape,"float32")}atan2(t,e){return Lo([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.atan2(t,e))}tile(t,e){return Lo(t,"tile"),Vo(this.bufferSync(t),e)}gather(t,e,n){Lo([t,e],"gather");const r=t.shape.slice(),a=this.readSync(e.dataId);r[n]=a.length;const s=l.gc(r,t.dtype),i=this.bufferSync(t);for(let o=0;o<s.size;++o){const t=s.indexToLoc(o),e=t.slice();e[n]=a[t[n]];const r=i.locToIndex(e);s.values[o]=i.values[r]}return s.toTensor()}batchToSpaceND(t,e,n){Lo([t],"batchToSpaceND");const r=e.reduce((t,e)=>t*e),a=l.bc.getReshaped(t.shape,e,r),s=l.bc.getPermuted(a.length,e.length),i=l.bc.getReshapedPermuted(t.shape,e,r),o=l.bc.getSliceBeginCoords(n,e.length),u=l.bc.getSliceSize(i,n,e.length);return l.ae(t.reshape(a),s).reshape(i).slice(o,u)}pool3d(t,e,n){Lo(t,"pool3d");const r=e.strideDepth,a=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left,b="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(t.dataId),y=l.gc(e.outShape,t.dtype),O=y.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[3]*e.outShape[4],j=e.outShape[4];for(let l=0;l<e.batchSize;++l){const y=l*x,I=l*t.strides[0];for(let l=0;l<e.inChannels;++l)for(let x=0;x<e.outDepth;++x){const k=x*r-p;let N=k;for(;N<0;)N+=i;const S=Math.min(e.inDepth,c+k),C=y+x*w;for(let r=0;r<e.outHeight;++r){const c=r*a-f;let p=c;for(;p<0;)p+=o;const y=Math.min(e.inHeight,d+c),x=C+r*v;for(let r=0;r<e.outWidth;++r){const a=r*s-m;let c=a;for(;c<0;)c+=u;const d=Math.min(e.inWidth,h+a),f=x+r*j;let w=b,v=0,k=0;for(let e=N;e<S;e+=i){const r=I+e*t.strides[1];for(let e=p;e<y;e+=o){const a=r+e*t.strides[2];for(let e=c;e<d;e+=u){const r=g[a+e*t.strides[3]+l];if("max"===n&&r>w?w=r:"avg"===n&&(v+=r,k++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}O[f+l]="avg"===n?v/k:w}}}}return y.toTensor()}avgPool3d(t,e){return Lo(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){Lo([t,e],"avgPool3dBackprop");const r=n.strideDepth,a=n.strideHeight,s=n.strideWidth,i=n.filterDepth,o=n.filterHeight,u=n.filterWidth,c=n.dilationDepth,d=n.dilationHeight,h=n.dilationWidth,p=n.effectiveFilterDepth,f=n.effectiveFilterHeight,m=n.effectiveFilterWidth,b=p-1-n.padInfo.front,g=m-1-n.padInfo.left,y=f-1-n.padInfo.top,O=l.gc(e.shape,"float32"),x=1/(i*o*u),w=this.bufferSync(t);for(let l=0;l<n.batchSize;++l)for(let t=0;t<n.inChannels;++t)for(let e=0;e<n.inDepth;++e)for(let i=0;i<n.inHeight;++i)for(let o=0;o<n.inWidth;++o){const u=e-b,v=i-y,j=o-g;let I=0;for(let e=0;e<p;e+=c){const i=(u+e)/r;if(!(i<0||i>=n.outDepth||Math.floor(i)!==i))for(let e=0;e<f;e+=d){const r=(v+e)/a;if(!(r<0||r>=n.outHeight||Math.floor(r)!==r))for(let e=0;e<m;e+=h){const a=(j+e)/s;if(a<0||a>=n.outWidth||Math.floor(a)!==a)continue;I+=w.get(l,i,r,a,t)}}}O.set(I*x,l,e,i,o,t)}return O.toTensor()}maxPool3d(t,e){return Lo(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=l.gc(e.outShape,"int32"),r=e.strideDepth,a=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left,b=this.bufferSync(t);for(let l=0;l<e.batchSize;++l)for(let t=0;t<e.inChannels;++t)for(let g=0;g<e.outDepth;++g){const y=g*r-p;let O=y;for(;O<0;)O+=i;const x=Math.min(e.inDepth,c+y);for(let r=0;r<e.outHeight;++r){const c=r*a-f;let p=c;for(;p<0;)p+=o;const w=Math.min(e.inHeight,d+c);for(let a=0;a<e.outWidth;++a){const f=a*s-m;let v=f;for(;v<0;)v+=u;const j=Math.min(e.inWidth,h+f);let I=Number.NEGATIVE_INFINITY,k=-1;for(let e=O;e<x;e+=i){const n=e-y;for(let r=p;r<w;r+=o){const a=r-c;for(let s=v;s<j;s+=u){const i=s-f,o=b.get(l,e,r,s,t);o>=I&&(I=o,k=n*d*h+a*d+i)}}}n.set(k,l,g,r,a,t)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){Lo([e,n],"maxPool3dBackprop");const a=this.maxPool3dPositions(e,r),s=r.strideDepth,i=r.strideHeight,o=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=h-1-r.padInfo.front,b=f-1-r.padInfo.left,g=p-1-r.padInfo.top,y=l.gc(e.shape,"float32"),O=this.bufferSync(a),x=this.bufferSync(t);for(let l=0;l<r.batchSize;++l)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.inDepth;++e)for(let n=0;n<r.inHeight;++n)for(let a=0;a<r.inWidth;++a){const w=e-m,v=n-g,j=a-b;let I=0;for(let e=0;e<h;e+=u){const n=(w+e)/s;if(!(n<0||n>=r.outDepth||Math.floor(n)!==n))for(let a=0;a<p;a+=c){const s=(v+a)/i;if(!(s<0||s>=r.outHeight||Math.floor(s)!==s))for(let i=0;i<f;i+=d){const u=(j+i)/o;if(u<0||u>=r.outWidth||Math.floor(u)!==u)continue;const c=h*p*f-1-O.get(l,n,s,u,t)===e*p*f+a*f+i?1:0;if(0===c)continue;I+=x.get(l,n,s,u,t)*c}}}y.set(I,l,e,n,a,t)}return y.toTensor()}resizeBilinear(t,e,n,r){Lo(t,"resizeBilinear");const[a,s,i,o]=t.shape,u=this.readSync(t.dataId),c=new Float32Array(l.ee.sizeFromShape([a,e,n,o])),d=[r&&e>1?s-1:s,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let p=0;const f=d[0]/h[0],m=d[1]/h[1];for(let l=0;l<a;l++)for(let r=0;r<e;r++){const e=f*r,a=Math.floor(e),d=e-a,h=Math.min(s-1,Math.ceil(e)),b=l*t.strides[0]+a*t.strides[1],g=l*t.strides[0]+h*t.strides[1];for(let r=0;r<n;r++){const e=m*r,n=Math.floor(e),a=e-n,s=Math.min(i-1,Math.ceil(e)),l=b+n*t.strides[2],h=g+n*t.strides[2],f=b+s*t.strides[2],y=g+s*t.strides[2];for(let t=0;t<o;t++){const e=u[l+t],n=u[h+t],r=e+(u[f+t]-e)*a,s=r+(n+(u[y+t]-n)*a-r)*d;c[p++]=s}}}return l.Sd(c,[a,e,n,o])}resizeBilinearBackprop(t,e,n){Lo([t,e],"resizeBilinearBackprop");const[r,a,s,i]=e.shape,[,o,u]=t.shape,c=new Float32Array(r*a*s*i),d=[n&&o>1?a-1:a,n&&u>1?s-1:s],h=[n&&o>1?o-1:o,n&&u>1?u-1:u],p=d[0]/h[0],f=d[1]/h[1],m=this.readSync(t.dataId);let b=0;for(let l=0;l<r;l++){const t=l*e.strides[0];for(let n=0;n<o;n++){const r=n*p,o=Math.floor(r),l=Math.min(Math.ceil(r),a-1),d=t+o*e.strides[1],h=t+l*e.strides[1],g=r-o,y=1-g;for(let t=0;t<u;t++){const n=t*f,r=Math.floor(n),a=Math.min(Math.ceil(n),s-1),o=n-r,u=1-o,l=d+r*e.strides[2],p=d+a*e.strides[2],O=h+r*e.strides[2],x=h+a*e.strides[2],w=y*u,v=y*o,j=g*u,I=g*o;for(let t=0;t<i;t++){const e=m[b++];c[l+t]+=e*w,c[p+t]+=e*v,c[O+t]+=e*j,c[x+t]+=e*I}}}}return l.Vd(c,[r,s,a,i],e.dtype)}resizeNearestNeighbor(t,e,n,r){Lo(t,"resizeNearestNeighbor");const[a,s,i,o]=t.shape,u=this.readSync(t.dataId),c=new Float32Array(a*e*n*o),d=[r&&e>1?s-1:s,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],p=d[0]/h[0],f=d[1]/h[1];let m=0;for(let l=0;l<a;l++){const a=l*t.strides[0];for(let l=0;l<e;l++){const e=p*l,d=a+Math.min(s-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let a=0;a<n;a++){const e=f*a,n=d+Math.min(i-1,r?Math.round(e):Math.floor(e))*t.strides[2];for(let t=0;t<o;t++){const e=u[n+t];c[m++]=e}}}}return l.Sd(c,[a,e,n,o],t.dtype)}resizeNearestNeighborBackprop(t,e,n){Lo([t,e],"resizeNearestNeighborBackprop");const[r,a,s,i]=e.shape,[,o,u]=t.shape,c=new Float32Array(r*a*s*i),d=this.readSync(t.dataId),h=[n&&o>1?a-1:a,n&&u>1?s-1:s],p=[n&&o>1?o-1:o,n&&u>1?u-1:u],f=h[0]/p[0],m=h[1]/p[1],b=1/f,g=1/m,y=2*Math.ceil(b)+2,O=2*Math.ceil(g)+2;for(let l=0;l<r;l++){const r=l*e.strides[0];for(let l=0;l<a;l++){const h=r+l*e.strides[1],p=Math.floor(l*b),x=Math.floor(p-y/2);for(let b=0;b<s;b++){const p=h+b*e.strides[2],w=Math.floor(b*g),v=Math.floor(w-O/2);for(let e=0;e<i;e++){let i=0;for(let c=0;c<y;c++){const h=c+x;if(h<0||h>=o)continue;const p=r+h*t.strides[1],g=h*f;if(l===Math.min(a-1,n?Math.round(g):Math.floor(g)))for(let r=0;r<O;r++){const a=r+v;if(a<0||a>=u)continue;const o=p+a*t.strides[2],c=a*m;b===Math.min(s-1,n?Math.round(c):Math.floor(c))&&(i+=d[o+e])}}c[p+e]=i}}}}return l.Vd(c,e.shape,e.dtype)}localResponseNormalization4D(t,e,n,r,a){Lo(t,"localResponseNormalization4D");const s=t.shape[3],i=s-1,o=this.readSync(t.dataId),u=t.size,c=new Float32Array(u);function d(t){const n=t%s;let r=t-n+Math.max(0,n-e);const a=t-n+Math.min(n+e,i);let u=0;for(;r<=a;r++){const t=o[r];u+=t*t}return u}for(let l=0;l<u;l++){const t=d(l),e=o[l]*Math.pow(n+r*t,-a);c[l]=e}return l.Vd(c,t.shape)}LRNGrad(t,e,n,r,a,s,i){Lo(t,"LRNGrad");const o=t.shape[3],u=this.readSync(t.dataId),c=this.readSync(e.dataId),d=this.readSync(n.dataId),h=new Float32Array(t.size),p=t.size;for(let l=0;l<p;l++){const t=l%o,e=l-t+Math.max(0,t-r),n=l-t+Math.min(o,t+r+1);let p=0;for(let r=e;r<n;r++)p+=Math.pow(c[r],2);p=s*p+a;for(let r=e;r<n;r++){let t=-2*s*i*c[r]*d[l]/p;l===r&&(t+=Math.pow(p,-i)),t*=u[l],h[r]+=t}}return l.Vd(h,t.shape)}multinomial(t,e,n,r){Lo(t,"multinomial");const a=e?t:l.Id(t),s=a.shape[0],i=a.shape[1],o=l.je([s,n],"int32"),u=this.readSync(o.dataId),c=this.readSync(a.dataId);for(let l=0;l<s;++l){const t=l*i,e=new Float32Array(i-1);e[0]=c[t];for(let n=1;n<e.length;++n)e[n]=e[n-1]+c[t+n];const a=Ro.alea(r.toString()),s=l*n;for(let r=0;r<n;++r){const t=a();u[s+r]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){u[s+r]=n;break}}}return o}oneHot(t,e,n,r){Lo(t,"oneHot");const a=new Float32Array(t.size*e);a.fill(r);const s=this.readSync(t.dataId);for(let i=0;i<t.size;++i)s[i]>=0&&s[i]<e&&(a[i*e+s[i]]=n);return l.Ud(a,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,a){Lo(t,"nonMaxSuppression");const s=this.readSync(t.dataId),i=this.readSync(e.dataId);return Bo(s,i,n,r,a)}depthToSpace(t,e,n){l.ee.assert("NHWC"===n,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n),l.ee.assert(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],a=t.shape[1],s=t.shape[2],i=t.shape[3],o=a*e,u=s*e,c=i/(e*e),d=this.readSync(t.dataId),h=new Float32Array(r*o*u*c);let p=0;for(let l=0;l<r;++l)for(let t=0;t<o;++t){const n=Math.floor(t/e),r=t%e;for(let t=0;t<u;++t){const o=Math.floor(t/e),u=(r*e+t%e)*c;for(let t=0;t<c;++t){const e=t+u+i*(o+s*(n+a*l));h[p++]=d[e]}}}return l.Vd(h,[r,o,u,c])}broadcastedBinaryOp(t,e,n,r){const a=l.bc.assertAndGetBroadcastShape(t.shape,e.shape),s=l.gc(a,n),i=this.readSync(t.dataId),o=this.readSync(e.dataId),u=l.bc.getBroadcastDims(t.shape,a),c=l.bc.getBroadcastDims(e.shape,a),d=s.values;if(u.length+c.length===0)for(let l=0;l<d.length;++l)d[l]=r(i[l%i.length],o[l%o.length]);else{const n=this.bufferSync(t),a=this.bufferSync(e);for(let l=0;l<d.length;++l){const h=s.indexToLoc(l),p=h.slice(-t.rank);u.forEach(t=>p[t]=0);const f=n.locToIndex(p),m=h.slice(-e.rank);c.forEach(t=>m[t]=0);const b=a.locToIndex(m);d[l]=r(i[f],o[b])}}return s.toTensor()}split(t,e,n){return Po(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,a,s){const[i,o,u,c]=t.shape,d=e.shape[0],[h,p]=r,f=l.gc([d,h,p,c],"float32"),m=this.readSync(e.dataId),b=this.readSync(n.dataId),g=this.readSync(t.dataId),y=t.strides,O=f.strides;for(let l=0;l<d;l++){const t=4*l,e=m[t],n=m[t+1],r=m[t+2],d=m[t+3],x=b[l];if(x>=i)continue;const w=h>1?(r-e)*(o-1)/(h-1):0,v=p>1?(d-n)*(u-1)/(p-1):0;for(let i=0;i<h;i++){const t=h>1?e*(o-1)+i*w:.5*(e+r)*(o-1);if(t<0||t>o-1)for(let e=0;e<p;e++)for(let t=0;t<c;t++){const n=t+e*O[2]+i*O[1]+l*O[0];f.values[n]=s}else if("bilinear"===a){const e=Math.floor(t),r=Math.ceil(t),a=t-e;for(let t=0;t<p;t++){const o=p>1?n*(u-1)+t*v:.5*(n+d)*(u-1);if(o<0||o>u-1){for(let e=0;e<c;e++){const n=e+t*O[2]+i*O[1]+l*O[0];f.values[n]=s}continue}const h=Math.floor(o),m=Math.ceil(o),b=o-h;for(let n=0;n<c;n++){let s=n+h*y[2]+e*y[1]+x*y[0];const o=g[s];s=n+m*y[2]+e*y[1]+x*y[0];const u=g[s];s=n+h*y[2]+r*y[1]+x*y[0];const c=g[s];s=n+m*y[2]+r*y[1]+x*y[0];const d=o+(u-o)*b,p=c+(g[s]-c)*b;s=n+t*O[2]+i*O[1]+l*O[0],f.values[s]=d+(p-d)*a}}}else for(let e=0;e<p;++e){const r=p>1?n*(u-1)+e*v:.5*(n+d)*(u-1);if(r<0||r>u-1){for(let t=0;t<c;t++){const n=t+e*O[2]+i*O[1]+l*O[0];f.values[n]=s}continue}const a=Math.round(r),o=Math.round(t);for(let t=0;t<c;t++){const n=t+a*y[2]+o*y[1]+x*y[0],r=t+e*O[2]+i*O[1]+l*O[0];f.values[r]=g[n]}}}}return f.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:a,numUpdates:s,sliceSize:i,strides:o,outputSize:u}=l.bc.calculateShapes(e,t,n);return this.scatter(t,e,n,u,i,s,a,o,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[a,s,i,o]=l.bc.prepareAndValidate(t,e);if(0===s)return l.Sd([],a,t.dtype);const u=new l.Pb([s,i],t.dtype),c=this.readSync(e.dataId),d=this.readSync(t.dataId);for(let l=0;l<s;l++){const e=[];let n=0;for(let t=0;t<r;t++){const a=c[l*r+t];n+=a*o[t],e.push(a)}if(n<0||n>=t.size/i)throw new Error(`Invalid indices: ${e} does not index into ${t.shape}`);for(let t=0;t<i;t++)u.values[l*i+t]=d[n*i+t]}return u.toTensor().reshape(a)}scatterND(t,e,n){const{sliceRank:r,numUpdates:a,sliceSize:s,strides:i,outputSize:o}=l.bc.calculateShapes(e,t,n),u=l.wd(0);return this.scatter(t,e,n,o,s,a,r,i,u,!0)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return l.Fc(t.shape,1,t.dtype)}zerosLike(t){const e=l.ee.getArrayFromDType(t.dtype,l.ee.sizeFromShape(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return l.bc.linspaceImpl(t,e,n)}scatter(t,e,n,r,a,s,i,o,u,c){const d=[r/a,a],h=this.readSync(t.dataId),p=this.readSync(e.dataId);if(0===r)return l.Sd([],n,e.dtype);const f=new l.Pb(d,e.dtype);f.values.fill(this.readSync(u.dataId)[0]);for(let l=0;l<s;l++){const t=[];let s=0;for(let e=0;e<i;e++){const n=h[l*i+e];t.push(n),s+=n*o[e]}if(s<0||s>=r/a)throw new Error(`Invalid indices: ${t} does not index into ${n}`);for(let n=0;n<a;n++)c?f.values[s*a+n]+=p[l*a+n]:f.values[s*a+n]=0===e.rank?p[0]:p[l*a+n]}return f.toTensor().reshape(n)}}function Ho(t,e,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(Lo(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=l.ee.sizeFromShape(i.shape),d=n||i.dtype,h=l.ee.getArrayFromDType(d,c);for(let t=0;t<c;++t)h[t]=e(u[t],a);return o.makeTensorInfo(i.shape,d,h)}}function Go(t,e,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(Lo(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=n||i.dtype,l=e(u,c,a);return o.makeTensorInfo(i.shape,c,l)}}Object(l.rd)("cpu",()=>new Ko,1);const Xo=Ho(l.H,t=>t>=0?t:Math.exp(t)-1),qo={kernelName:l.H,backendName:"cpu",kernelFunc:Xo};function Yo(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Jo={kernelName:l.U,backendName:"cpu",kernelFunc:Yo};function Zo(t){return(e,n,r,a,s)=>{const i=l.bc.assertAndGetBroadcastShape(e,n),o=i.length,u=l.ee.computeStrides(i),c=l.ee.sizeFromShape(i),d=l.ee.getTypedArrayFromDType(s,c),h=e.length,p=n.length,f=l.ee.computeStrides(e),m=l.ee.computeStrides(n),b=l.bc.getBroadcastDims(e,i),g=l.bc.getBroadcastDims(n,i);if(b.length+g.length===0)for(let l=0;l<d.length;++l)d[l]=t(r[l%r.length],a[l%a.length]);else for(let y=0;y<d.length;++y){const e=l.ee.indexToLoc(y,o,u),n=e.slice(-h);b.forEach(t=>n[t]=0);const s=l.ee.locToIndex(n,h,f),i=e.slice(-p);g.forEach(t=>i[t]=0);const c=l.ee.locToIndex(i,p,m);d[y]=t(r[s],a[c])}return[d,i]}}const Qo=Zo((t,e)=>t<0?e*t:t);function tu(t){const{inputs:e,backend:n}=t,{x:r,alpha:a}=e;Lo([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=Qo(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const eu={kernelName:l.qb,backendName:"cpu",kernelFunc:tu},nu=Ho(l.tb,t=>Math.max(0,t)),ru={kernelName:l.tb,backendName:"cpu",kernelFunc:nu},au=Ho(l.ub,t=>Math.min(Math.max(0,t),6)),su={kernelName:l.ub,backendName:"cpu",kernelFunc:au};function iu(t,e,n,r){if("linear"===n)return Yo({inputs:{x:e},backend:t});if("relu"===n)return nu({inputs:{x:e},backend:t});if("elu"===n)return Xo({inputs:{x:e},backend:t});if("relu6"===n)return au({inputs:{x:e},backend:t});if("prelu"===n)return tu({inputs:{x:e,alpha:r},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ou(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const uu={kernelName:l.p,backendName:"cpu",kernelFunc:ou};function cu(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const lu={kernelName:l.rb,backendName:"cpu",kernelFunc:cu};function du(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return Yo({inputs:{x:a},backend:n});const t=l.je(a.shape),e=du({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=ou({inputs:{real:e,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(e),r}if("complex64"===a.dtype){const t=cu({inputs:{input:a},backend:n}),e=du({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!l.ee.hasEncodingLoss(a.dtype,s)){const t=Yo({inputs:{x:a},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}if("int32"===s){const t=n.data.get(a.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(a.shape,"int32",e)}if("bool"===s){const t=n.data.get(a.dataId).values,e=l.ee.toTypedArray([0],a.dtype),[r,s]=Zo((t,e)=>t!==e?1:0)(a.shape,[],t,e,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const hu={kernelName:l.m,backendName:"cpu",kernelFunc:du};function pu(t,e,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;Lo([s,i],t);const u=o.data.get(s.dataId).values,c=o.data.get(i.dataId).values,l=r||s.dtype,[d,h]=e(s.shape,i.shape,u,c,l);return o.makeTensorInfo(h,l,d)}:({inputs:t,backend:a})=>{const{a:s,b:i}=t,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const t=du({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,a=e.complexTensorInfos.imag,u=o.data.get(r.dataId).values,c=o.data.get(a.dataId).values,l=du({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(l.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(p.dataId).values,[b,g,y]=n(s.shape,i.shape,u,c,f,m),O=o.makeTensorInfo(y,"float32",b),x=o.makeTensorInfo(y,"float32",g),w=ou({inputs:{real:O,imag:x},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(l),o.disposeIntermediateTensorInfo(O),o.disposeIntermediateTensorInfo(x),w}{const t=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,c]=e(s.shape,i.shape,t,n,a);return o.makeTensorInfo(c,a,u)}}}function fu(t){return(e,n,r,a,s,i)=>{const o=l.bc.assertAndGetBroadcastShape(e,n),u=l.ee.sizeFromShape(o),c=o.length,d=l.ee.computeStrides(o),h=l.ee.getTypedArrayFromDType("float32",u),p=l.ee.getTypedArrayFromDType("float32",u),f=l.bc.getBroadcastDims(e,o),m=l.bc.getBroadcastDims(n,o),b=l.bc.mergeRealAndImagArrays(r,a),g=l.bc.mergeRealAndImagArrays(s,i),y=e.length,O=l.ee.computeStrides(e),x=n.length,w=l.ee.computeStrides(n);if(f.length+m.length===0)for(let l=0;l<h.length;l++){const e=l%b.length,n=l%g.length,r=t(b[2*e],b[2*e+1],g[2*n],g[2*n+1]);h[l]=r.real,p[l]=r.imag}else for(let v=0;v<h.length;v++){const e=l.ee.indexToLoc(v,c,d),n=e.slice(-y);f.forEach(t=>n[t]=0);const r=l.ee.locToIndex(n,y,O),a=e.slice(-x);m.forEach(t=>a[t]=0);const s=l.ee.locToIndex(a,x,w),i=t(b[2*r],b[2*r+1],g[2*s],g[2*s+1]);h[v]=i.real,p[v]=i.imag}return[h,p,o]}}const mu=Zo((t,e)=>t+e),bu=fu((t,e,n,r)=>({real:t+n,imag:e+r})),gu=pu(l.d,mu,bu),yu={kernelName:l.d,backendName:"cpu",kernelFunc:gu};function Ou(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{shape:s}=r,i=l.ee.sizeFromShape(a.shape),o=l.ee.inferFromImplicitShape(s,i),u=l.ee.sizeFromShape(o);l.ee.assert(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const t=c.complexTensorInfos.real,e=c.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const xu={kernelName:l.vb,backendName:"cpu",kernelFunc:Ou};function wu(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s}=e,{transposeA:i,transposeB:o}=r;Lo([a,s],"matMul");const u=a.shape.length,c=s.shape.length,d=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[c-1]:s.shape[c-2],p=i?a.shape[u-1]:a.shape[u-2],f=o?s.shape[c-2]:s.shape[c-1],m=a.shape.slice(0,-2),b=s.shape.slice(0,-2),g=l.ee.sizeFromShape(m),y=l.ee.sizeFromShape(b),O=g===y||1===g||1===y;l.ee.assert(u>=2&&c>=2&&O,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${b}).`);const x=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([p,f]);l.ee.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);const w=o?[y,f,h]:[y,h,f],v=Ou({inputs:{x:a},backend:n,attrs:{shape:i?[g,d,p]:[g,p,d]}}),j=Ou({inputs:{x:s},backend:n,attrs:{shape:w}}),I=i?v.shape[1]:v.shape[2],k=i?v.shape[2]:v.shape[1],N=o?j.shape[1]:j.shape[2],S=Math.max(g,y),C=n.data.get(v.dataId).values,T=n.data.get(j.dataId).values,A=l.ee.computeStrides(v.shape),E=l.ee.computeStrides(j.shape),[R,$,F]=i?[A[0],1,A[1]]:[A[0],A[1],1],[D,_,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],z=k*N,L=Object(l.gc)([S,k,N],v.dtype),B=L.values,P=n.blockSize;for(let l=0;l<S;l++)for(let t=0;t<k;t+=P)for(let e=0;e<N;e+=P)for(let n=0;n<I;n+=P){const r=Math.min(t+P,k),a=Math.min(e+P,N),s=Math.min(n+P,I);for(let i=t;i<r;i++)for(let t=e;t<a;t++){let e=0;for(let r=n;r<s;r++){const n=Math.min(l,g-1)*R,a=Math.min(l,y-1)*M;e+=C[n+i*$+r*F]*T[r*D+t*_+a]}B[l*z+(i*N+t)]+=e}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(j),n.makeTensorInfo(x,L.dtype,L.values)}const vu={kernelName:l.l,backendName:"cpu",kernelFunc:wu};const ju={kernelName:l.Sb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s,bias:i,preluActivationWeights:o}=e,{transposeA:u,transposeB:c,activation:l}=r;let d,h,p;const f=[];d=wu({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),i&&(h=gu({inputs:{a:d,b:i},backend:n}),f.push(d),d=h),l&&(p=iu(n,d,l,o),f.push(d),d=p);for(const m of f)n.disposeIntermediateTensorInfo(m);return d}};function Iu(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const ku={kernelName:l.a,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;let r=new Float32Array(l.ee.sizeFromShape(e.shape));if("complex64"!==e.dtype){r=Iu(n.data.get(e.dataId).values)}else{const t=n.data.get(e.dataId),a=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;e++){const t=i[e],n=o[e];r[e]=Math.hypot(t,n)}}return n.makeOutput(r,e.shape,"float32")}},Nu=Ho(l.b,t=>Math.acos(t)),Su={kernelName:l.b,backendName:"cpu",kernelFunc:Nu},Cu=Ho(l.c,t=>Math.acosh(t)),Tu={kernelName:l.c,backendName:"cpu",kernelFunc:Cu},Au=Ho(l.e,t=>Math.asin(t)),Eu={kernelName:l.e,backendName:"cpu",kernelFunc:Au},Ru=Ho(l.f,t=>Math.asinh(t)),$u={kernelName:l.f,backendName:"cpu",kernelFunc:Ru},Fu=Ho(l.g,t=>Math.atan(t)),Du={kernelName:l.g,backendName:"cpu",kernelFunc:Fu},_u=Ho(l.i,t=>Math.atanh(t)),Mu={kernelName:l.i,backendName:"cpu",kernelFunc:_u};function zu(t,e,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,d=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(l.gc)(a.outShape,n),g=b.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],O=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let l=0;l<a.batchSize;++l){const e=l*y,n=l*r[0];for(let l=0;l<a.inChannels;++l)for(let b=0;b<a.outHeight;++b){const y=b*i-p,w=Math.max(0,y),v=Math.min(a.inHeight,d+y),j=e+b*O;for(let e=0;e<a.outWidth;++e){const i=e*o-f,d=Math.max(0,i),p=Math.min(a.inWidth,h+i);let b=m,y=0,O=0;for(let e=w;e<v;e+=u){const a=n+e*r[1];for(let e=d;e<p;e+=c){const n=t[a+e*r[2]+l];"max"===s&&n>b?b=n:"avg"===s&&(y+=n,O++)}if(isNaN(b))break}g[j+e*x+l]="avg"===s?y/O:b}}}return b}function Lu(t,e,n,r,a=!1,s=!1){const i=Object(l.gc)(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,b=Object(l.gc)(e,n,t);for(let l=0;l<r.batchSize;++l)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*o-f;let g=n;for(;g<0;)g+=c;const y=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*u-m;let f=h;for(;f<0;)f+=d;const O=Math.min(r.inWidth,p+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let e=g;e<y;e+=c){const i=e-n;for(let n=f;n<O;n+=d){const o=n-h,u=b.get(l,e,n,t);u>x&&(x=u,w=a?s?((l*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:i*p+o)}}i.set(w,l,e,o,t)}}return i}const Bu={kernelName:l.j,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;Lo(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;l.ee.assert(l.bc.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=l.bc.computePool2DInfo(a.shape,s,i,1,o,u);let d;if(1===c.filterWidth&&1===c.filterHeight&&l.ee.arraysEqual(c.inShape,c.outShape))d=Yo({inputs:{x:a},backend:n});else{const t=n.data.get(a.dataId).values,e=l.ee.computeStrides(a.shape),r=zu(t,a.shape,a.dtype,e,c,"avg");d=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return d}};const Pu={kernelName:l.k,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,i=s;Lo([a,s],"avgPoolBackprop");const{filterSize:o,strides:u,pad:c}=r,d=l.bc.computePool2DInfo(i.shape,o,u,1,c),h=d.strideHeight,p=d.strideWidth,f=d.filterHeight,m=d.filterWidth,b=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,O=d.effectiveFilterWidth,x=O-1-d.padInfo.left,w=y-1-d.padInfo.top,v=Object(l.gc)(i.shape,"float32"),j=1/(f*m),I=n.data.get(a.dataId).values,k=Object(l.gc)(a.shape,"float32",I);for(let l=0;l<d.batchSize;++l)for(let t=0;t<d.inChannels;++t)for(let e=0;e<d.inHeight;++e)for(let n=0;n<d.inWidth;++n){const r=e-w,a=n-x;let s=0;for(let e=0;e<y;e+=b){const n=(r+e)/h;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let e=0;e<O;e+=g){const r=(a+e)/p;if(r<0||r>=d.outWidth||Math.floor(r)!==r)continue;s+=k.get(l,n,r,t)}}v.set(s*j,l,e,n,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Vu={kernelName:l.Q,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,scale:s,offset:i,mean:o,variance:u}=e;l.ee.assert(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),l.ee.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),l.ee.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Lo([a,o,u,s,i],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const d=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,f=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),b=new Float32Array(d.length),g=m.length,y=f.length,O=p.length,x=h.length;let w=0,v=0,j=0,I=0;for(let l=0;l<d.length;++l)b[l]=m[w++]+(d[l]-h[v++])*f[j++]/Math.sqrt(p[I++]+c),w>=g&&(w=0),v>=x&&(v=0),j>=y&&(j=0),I>=O&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,b)}};function Wu(t){return(e,n,r)=>{const a=l.ee.getTypedArrayFromDType(n,e.length);for(let s=0;s<e.length;++s)a[s]=t(e[s],r);return a}}const Uu=Wu(t=>Math.ceil(t)),Ku=Go(l.n,Uu),Hu={kernelName:l.n,backendName:"cpu",kernelFunc:Ku},Gu=Ho(l.o,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),Xu={kernelName:l.o,backendName:"cpu",kernelFunc:Gu};function qu(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Yu={kernelName:l.V,backendName:"cpu",kernelFunc:qu};function Ju(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r,s=l.ee.parseAxisParam(a,e[0].shape)[0];let i=l.bc.computeOutShape(e.map(t=>t.shape),s);if(0===l.ee.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter(t=>l.ee.sizeFromShape(t.shape)>0);if(1===o.length)return o[0];const u=o.map(t=>t.shape);if(l.bc.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const t=o.map(t=>cu({inputs:{input:t},backend:n})),e=o.map(t=>qu({inputs:{input:t},backend:n})),r=Ju({inputs:t,backend:n,attrs:{axis:s}}),a=Ju({inputs:e,backend:n,attrs:{axis:s}}),i=ou({inputs:{real:r,imag:a},backend:n});return t.forEach(t=>n.disposeIntermediateTensorInfo(t)),e.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const c=o.map(t=>{const e=l.ee.sizeFromShape(t.shape.slice(s));return Ou({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})});i=l.bc.computeOutShape(c.map(t=>t.shape),1);const d=l.ee.getTypedArrayFromDType(o[0].dtype,l.ee.sizeFromShape(i));if(1===c[0].shape[0]){let t=0;c.forEach(e=>{const r=n.data.get(e.dataId).values,a=l.ee.sizeFromShape(e.shape);d.set(r,t),t+=a})}else{let t=0;c.forEach(e=>{const r=n.data.get(e.dataId).values;let a=0;for(let n=0;n<e.shape[0];++n){const s=n*i[1]+t;for(let t=0;t<e.shape[1];++t)d[s+t]=r[a++]}t+=e.shape[1]})}const h=l.bc.computeOutShape(o.map(t=>t.shape),s),p=n.makeTensorInfo(h,e[0].dtype,d);return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}const Zu={kernelName:l.q,backendName:"cpu",kernelFunc:Ju};function Qu(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:d}=r;Lo([a,s],"conv2d");const h=l.bc.convertConv2DDataFormat(u),p=l.bc.computeConv2DInfo(a.shape,s.shape,i,c,o,d,!1,h),f=p.filterHeight,m=p.filterWidth,b=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,O=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new l.Pb(p.outShape,a.dtype),v=l.ee.computeStrides(a.shape),j=l.ee.computeStrides(s.shape),I=v[0],k=x?v[1]:v[2],N=x?v[2]:1,S=x?1:v[1],C=w.strides[0],T=x?w.strides[1]:w.strides[2],A=x?w.strides[2]:1,E=x?1:w.strides[1],R=n.data.get(a.dataId).values,$=n.data.get(s.dataId).values,F=w.values;for(let l=0;l<p.batchSize;++l){const t=l*I,e=l*C;for(let n=0;n<p.outHeight;++n){const r=e+n*T,a=n*p.strideHeight-O;for(let e=0;e<f;++e){const n=a+e*b;if(n<0||n>=p.inHeight)continue;const s=e*j[0],i=t+n*k;for(let t=0;t<p.outWidth;++t){const e=r+t*A,n=t*p.strideWidth-y;for(let t=0;t<m;++t){const r=n+t*g;if(r<0||r>=p.inWidth)continue;const a=i+r*N;let o=s+t*j[1];for(let t=0;t<p.inChannels;++t){const n=R[a+t*S];for(let t=0;t<p.outChannels;++t)F[e+t*E]+=n*$[o+t];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const tc={kernelName:l.r,backendName:"cpu",kernelFunc:Qu};const ec={kernelName:l.s,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:d}=r;Lo([a,s],"conv2dBackpropFilter");const h=l.bc.convertConv2DDataFormat(u),p=l.bc.computeConv2DInfo(a.shape,d,i,1,o,c,!1,h),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=p,y="channelsLast"===p.dataFormat,O=new l.Pb(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(a.dataId).values,j=n.data.get(s.dataId).values,I=new l.Pb(a.shape,a.dtype,v),k=new l.Pb(s.shape,s.dtype,j);for(let l=0;l<b;++l){const t=Math.max(0,Math.ceil((w-l)/f)),e=Math.min(p.outHeight,(p.inHeight+w-l)/f);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((x-n)/m)),a=Math.min(p.outWidth,(p.inWidth+x-n)/m);for(let s=0;s<p.inChannels;++s)for(let i=0;i<p.outChannels;++i){let o=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<e;++c){const t=l+c*f-w;for(let e=r;e<a;++e){const r=n+e*m-x;o+=y?I.get(u,t,r,s)*k.get(u,c,e,i):I.get(u,s,t,r)*k.get(u,i,c,e)}}O.set(o,l,n,s,i)}}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}};const nc={kernelName:l.t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:d}=r;Lo([a,s],"conv2dBackpropInput");const h=l.ee.computeStrides(s.shape),p=l.ee.computeStrides(a.shape);let f=l.bc.convertConv2DDataFormat(c);const m=l.bc.computeConv2DInfo(i,s.shape,o,1,u,d,!1,f),b=new l.Pb(m.inShape,"float32"),g=b.values,y=n.data.get(a.dataId).values,O=n.data.get(s.dataId).values,[x,w,v]=h,{batchSize:j,filterHeight:I,filterWidth:k,inChannels:N,inHeight:S,inWidth:C,outChannels:T,outHeight:A,outWidth:E,strideHeight:R,strideWidth:$}=m;f=m.dataFormat;const F=I-1-m.padInfo.top,D=k-1-m.padInfo.left,_="channelsLast"===f,M=b.strides[0],z=_?b.strides[1]:b.strides[2],L=_?b.strides[2]:1,B=_?1:b.strides[1],P=p[0],V=_?p[1]:p[2],W=_?p[2]:1,U=_?1:p[1];for(let l=0;l<j;++l)for(let t=0;t<N;++t)for(let e=0;e<S;++e){const n=e-F,r=Math.max(0,Math.ceil(n/R)),a=Math.min(A,(I+n)/R);for(let s=0;s<C;++s){const i=s-D,o=Math.max(0,Math.ceil(i/$)),u=Math.min(E,(k+i)/$);let c=0;for(let e=r;e<a;++e){const r=e*R-n;for(let n=o;n<u;++n){const a=P*l+V*e+W*n,s=x*(I-1-r)+w*(k-1-(n*$-i))+v*t;for(let t=0;t<T;++t){c+=y[a+U*t]*O[s+t]}}}g[M*l+z*e+L*s+B*t]=c}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const rc={kernelName:l.u,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dilations:u}=r;Lo([a,s],"conv3d");const c=l.bc.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:b,padInfo:g}=c,y=g.front,O=g.left,x=g.top,w=new l.Pb(c.outShape,a.dtype),v=n.data.get(a.dataId).values,j=n.data.get(s.dataId).values,I=w.values,k=l.ee.computeStrides(a.shape),N=l.ee.computeStrides(s.shape);for(let l=0;l<c.batchSize;++l){const t=l*k[0],e=l*w.strides[0];for(let n=0;n<c.outDepth;++n){const r=e+n*w.strides[1],a=n*c.strideDepth-y;for(let e=0;e<d;++e){const n=a+e*f;if(n<0||n>=c.inDepth)continue;const s=e*N[0],i=t+n*k[1];for(let t=0;t<c.outHeight;++t){const e=r+t*w.strides[2],n=t*c.strideHeight-x;for(let t=0;t<h;++t){const r=n+t*m;if(r<0||r>=c.inHeight)continue;const a=s+t*N[1],o=i+r*k[2];for(let t=0;t<c.outWidth;++t){const n=e+t*c.outChannels,r=t*c.strideWidth-O;for(let t=0;t<p;++t){const e=r+t*b;if(e<0||e>=c.inWidth)continue;const s=a+t*N[2],i=o+e*c.inChannels;let u=s;for(let t=0;t<c.inChannels;++t){const e=v[i+t];for(let t=0;t<c.outChannels;++t)I[n+t]+=e*j[u+t];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const ac={kernelName:l.v,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,pad:o,filterShape:u}=r;Lo([a,s],"conv3dBackpropFilterV2");const c=l.ee.computeStrides(a.shape),d=l.ee.computeStrides(s.shape),h=l.bc.computeConv3DInfo(a.shape,u,i,1,o),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,b=h.filterDepth,g=h.filterHeight,y=h.filterWidth,O=new l.Pb(h.filterShape,"float32"),x=O.values,[w,v,j,I]=O.strides,k=n.data.get(s.dataId).values,[N,S,C,T]=d,A=n.data.get(a.dataId).values,[E,R,$,F]=c,D=h.padInfo.front,_=h.padInfo.left,M=h.padInfo.top;for(let l=0;l<b;++l){const t=Math.max(0,Math.ceil((D-l)/p)),e=Math.min(h.outDepth,(h.inDepth+D-l)/p),n=l*w;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/f)),s=Math.min(h.outHeight,(h.inHeight+M-r)/f),i=r*v+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((_-n)/m)),u=Math.min(h.outWidth,(h.inWidth+_-n)/m),c=n*j+i;for(let i=0;i<h.inChannels;++i){const d=i*I+c;for(let c=0;c<h.outChannels;++c){let b=0;for(let d=0;d<h.batchSize;++d){const h=d*E,g=d*N;for(let d=t;d<e;++d){const t=(l+d*p-D)*R+h,e=d*S+g;for(let l=a;l<s;++l){const a=(r+l*f-M)*$+t,s=l*C+e;for(let t=o;t<u;++t){const e=t*T+s;b+=A[(n+t*m-_)*F+a+i]*k[e+c]}}}}x[d+c]=b}}}}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}};const sc={kernelName:l.w,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{pad:i,strides:o,inputShape:u}=r;Lo([a],"conv3dBackpropInputV2");const c=l.ee.computeStrides(a.shape),d=l.ee.computeStrides(s.shape),h=l.bc.computeConv3DInfo(u,s.shape,o,1,i),p=new l.Pb(h.inShape,"float32"),f=p.values,[m,b,g,y]=p.strides,O=n.data.get(a.dataId).values,[x,w,v,j]=c,I=n.data.get(s.dataId).values,[k,N,S,C]=d,{batchSize:T,filterDepth:A,filterHeight:E,filterWidth:R,inChannels:$,inDepth:F,inHeight:D,inWidth:_,outChannels:M,outDepth:z,outHeight:L,outWidth:B,strideDepth:P,strideHeight:V,strideWidth:W}=h,U=A-1-h.padInfo.front,K=E-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let l=0;l<T;++l)for(let t=0;t<$;++t)for(let e=0;e<F;++e){const n=e-U,r=Math.max(0,Math.ceil(n/P)),a=Math.min(z,(A+n)/P);for(let s=0;s<D;++s){const i=s-K,o=Math.max(0,Math.ceil(i/V)),u=Math.min(L,(E+i)/V);for(let c=0;c<_;++c){const d=c-H,h=Math.max(0,Math.ceil(d/W)),p=Math.min(B,(R+d)/W);let T=0;for(let e=r;e<a;++e){const r=e*P-n;for(let n=o;n<u;++n){const a=n*V-i;for(let s=h;s<p;++s){const i=x*l+w*e+v*n+j*s,o=k*(A-1-r)+N*(E-1-a)+S*(R-1-(s*W-d))+C*t;for(let t=0;t<M;++t){T+=O[i+t]*I[o+t]}}}}f[m*l+b*e+g*s+y*c+t]=T}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},ic=Ho(l.x,t=>Math.cos(t)),oc={kernelName:l.x,backendName:"cpu",kernelFunc:ic},uc=Ho(l.y,t=>Math.cosh(t)),cc={kernelName:l.y,backendName:"cpu",kernelFunc:uc};function lc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;Lo([a,s],"depthwiseConv2DNative");const d=l.ee.computeStrides(a.shape),h=l.ee.computeStrides(s.shape);let p=u;null==p&&(p=[1,1]),l.ee.assert(l.bc.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);const f=l.bc.computeConv2DInfo(a.shape,s.shape,i,p,o,c,!0),{filterHeight:m,filterWidth:b,dilationHeight:g,dilationWidth:y,padInfo:O}=f,x=O.left,w=O.top,v=f.outChannels/f.inChannels,j=new l.Pb(f.outShape,a.dtype),I=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,N=j.values;for(let l=0;l<f.batchSize;++l){const t=l*d[0],e=l*j.strides[0];for(let n=0;n<f.outHeight;++n){const r=e+n*j.strides[1],a=n*f.strideHeight-x;for(let e=0;e<m;++e){const n=a+e*g;if(n<0||n>=f.inHeight)continue;const s=e*h[0],i=t+n*d[1];for(let t=0;t<f.outWidth;++t){const e=r+t*j.strides[2],n=t*f.strideWidth-w;for(let t=0;t<b;++t){const r=n+t*y;if(r<0||r>=f.inWidth)continue;const a=s+t*h[1],o=i+r*f.inChannels;let u=e,c=a;for(let t=0;t<f.inChannels;++t){const e=I[o+t];for(let t=0;t<v;++t)N[u+t]+=e*k[c+t];u+=v,c+=v}}}}}}return n.makeTensorInfo(j.shape,j.dtype,j.values)}const dc={kernelName:l.A,backendName:"cpu",kernelFunc:lc};const hc={kernelName:l.B,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:d}=r;Lo([a,s],"depthwiseConv2dNativeBackpropFilter");const h=l.bc.computeConv2DInfo(a.shape,d,i,o,u,c,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:b}=h,g=new l.Pb(h.filterShape,"float32"),y=h.padInfo.left,O=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(a.dataId).values,v=new l.Pb(a.shape,a.dtype,w),j=n.data.get(s.dataId).values,I=new l.Pb(s.shape,s.dtype,j);for(let l=0;l<m;++l){const t=Math.max(0,Math.ceil((O-l)/p)),e=Math.min(h.outHeight,(h.inHeight+O-l)/p);for(let n=0;n<b;++n){const r=Math.max(0,Math.ceil((y-n)/f)),a=Math.min(h.outWidth,(h.inWidth+y-n)/f);for(let s=0;s<h.outChannels;++s){const i=Math.trunc(s/x),o=s%x;let u=0;for(let c=0;c<h.batchSize;++c)for(let o=t;o<e;++o){const t=l+o*p-O;for(let e=r;e<a;++e){const r=n+e*f-y;u+=v.get(c,t,r,i)*I.get(c,o,e,s)}}g.set(u,l,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const pc={kernelName:l.C,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:d}=r;Lo([a,s],"depthwiseConv2DNativeBackpropInput");const h=l.ee.computeStrides(a.shape),p=l.ee.computeStrides(s.shape),f=l.bc.computeConv2DInfo(d,s.shape,i,o,u,c,!0),m=new l.Pb(f.inShape,"float32"),b=m.values,[g,y,O]=m.strides,x=n.data.get(a.dataId).values,[w,v,j]=h,I=n.data.get(s.dataId).values,[k,N,S]=p,{batchSize:C,filterHeight:T,filterWidth:A,inChannels:E,inHeight:R,inWidth:$,outChannels:F,outHeight:D,outWidth:_,strideHeight:M,strideWidth:z}=f,L=T-1-f.padInfo.top,B=A-1-f.padInfo.left,P=F/E;for(let l=0;l<C;++l)for(let t=0;t<E;++t)for(let e=0;e<R;++e){const n=e-L,r=Math.max(0,Math.ceil(n/M)),a=Math.min(D,(T+n)/M);for(let s=0;s<$;++s){const i=s-B,o=Math.max(0,Math.ceil(i/z)),u=Math.min(_,(A+i)/z);let c=0;for(let e=r;e<a;++e){const r=e*M-n;for(let n=o;n<u;++n){const a=w*l+v*e+j*n,s=k*(T-1-r)+N*(A-1-(n*z-i))+S*t;for(let e=0;e<P;++e){c+=x[a+(t*P+e)]*I[s+e]}}}b[g*l+y*e+O*s+t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},fc={kernelName:l.D,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:a}=t,{strides:s,pad:i,dilations:o}=n,u=e,c=u.data.get(r.dataId).values,d=r.shape.length,h=u.data.get(a.dataId).values,p=a.shape.length,{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:O,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:j,filterWidth:I,dilationHeight:k,dilationWidth:N,outShape:S}=l.bc.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),C=l.ee.sizeFromShape(S),T=S.length,A=l.ee.getArrayFromDType(r.dtype,C);for(let E=0;E<f;++E)for(let t=0;t<y;++t){const e=t*w-x.top;for(let n=0;n<O;++n){const s=n*v-x.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER;for(let t=0;t<j;++t){const n=e+t*k;if(n>=0&&n<m)for(let e=0;e<I;++e){const u=s+e*N;if(u>=0&&u<b){const s=l.ee.locToIndex([E,n,u,i],d,l.ee.computeStrides(r.shape)),f=l.ee.locToIndex([t,e,i],p,l.ee.computeStrides(a.shape)),m=c[s]+h[f];m>o&&(o=m)}}}A[l.ee.locToIndex([E,t,n,i],T,l.ee.computeStrides(S))]=o}}}return{dataId:u.write(l.ee.toTypedArray(A,r.dtype),S,r.dtype),shape:S,dtype:r.dtype}}},mc={kernelName:l.E,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:a,dy:s}=t,{strides:i,pad:o,dilations:u}=n,c=e,d=l.ee.toNestedArray(r.shape,c.data.get(r.dataId).values),h=l.ee.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:O,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:j,dilationHeight:I,dilationWidth:k,outShape:N}=l.bc.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);l.ee.assert(s.rank===N.length,()=>`Error in ${l.E}, dy must have the same rank as output ${N.length}, but got `+s.rank);const S=l.ee.toNestedArray(N,c.data.get(s.dataId).values),C=l.ee.makeZerosNestedTypedArray(a.shape,a.dtype);for(let l=0;l<p;++l)for(let t=0;t<g;++t){const e=t*x-O.top;for(let n=0;n<y;++n){const r=n*w-O.left;for(let a=0;a<b;++a){let s=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let t=0;t<v;++t){const n=e+t*I;if(n>=0&&n<f)for(let e=0;e<j;++e){const u=r+e*k;if(u>=0&&u<m){const r=d[l][n][u][a]+h[t][e][a];r>s&&(s=r,i=t,o=e)}}}C[i][o][a]+=S[l][t][n][a]}}}return{dataId:c.write(l.ee.toTypedArray(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},bc={kernelName:l.F,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:a,dy:s}=t,{strides:i,pad:o,dilations:u}=n,c=e,d=l.ee.toNestedArray(r.shape,c.data.get(r.dataId).values),h=l.ee.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:O,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:j,dilationHeight:I,dilationWidth:k,outShape:N}=l.bc.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);l.ee.assert(s.rank===N.length,()=>`Error in ${l.F}, dy must have the same rank as output ${N.length}, but got `+s.rank);const S=l.ee.toNestedArray(N,c.data.get(s.dataId).values),C=l.ee.makeZerosNestedTypedArray(r.shape,r.dtype);for(let l=0;l<p;++l)for(let t=0;t<g;++t){const e=t*x-O.top;for(let n=0;n<y;++n){const r=n*w-O.left;for(let a=0;a<b;++a){let s=Number.MIN_SAFE_INTEGER,i=e<0?0:e,o=r<0?0:r;for(let t=0;t<v;++t){const n=e+t*I;if(n>=0&&n<f)for(let e=0;e<j;++e){const u=r+e*k;if(u>=0&&u<m){const r=d[l][n][u][a]+h[t][e][a];r>s&&(s=r,i=n,o=u)}}}C[l][i][o][a]+=S[l][t][n][a]}}}return{dataId:c.write(l.ee.toTypedArray(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},gc=Zo((t,e)=>t/e),yc=pu(l.G,gc),Oc={kernelName:l.G,backendName:"cpu",kernelFunc:yc},xc=l.bc.ERF_P,wc=l.bc.ERF_A1,vc=l.bc.ERF_A2,jc=l.bc.ERF_A3,Ic=l.bc.ERF_A4,kc=l.bc.ERF_A5,Nc=Ho(l.I,t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+xc*n);return e*(1-((((kc*r+Ic)*r+jc)*r+vc)*r+wc)*r*Math.exp(-n*n))}),Sc={kernelName:l.I,backendName:"cpu",kernelFunc:Nc},Cc=Wu(t=>Math.exp(t)),Tc=Go(l.J,Cc),Ac={kernelName:l.J,backendName:"cpu",kernelFunc:Tc},Ec=Wu(t=>Math.expm1(t)),Rc=Go(l.K,Ec),$c={kernelName:l.K,backendName:"cpu",kernelFunc:Rc},Fc=Zo((t,e)=>t*e),Dc=fu((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})),_c=pu(l.jb,Fc,Dc),Mc={kernelName:l.jb,backendName:"cpu",kernelFunc:_c};function zc(t,e,n,r,a){const s=l.Hd.isSliceContinous(r,e,n),i=l.ee.sizeFromShape(n),o=l.ee.computeStrides(r);if(s){const n=l.Hd.computeFlatOffset(e,o);return t.subarray(n,n+i)}const u=l.ee.getTypedArrayFromDType(a,i);for(let c=0;c<i;++c){const a=n.length,s=l.ee.computeStrides(n),i=l.ee.indexToLoc(c,a,s).map((t,n)=>t+e[n]),d=l.ee.locToIndex(i,r.length,o);u[c]=t[d]}return u}function Lc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{begin:s,size:i}=r;Lo(a,"slice");const[o,u]=l.Hd.parseSliceParams(a,s,i);l.Hd.assertParamsValid(a,o,u);const c=zc(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,c)}const Bc={kernelName:l.Eb,backendName:"cpu",kernelFunc:Lc},Pc=Zo((t,e)=>t-e),Vc=fu((t,e,n,r)=>({real:t-n,imag:e-r})),Wc=pu(l.Lb,Pc,Vc),Uc={kernelName:l.Lb,backendName:"cpu",kernelFunc:Wc};function Kc(t,e,n){const r=t.shape,a=r[0],s=r[1],i=n.data.get(t.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,c=[a,s],d=l.ee.sizeFromShape(c),h=l.ee.getTypedArrayFromDType("float32",d),p=l.ee.getTypedArrayFromDType("float32",d);for(let g=0;g<a;g++){const t=Lc({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=Lc({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=ou({inputs:{real:t,imag:r},backend:n}),{real:i,imag:c}=Hc(a,e,n),d=l.bc.mergeRealAndImagArrays(i,c);for(let e=0;e<s;e++){const t=l.bc.getComplexWithIndex(d,e);h[g*s+e]=t.real,p[g*s+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}const f=n.makeTensorInfo(c,"float32",h),m=n.makeTensorInfo(c,"float32",p),b=ou({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function Hc(t,e,n){const r=l.ee.sizeFromShape(t.shape),a=n.data.get(t.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0===((o=r)&o-1)){const a=function t(e,n,r,a,s){if(1===r)return{real:e,imag:n};const i=l.bc.mergeRealAndImagArrays(e,n),o=r/2,u=l.bc.complexWithEvenIndex(i),c=u.real,d=u.imag,h=[c.length],p=s.makeTensorInfo(h,"float32",c),f=s.makeTensorInfo(h,"float32",d),m=ou({inputs:{real:p,imag:f},backend:s}),b=l.bc.complexWithOddIndex(i),g=b.real,y=b.imag,O=[g.length],x=s.makeTensorInfo(O,"float32",g),w=s.makeTensorInfo(O,"float32",y),v=ou({inputs:{real:x,imag:w},backend:s}),j=t(c,d,o,a,s),I=j.real,k=j.imag,N=[I.length],S=s.makeTensorInfo(N,"float32",I),C=s.makeTensorInfo(N,"float32",k),T=ou({inputs:{real:S,imag:C},backend:s}),A=t(g,y,o,a,s),E=A.real,R=A.imag,$=[E.length],F=s.makeTensorInfo($,"float32",E),D=s.makeTensorInfo($,"float32",R),_=ou({inputs:{real:F,imag:D},backend:s}),M=l.bc.exponents(r,a),z=[M.real.length],L=s.makeTensorInfo(z,"float32",M.real),B=s.makeTensorInfo(z,"float32",M.imag),P=ou({inputs:{real:L,imag:B},backend:s}),V=_c({inputs:{a:P,b:_},backend:s}),W=gu({inputs:{a:T,b:V},backend:s}),U=Wc({inputs:{a:T,b:V},backend:s}),K=cu({inputs:{input:W},backend:s}),H=cu({inputs:{input:U},backend:s}),G=qu({inputs:{input:W},backend:s}),X=qu({inputs:{input:U},backend:s}),q=Ju({inputs:[K,H],backend:s,attrs:{axis:0}}),Y=Ju({inputs:[G,X],backend:s,attrs:{axis:0}}),J=s.data.get(q.dataId).values,Z=s.data.get(Y.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(Y),{real:J,imag:Z}}(s,i,r,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",a.real),e=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",l.ee.createScalarValue(r,"float32")),i=Yo({inputs:{x:s},backend:n}),u=Oc.kernelFunc({inputs:{a:t,b:s},backend:n}),c=Oc.kernelFunc({inputs:{a:e,b:i},backend:n}),d=n.data.get(u.dataId).values,h=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:d,imag:h}}return a}{const t=function(t,e,n){const r=new Float32Array(2*e);for(let a=0;a<e;a++){let s=0,i=0;for(let r=0;r<e;r++){const o=l.bc.exponent(a*r,e,n),u=l.bc.getComplexWithIndex(t,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=e,i/=e),l.bc.assignToTypedArray(r,s,i,a)}return r}(l.bc.mergeRealAndImagArrays(s,i),r,e);return l.bc.splitRealAndImagArrays(t)}var o}const Gc={kernelName:l.L,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,a=l.ee.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=Ou({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Kc(i,!1,n),u=Ou({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};const Xc={kernelName:l.M,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{shape:r,value:a,dtype:s}=n,i=s||l.ee.inferDtype(a),o=l.ee.getArrayFromDType(i,l.ee.sizeFromShape(r));return function(t,e,n){t.fill(e)}(o,a),e.makeTensorInfo(r,i,o)}};const qc={kernelName:l.N,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,a=n,s=l.ee.getTypedArrayFromDType(r.dtype,l.ee.sizeFromShape(r.shape)),[i,o,u,c]=r.shape,d=a.data.get(r.dataId).values;for(let l=0;l<i;l++){const t=l*u*o*c;for(let e=0;e<o;e++){const n=e*(u*c);for(let r=0;r<u;r++){const a=r*c;for(let o=0;o<c;o++){const l=[i,e,r,o][2],h=Math.round(u-l),p=t+n+a+o;let f=d[p];if(h>=0&&h<u){f=d[t+n+h*c+o]}s[p]=f}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Yc=Wu(t=>Math.floor(t)),Jc=Go(l.O,Yc),Zc={kernelName:l.O,backendName:"cpu",kernelFunc:Jc};const Qc={kernelName:l.R,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:o}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p}=r;let f=Qu({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const t=f;f=gu({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=f;f=iu(n,f,p,o),n.disposeIntermediateTensorInfo(t)}return f}};const tl={kernelName:l.S,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:o}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p}=r;let f=lc({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const t=f;f=gu({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=f;f=iu(n,f,p,o),n.disposeIntermediateTensorInfo(t)}return f}};const el={kernelName:l.T,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,a=l.ee.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=Ou({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Kc(i,!0,n),u=Ou({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},nl=Ho(l.W,t=>Number.isFinite(t)?1:0,"bool"),rl={kernelName:l.W,backendName:"cpu",kernelFunc:nl},al=Ho(l.X,t=>Math.abs(t)===1/0?1:0,"bool"),sl={kernelName:l.X,backendName:"cpu",kernelFunc:al},il=Ho(l.Y,t=>Number.isNaN(t)?1:0,"bool"),ol={kernelName:l.Y,backendName:"cpu",kernelFunc:il},ul=Wu(t=>Math.log(t)),cl=Go(l.ab,ul),ll={kernelName:l.ab,backendName:"cpu",kernelFunc:cl},dl=Ho(l.bb,t=>Math.log1p(t)),hl={kernelName:l.bb,backendName:"cpu",kernelFunc:dl},pl=Ho(l.cb,t=>t?0:1,"bool"),fl={kernelName:l.cb,backendName:"cpu",kernelFunc:pl};function ml(t,e,n,r){const a=l.ee.getTypedArrayFromDType(r,l.ee.sizeFromShape(n));for(let s=0;s<a.length;++s){const n=s*e;let r=t[n];for(let a=0;a<e;++a){const e=t[n+a];e>r&&(r=e)}a[s]=r}return a}function bl(t,e,n,r,a){const s=e.length,i=l.ee.sizeFromShape(e),o=l.ee.computeStrides(e),u=l.ee.computeStrides(a),c=l.ee.getTypedArrayFromDType(n,l.ee.sizeFromShape(a));for(let d=0;d<i;++d){const e=l.ee.indexToLoc(d,s,o),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];c[l.ee.locToIndex(n,s,u)]=t[d]}return c}const gl={kernelName:l.db,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:a,keepDims:s}=e,i=n;let o=r.shape;const u=o.length,c=l.ee.parseAxisParam(a,o);let d=c;const h=l.bc.getAxesPermutation(d,u);let p=i.data.get(r.dataId).values;if(null!=h){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=o[h[e]];p=bl(p,o,r.dtype,h,t),d=l.bc.getInnerMostAxes(d.length,u),o=t}Lo(r,"max"),l.bc.assertAxesAreInnerMostDims("max",d,u);const[f,m]=l.bc.computeOutAndReduceShapes(o,d),b=ml(p,l.ee.sizeFromShape(m),f,r.dtype),g=i.write(b,f,r.dtype);let y=f;if(s){y=l.bc.expandShapeToKeepDim(f,c)}return{dataId:g,shape:y,dtype:r.dtype}}};const yl={kernelName:l.eb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;Lo(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;l.ee.assert(l.bc.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=l.bc.computePool2DInfo(a.shape,s,i,1,o,u);let d;if(1===c.filterWidth&&1===c.filterHeight&&l.ee.arraysEqual(c.inShape,c.outShape))d=Yo({inputs:{x:a},backend:n});else{const t=n.data.get(a.dataId).values,e=l.ee.computeStrides(a.shape),r=zu(t,a.shape,a.dtype,e,c,"max");d=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return d}};const Ol={kernelName:l.fb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s,output:i}=e,o=s;Lo([s,i],"maxPoolBackprop");const{filterSize:u,strides:c,pad:d,dimRoundingMode:h}=r,p=l.bc.computePool2DInfo(o.shape,u,c,1,d,h),f=n.data.get(o.dataId).values,m=Object(l.gc)(p.outShape,o.dtype,Lu(f,o.shape,o.dtype,p).values),b=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,O=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,j=x-1-p.padInfo.top,I=Object(l.gc)(o.shape,"float32"),k=n.data.get(a.dataId).values,N=Object(l.gc)(a.shape,"float32",k);for(let l=0;l<p.batchSize;++l)for(let t=0;t<p.inChannels;++t)for(let e=0;e<p.inHeight;++e)for(let n=0;n<p.inWidth;++n){const r=e-j,a=n-v;let s=0;for(let e=0;e<x;e+=y){const n=(r+e)/b;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=O){const i=(a+r)/g;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const o=x*w-1-m.get(l,n,i,t)===e*w+r?1:0;if(0===o)continue;s+=N.get(l,n,i,t)*o}}I.set(s,l,e,n,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const xl={kernelName:l.gb,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=e,u=n;Lo(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,d=l.bc.computePool2DInfo(r.shape,a,s,[1,1],i),[h,p]=function(t,e,n,r,a){const s=zu(t,0,n,l.ee.computeStrides(e),a,"max"),i=Lu(t,e,n,a,!0,r);return[s.values,i.values]}(c,r.shape,r.dtype,o,d),f=u.write(h,d.outShape,r.dtype),m=u.write(p,d.outShape,r.dtype);return[{dataId:f,shape:d.outShape,dtype:r.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}};const wl={kernelName:l.ib,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{paddings:s,mode:i}=r;Lo(a,"mirrorPad");const o=s.map((t,e)=>t[0]+a.shape[e]+t[1]),u=s.map(t=>t[0]),c=s.map((t,e)=>t[0]+a.shape[e]),d="reflect"===i?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,f=l.ee.computeStrides(a.shape),m=l.ee.sizeFromShape(o),b=o.length,g=l.ee.computeStrides(o),y=l.ee.getTypedArrayFromDType(a.dtype,m);for(let O=0;O<m;O++){let t=l.ee.indexToLoc(O,b,g);for(let n=0;n<b;n++)t[n]<u[n]?t[n]=2*u[n]-t[n]-d:t[n]>=c[n]&&(t[n]=2*(c[n]-1)-t[n]+d);t=t.map((t,e)=>t-u[e]);const e=l.ee.locToIndex(t,p,f);y[O]=h[e]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},vl=l.Oc.nonMaxSuppressionV4Impl,jl={kernelName:l.lb,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,c=e;Lo(r,"NonMaxSuppressionPadded");const l=c.data.get(r.dataId).values,d=c.data.get(a.dataId).values,{selectedIndices:h,validOutputs:p}=vl(l,d,s,i,o,u);return[h,p]}},Il=l.Oc.nonMaxSuppressionV5Impl,kl={kernelName:l.mb,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,c=e;Lo(r,"NonMaxSuppressionWithScore");const l=c.data.get(r.dataId).values,d=c.data.get(a.dataId).values,h=s,p=i,f=o,m=u,{selectedIndices:b,selectedScores:g}=Il(l,d,h,p,f,m);return[b,g]}},Nl=Zo((t,e)=>t!==e?1:0),Sl=pu(l.nb,Nl,null,"bool"),Cl={kernelName:l.nb,backendName:"cpu",kernelFunc:Sl};const Tl={kernelName:l.pb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{paddings:s,constantValue:i}=r;Lo(a,"pad");const o=s.map((t,e)=>t[0]+a.shape[e]+t[1]),u=s.map(t=>t[0]),c=n.data.get(a.dataId).values,d=l.ee.sizeFromShape(a.shape),h=a.shape.length,p=l.ee.computeStrides(a.shape),f=l.ee.sizeFromShape(o),m=o.length,b=l.ee.computeStrides(o),g=l.ee.getTypedArrayFromDType(a.dtype,f);0!==i&&g.fill(i);for(let y=0;y<d;y++){const t=l.ee.indexToLoc(y,h,p).map((t,e)=>t+u[e]);g[l.ee.locToIndex(t,m,b)]=c[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},Al=Ho(l.sb,t=>1/t),El={kernelName:l.sb,backendName:"cpu",kernelFunc:Al},Rl={kernelName:l.wb,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:a,fillValue:s,center:i}=e,o=n,u=l.ee.getTypedArrayFromDType(r.dtype,l.ee.sizeFromShape(r.shape)),[c,d,h,p]=r.shape,[f,m]=l.bc.getImageCenter(i,d,h),b=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let l=0;l<c;l++){const t=l*h*d*p;for(let e=0;e<d;e++){const n=e*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let i=0;i<p;i++){const o=[c,e,r,i],l=o[2],O=o[1];let x=(l-f)*g-(O-m)*b,w=(l-f)*b+(O-m)*g;x=Math.round(x+f),w=Math.round(w+m);let v=s;if("number"!==typeof s&&(v=3===i?255:s[i]),x>=0&&x<h&&w>=0&&w<d){v=y[t+w*(h*p)+x*p+i]}u[t+n+a+i]=v}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},$l=Ho(l.xb,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),Fl={kernelName:l.xb,backendName:"cpu",kernelFunc:$l},Dl=Wu(t=>1/Math.sqrt(t)),_l=Go(l.yb,Dl),Ml={kernelName:l.yb,backendName:"cpu",kernelFunc:_l},zl=l.bc.SELU_SCALEALPHA,Ll=l.bc.SELU_SCALE,Bl=Ho(l.zb,t=>t>=0?Ll*t:zl*(Math.exp(t)-1)),Pl={kernelName:l.zb,backendName:"cpu",kernelFunc:Bl},Vl=Ho(l.Ab,t=>1/(1+Math.exp(-t))),Wl={kernelName:l.Ab,backendName:"cpu",kernelFunc:Vl},Ul=Ho(l.Bb,t=>t<0?-1:t>0?1:0),Kl={kernelName:l.Bb,backendName:"cpu",kernelFunc:Ul},Hl=Ho(l.Cb,t=>Math.sin(t)),Gl={kernelName:l.Cb,backendName:"cpu",kernelFunc:Hl},Xl=Ho(l.Db,t=>Math.sinh(t)),ql={kernelName:l.Db,backendName:"cpu",kernelFunc:Xl},Yl=Math.log(1.1920928955078125e-7)+2,Jl=Ho(l.Fb,t=>{const e=t>-Yl,n=t<Yl,r=Math.exp(t);let a;return a=n?r:e?t:Math.log(1+r),a}),Zl={kernelName:l.Fb,backendName:"cpu",kernelFunc:Jl};function Ql(t){const{inputs:e,attrs:n,backend:r}=t,{x:a}=e,{perm:s}=n;Lo(a,"transpose");const i=a.shape.length,o=new Array(i);for(let c=0;c<o.length;c++)o[c]=a.shape[s[c]];const u=bl(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const td={kernelName:l.Qb,backendName:"cpu",kernelFunc:Ql};const ed={kernelName:l.Gb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockShape:s,paddings:i}=r;Lo([a],"spaceToBatchND");const o=l.ee.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let l=1+s.length;l<a.shape.length;++l)u.push([0,0]);const c=Tl.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=l.bc.getReshaped(c.shape,s,o,!1),h=l.bc.getPermuted(d.length,s.length,!1),p=l.bc.getReshapedPermuted(c.shape,s,o,!1),f=Ou({inputs:{x:c},backend:n,attrs:{shape:d}}),m=Ql({inputs:{x:f},backend:n,attrs:{perm:h}}),b=Ou({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}},nd=Ho(l.Hb,t=>Math.sqrt(t)),rd={kernelName:l.Hb,backendName:"cpu",kernelFunc:nd},ad={kernelName:l.Ib,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;Lo(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){const t=a[i];s[i]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},sd=Zo((t,e)=>{const n=t-e;return n*n}),id=pu(l.Jb,sd),od={kernelName:l.Jb,backendName:"cpu",kernelFunc:id},ud=Ho(l.Kb,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),cd={kernelName:l.Kb,backendName:"cpu",kernelFunc:ud},ld=Ho(l.Mb,t=>Math.tan(t)),dd={kernelName:l.Mb,backendName:"cpu",kernelFunc:ld},hd=Ho(l.Nb,t=>Math.tanh(t)),pd={kernelName:l.Nb,backendName:"cpu",kernelFunc:hd};function fd(t,e,n,r){const a=l.ee.parseAxisParam(e,n)[0],s=[1,n[0],1];for(let l=0;l<a;l++)s[0]*=n[l];s[1]=n[a];for(let l=a+1;l<n.length;l++)s[2]*=n[l];const i={},o=new Int32Array(n[a]),u=new l.Pb(s,r,t),c=[],d=1===s[0]&&1===s[2];for(let l=0;l<n[a];l++){let e;if(d)e=t[l].toString();else{const t=[];for(let e=0;e<s[0];e++)for(let n=0;n<s[2];n++)t.push(u.get(e,l,n));e=t.join(",")}if(void 0!==i[e])o[l]=i[e];else{const t=Object.keys(i).length;i[e]=t,o[l]=t,c.push(l)}}const h=s.slice();h[1]=Object.keys(i).length;const p=new l.Pb(h,r);c.forEach((t,e)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(u.get(n,t,r),n,e,r)});const f=n.slice();return f[a]=h[1],{outputValues:p.values,outputShape:f,indices:o}}const md={kernelName:l.Rb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:s}=e;Lo(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:c}=fd(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}},bd=[ju,ku,Su,Tu,yu,Eu,$u,Du,Mu,Bu,Pu,vu,Vu,hu,Hu,Xu,uu,Zu,ec,nc,tc,ac,sc,rc,oc,cc,dc,hc,pc,fc,bc,mc,Oc,qo,Sc,Ac,$c,Gc,Xc,qc,Zc,Qc,tl,Jo,el,Yu,rl,sl,ol,ll,hl,fl,yl,Ol,xl,gl,wl,Mc,jl,kl,Cl,Tl,eu,lu,El,ru,su,xu,Rl,Fl,Ml,Pl,Wl,Kl,Gl,ql,Bc,Zl,ed,rd,ad,od,cd,Uc,dd,pd,td,md];for(const Ob of bd)Object(l.sd)(Ob);const gd={},yd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Od(t){if(!(t in gd)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!==typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete gd[t]},!1),1===t)return e.getContext("webgl",yd)||e.getContext("experimental-webgl",yd);return e.getContext("webgl2",yd)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;gd[t]=e}const e=gd[t];return e.isContextLost()?(delete gd[t],Od(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),gd[t])}var xd,wd,vd;function jd(t,e){return[e,t]}function Id(t){const e=l.ee.sizeFromShape(t),n=Math.ceil(e/4);return l.ee.sizeToSquarishShape(n)}function kd(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Nd(t,e){const n=t;let r,a,s,i,o,u,c,d,h,p;return 2===Object(l.Ac)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,a=t.RGBA,s=t.RGBA,i=n.RGBA,o=t.RGBA,c=4,d=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),u=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function Sd(t,e){const n=e();return Object(l.Ac)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(xd||(xd={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(wd||(wd={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(vd||(vd={}));function Cd(t){return!!(Object(l.Ac)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function Td(t,e){return zd(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Ad(t,e){const n=zd(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Sd(t,()=>t.shaderSource(n,e)),Sd(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=Ed.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const r=+n[1],a=t.split("\n"),s=a.length.toString().length+2,i=a.map((t,e)=>l.ee.rightPad((e+1).toString(),s)+t);let o=0;for(let l=0;l<i.length;l++)o=Math.max(i[l].length,o);const u=i.slice(0,r-1),c=i.slice(r-1,r),d=i.slice(r);console.log(u.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+l.ee.rightPad(c[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Ed=/ERROR: [0-9]+:([0-9]+):/g;function Rd(t,e){if(Sd(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function $d(t,e,n,r,a,s,i){const o=t.getAttribLocation(e,n);return-1!==o&&(Sd(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),Sd(t,()=>t.vertexAttribPointer(o,a,t.FLOAT,!1,s,i)),Sd(t,()=>t.enableVertexAttribArray(o)),!0)}function Fd(t,e,n,r){Sd(t,()=>function(t,e,n){Ld(t,n),Sd(t,()=>t.activeTexture(t.TEXTURE0+n)),Sd(t,()=>t.bindTexture(t.TEXTURE_2D,e))}(t,e,r)),Sd(t,()=>t.uniform1i(n,r))}function Dd(t,e,n){Sd(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),Sd(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function _d(t,e){Sd(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),Sd(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Md(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}(t,e))}function zd(t,e,n){const r=Sd(t,()=>e());if(null==r)throw new Error(n);return r}function Ld(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function Bd(t,e=2){return l.ee.sizeFromShape(t.slice(0,t.length-e))}function Pd(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Vd(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Bd(t),...Pd(t)]),e}function Wd(t){return t%2===0}function Ud(t,e){if(t=t.slice(-2),e=e.slice(-2),l.ee.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(Wd(n)&&Wd(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Wd(t[0])&&Wd(e[0])}let Kd,Hd;function Gd(t,e){return null!=t.getExtension(e)}function Xd(t){try{if(null!=Od(t))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function qd(t){if(0===t)return!1;const e=Od(t);if(1!==t){if(Gd(e,"EXT_color_buffer_float"))return Yd(e);const t="EXT_color_buffer_half_float";if(Gd(e,t)){const n=e.getExtension(t);return function(t,e){const n=Nd(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);const a=1,s=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(i),o}(e,n)}return!1}if(!Gd(e,"OES_texture_float"))return!1;if(!Gd(e,"WEBGL_color_buffer_float"))return!1;return Yd(e)}function Yd(t){const e=Nd(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),a}function Jd(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&l.ee.assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the WebGL backend.")})}const Zd=Object(l.Ac)();Zd.registerFlag("HAS_WEBGL",()=>Zd.getNumber("WEBGL_VERSION")>0),Zd.registerFlag("WEBGL_VERSION",()=>Xd(2)?2:Xd(1)?1:0),Zd.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Zd.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Zd.get("WEBGL_VERSION")),Zd.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Zd.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Zd.registerFlag("WEBGL_PACK",()=>Zd.getBool("HAS_WEBGL")),Zd.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Zd.getBool("WEBGL_PACK")),Zd.registerFlag("WEBGL_PACK_CLIP",()=>Zd.getBool("WEBGL_PACK")),Zd.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),Zd.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Zd.getBool("WEBGL_PACK")),Zd.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Zd.getBool("WEBGL_PACK")),Zd.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Zd.getBool("WEBGL_PACK")),Zd.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Zd.getBool("WEBGL_PACK")),Zd.registerFlag("WEBGL_PACK_REDUCE",()=>Zd.getBool("WEBGL_PACK")),Zd.registerFlag("WEBGL_LAZILY_UNPACK",()=>Zd.getBool("WEBGL_PACK")),Zd.registerFlag("WEBGL_CONV_IM2COL",()=>Zd.getBool("WEBGL_PACK")),Zd.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(t){if(null==Kd){const e=Od(t);Kd=e.getParameter(e.MAX_TEXTURE_SIZE)}return Kd}(Zd.getNumber("WEBGL_VERSION"))),Zd.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(t){if(null==Hd){const e=Od(t);Hd=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Hd)}(Zd.getNumber("WEBGL_VERSION"))),Zd.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=Zd.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=Od(t);return e=Gd(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Gd(n,"EXT_disjoint_timer_query")?1:0,e}(t)}),Zd.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Zd.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!l.uc.isMobile()),Zd.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(t){if(0===t)return!1;const e=Od(t);if(1===t){if(!Gd(e,"OES_texture_float"))return!1}else if(!Gd(e,"EXT_color_buffer_float"))return!1;return Yd(e)}(Zd.getNumber("WEBGL_VERSION"))),Zd.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Zd.getBool("WEBGL_FORCE_F16_TEXTURES")&&Zd.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Zd.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>qd(Zd.getNumber("WEBGL_VERSION"))),Zd.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=Zd.getNumber("WEBGL_VERSION"))&&null!=Od(t).fenceSync;var t}),Zd.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Zd.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Zd.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});const{simpleAbsImpl:Qd,addImpl:th,ceilImpl:eh,expImpl:nh,expm1Impl:rh,floorImpl:ah,logImpl:sh,maxImpl:ih,multiplyImpl:oh,rsqrtImpl:uh,sliceImpl:ch,subImpl:lh,transposeImpl:dh,uniqueImpl:hh}=r;class ph{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class fh{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class mh{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function bh(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function gh(t,e){return 1===e?[t]:bh(t,e)}function yh(){let t,e,n,r,a,s,i,o,u,c;return 2===Object(l.Ac)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function Oh(t,e,n="index"){const r=l.ee.computeStrides(e);return r.map((e,a)=>`${`int ${t[a]} = ${n} / ${e}`}; ${a===r.length-1?`int ${t[a+1]} = ${n} - ${t[a]} * ${e}`:`index -= ${t[a]} * ${e}`};`).join("")}function xh(t){const e=l.ee.computeStrides(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const wh="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:vh}=l.bc;function jh(t,e,n,r){const a=[];t.forEach(t=>{const e=l.ee.sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?a.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(a.push(`uniform sampler2D ${t.name};`),a.push(`uniform int offset${t.name};`))});const s=a.join("\n"),i=t.map(t=>function(t,e,n=!1){let r="";r+=n?kh(t):Ih(t);const a=t.shapeInfo.logicalShape,s=e.logicalShape;a.length<=s.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=vh(t.shapeInfo.logicalShape,e.logicalShape),u=$h(i),c=i-s;let d;const h=["x","y","z","w","u","v"];d=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map(t=>`coords.${h[t+c]} = 0;`).join("\n");let p="";p=i<2&&s>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+h[e+c]).join(", ");let f="return outputValue;";const m=1===l.ee.sizeFromShape(t.shapeInfo.logicalShape),b=1===l.ee.sizeFromShape(e.logicalShape);if(1!==s||m||b){if(m&&!b)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=s-2,e=s-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?f="return vec4(outputValue.x);":o.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${p});\n      ${f}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===u&&null==t.shapeInfo.flatOffset&&l.ee.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=$h(u),d=vh(t.shapeInfo.logicalShape,e.logicalShape),h=u-o;let p;const f=["x","y","z","w","u","v"];p=0===o?"":u<2&&d.length>=1?"coords = 0;":d.map(t=>`coords.${f[t+h]} = 0;`).join("\n");let m="";m=u<2&&o>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+f[e+h]).join(", ");return`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}(t,e));return r}(t,e,r)).join("\n"),o=e.texShape,u=yh(),c=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let d,h,p=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Nh}\n    ${Sh}\n    ${Ch}\n  `}(u);e.isPacked?(d=function(t,e){switch(t.length){case 0:return Ah();case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(l.ee.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),a=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),a=r*Math.ceil(t[t.length-2]/2);let s=a,i="",o="b, r, c";for(let u=2;u<t.length-1;u++)s*=t[t.length-u-1],i=`\n      int b${u} = index / ${s};\n      index -= b${u} * ${s};\n    `+i,o=`b${u}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(u)):(d=function(t,e){switch(t.length){case 0:return Ah();case 1:return function(t,e){if(1===e[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `;if(1===e[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e);case 2:return function(t,e){if(l.ee.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `;if(1===t[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===t[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=Oh(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=Oh(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=Oh(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=Oh(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(p+=Th);return[p,c,h,s,d,i,n].join("\n")}function Ih(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,a]=t.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[s,i]=t.shapeInfo.texShape,o=Eh(e);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${Rh(t)}\n      }\n    `;const r=t.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=Eh(e);if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape;if(null!=a&&l.ee.arraysEqual(e,a)){const t=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:i}=l.ee.squeezeShape(e),o=s;if(o.length<e.length){const e=["row","col"];return`\n      ${Ih(Fh(t,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${Dh(e,i)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${Rh(t)}\n      }\n    `;const u=a[0],c=a[1],d=Eh(n);if(1===c)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===u)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[1]*e[2],s=e[2],{newShape:i,keptDims:o}=l.ee.squeezeShape(e),u=i;if(u.length<e.length){const e=["row","col","depth"];return`\n        ${Ih(Fh(t,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Dh(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${Rh(t)}\n      }\n    `;const c=t.shapeInfo.texShape,d=c[0],h=c[1],p=t.shapeInfo.flatOffset;if(h===a&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${d}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===s&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const f=Eh(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[3],s=e[2]*a,i=e[1]*s,{newShape:o,keptDims:u}=l.ee.squeezeShape(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${Ih(Fh(t,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Dh(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${a}, 1)));\n        ${Rh(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Eh(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${f});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[4],s=e[3]*a,i=e[2]*s,o=e[1]*i,{newShape:u,keptDims:c}=l.ee.squeezeShape(e);if(u.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${Ih(Fh(t,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Dh(e,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${Rh(t)}\n      }\n    `;const d=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],f=h[1];if(f===o&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Eh(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=l.ee.squeezeShape(e);if(a.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Ih(Fh(t,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Dh(e,s)});\n      }\n    `}const i=e[5],o=e[4]*i,u=e[3]*o,c=e[2]*u,d=e[1]*c;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${c}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Rh(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const b=Eh(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${c} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${b};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function kh(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=yh();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=yh();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,s=a[0],i=a[1],o=yh();if(null!=a&&l.ee.arraysEqual(e,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(e[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===e[0]){const n=[1,2],a=["b","row","col"];return`\n        ${kh(Fh(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Dh(a,n)});\n        }\n      `}const i=s[0],o=s[1],u=Math.ceil(e[2]/2),c=u*Math.ceil(e[1]/2),l=yh();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${c}, ${u}, b, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],c=Math.ceil(e[n-1]/2);let l=c*Math.ceil(e[n-2]/2),d="int b, int row, int col",h=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let f=2;f<n-1;f++)d=`int b${f}, `+d,l*=e[n-f-1],h=`b${f} * ${l} + `+h;const p=yh();return`\n    vec4 ${a}(${d}) {\n      int index = ${h};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}(t)}}const Nh="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Sh="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ch="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Th="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Ah(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Eh(t){return"offset"+t}function Rh(t){const e=t.name,n=l.ee.sizeFromShape(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function $h(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Fh(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Dh(t,e){return e.map(e=>t[e]).join(", ")}class _h{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,l.ee.assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=t[t.length-1],s=Math.ceil(a/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=$h(o),c=gh("coords",o);let d,h;if(1===s){h=o+1;const t=$h(h);d=`\n        ${t} sourceLocR = ${t}(${c.join()}, 0);\n        ++${c[o-1]};\n        ${t} sourceLocG = ${t}(${c.join()}, 0);\n        ++${c[o-2]};\n        ${t} sourceLocA = ${t}(${c.join()}, 0);\n        --${c[o-1]};\n        ${t} sourceLocB = ${t}(${c.join()}, 0);\n        --${c[o-2]};`}else h=o,d=`\n        ${u} sourceLocR = coords;\n        ++${c[o-1]};\n        ${u} sourceLocG = coords;\n        ++${c[o-2]};\n        ${u} sourceLocA = coords;\n        --${c[o-1]};\n        ${u} sourceLocB = coords;\n        --${c[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(t=>"int "+t),b=gh("sourceLocR",h-1).concat("inIdx.r"),g=gh("sourceLocG",h-1).concat("inIdx.g"),y=gh("sourceLocB",h-1).concat("inIdx.b"),O=gh("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${O.join()})));`,v=`vec4(\n            getAChannel(${b.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${O.join()}) : 0.)`,j=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${j}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class Mh{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.top,l=u-1-t.padInfo.left,d=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zh{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=l-1-t.padInfo.front,f=d-1-t.padInfo.top,m=h-1-t.padInfo.left,b=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Lh="return (a < 0.) ? b * a : a;";class Bh{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=l.bc.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Ph="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class Vh{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=l.bc.assertAndGetBroadcastShape(e,n);const a=this.outputShape.length;let s="";if(r)if(0===a||1===l.ee.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(s=`\n          ${$h(a)} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=gh("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${t[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${t[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}class Wh{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Uh{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Kh{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class Hh{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,s="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Gh{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Xh{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.padInfo.front,s=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${a};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qh{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,u=n-1-t.padInfo.top,c=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Yh{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Jh{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Zh{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.padInfo.top,s=t.padInfo.left,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterHeight,d=t.filterWidth,h=4*Math.floor(t.inChannels/4),p=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,b=f?2:3,g=f?3:1;let y="",O="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,O="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${a}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${g}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${l}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${x}\n        ${O}\n        setOutput(result);\n      }\n    `}}class Qh{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterDepth,d=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tp{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.inHeight,s=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,d=t.dilationWidth,h=t.filterHeight,p=t.filterWidth,f=t.outChannels/t.inChannels;let m="",b="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${s}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${g}\n        ${b}\n        setOutput(result);\n      }\n    `}}class ep{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const a=t.inHeight,s=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,d=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=f;let b="int xR; int xC; int xCOffset;";for(let l=0;l<p;l++)for(let t=0;t<f;t++)b+=`\n          vec4 xTexelR${l}C${2*t} = vec4(0.);\n          vec4 wR${l}C${t} = vec4(0.);\n          vec4 xR${l}C${t} = vec4(0.);`;for(let x=0;x<p;x++)for(let t=0;t<m;t++){const e=2*t;if(b+=`\n          xR = xRCorner + ${x*d};\n          xC = xCCorner + ${e*h};\n        `,1===c){if(e<f&&(b+=o%2===1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${s}) {\n                  xTexelR${x}C${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${s}) {\n                    xTexelR${x}C${e}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${x}C${e} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${s}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${s}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${x}C${e} = vec4(previous.zw, xTexelR${x}C${e}.xy);\n                } else {\n                  xR${x}C${e} = vec4(0, 0, xTexelR${x}C${e}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${s}) {\n                  xTexelR${x}C${e} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${x}C${e} = vec4(0.);\n                }\n\n                xR${x}C${e} = xTexelR${x}C${e};\n              `,e+1<f)){const t=o%2===0?l.ee.nearestLargerEven(h):h;h%2===0&&o%2===1||h%2!==0&&o%2!==1?(b+=`\n                  xCOffset = xC + ${o%2} + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${s}) {\n                    xTexelR${x}C${e+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(b+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${s}) {\n                      xTexelR${x}C${e} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${x}C${e} = vec4(0.);\n                    }\n                  `),b+=`\n                  xR${x}C${e+1} = vec4(\n                    xTexelR${x}C${e}.zw, xTexelR${x}C${e+2}.xy);\n                `):b+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${s}) {\n                    xTexelR${x}C${e+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${x}C${e+1} = xTexelR${x}C${e+2};\n                `}}else e<f&&(b+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,o%2===1?(b+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${s}) {\n                  xTexelR${x}C${e} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${x}C${e} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${s}) {\n                  xTexelR${x}C${e+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${x}C${e+2} = vec4(0.);\n                }\n\n                xR${x}C${e} = vec4(\n                  xTexelR${x}C${e}.zw, xTexelR${x}C${e+2}.zw);\n              `,e+1<f&&(b+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${s}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${x}C${e+1} = vec4(xTexelR${x}C${e+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${s}) {\n                  xTexelR${x}C${e} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${x}C${e} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${s}) {\n                  xTexelR${x}C${e+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${x}C${e+2} = vec4(0.);\n                }\n\n                xR${x}C${e} = vec4(\n                  xTexelR${x}C${e}.xy, xTexelR${x}C${e+2}.xy);\n              `,e+1<f&&(b+=`\n                  xR${x}C${e+1} = vec4(\n                    xTexelR${x}C${e}.zw, xTexelR${x}C${e+2}.zw);\n                `)),b+="}");e<f&&(b+=`\n            vec4 wTexelR${x}C${e} = getW(${x}, ${e}, d1, q);\n            wR${x}C${e} = vec4(wTexelR${x}C${e}.xz, wTexelR${x}C${e}.xz);\n          `,e+1<f&&(b+=`\n              vec4 wTexelR${x}C${e+1} = getW(${x}, ${e+1}, d1, q);\n              wR${x}C${e+1} =\n                vec4(wTexelR${x}C${e+1}.xz, wTexelR${x}C${e+1}.xz);`))}for(let l=0;l<p;l++)for(let t=0;t<f;t++)b+=`dotProd += xR${l}C${t} * wR${l}C${t};`;let g="",y="";n&&(g=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const O=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${b}\n\n        vec4 result = dotProd;\n        ${O}\n        ${y}\n        setOutput(result);\n      }\n    `}}class np{constructor(t,e,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=t,[c]=e,[l,d]=n;this.outputShape=[c,l,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,b,g]=l>1?[""+(i-1)/(l-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[y,O,x]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${O};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class rp{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,a=e?"0.0":`getX(${ap(r,"coords")})`,s=t[t.length-1];let i="",o="";e?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+s:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${$h(r)} coords = getOutputCoords();\n        int end = ${sp(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${sp(r,"coords")} = idx;\n          val += getX(${ap(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function ap(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function sp(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class ip{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=xd.DENSE;const e=Id(t),n=yh();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Oh(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class op{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=xd.DENSE;const e=Id(t),n=yh();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Oh(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class up{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class cp{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class lp{constructor(t){this.variableNames=["A"],this.outTexUsage=wd.DOWNLOAD;const e=yh();this.outputShape=t,this.userCode=`\n      ${wh}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class dp{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=wd.DOWNLOAD;const e=yh();this.outputShape=t,this.userCode=`\n      ${wh}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class hp{constructor(t,e,n=!1){this.variableNames=["A"];const r=yh(),[a,s]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${xh(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class pp{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=yh(),[a,s]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let e=0;e<=1;e++){const n=2*u+e;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${e} < ${t[2]}) {\n            localCoords[2] += ${e};\n            if(localCoords[1] + ${u} < ${t[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${xh(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}class fp{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class mp{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const a=$h(this.rank),s=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let s=0;s<t.length;s++)s===e?a.push(`int(getIndices(${r[s]}))`):a.push(""+r[s]);return a.join()}(t,n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class bp{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=$h(e.length),a=$h(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function gp(t){const e=yh();return function(t,e){const n=zd(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Sd(t,()=>t.shaderSource(n,e)),Sd(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function yp(t){return function(t,e){const n=zd(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Sd(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),Sd(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Op(t){return function(t,e){const n=zd(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Sd(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),Sd(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Uint16Array([0,1,2,2,1,3]))}function xp(t,e,n,r,a,s){!function(t,e){const n=Object(l.Ac)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const i=function(t){return zd(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return Sd(t,()=>t.bindTexture(o,i)),Sd(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),Sd(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),Sd(t,()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST)),Sd(t,()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST)),Sd(t,()=>t.texImage2D(o,0,r,e,n,0,a,s,null)),Sd(t,()=>t.bindTexture(t.TEXTURE_2D,null)),i}function wp(t){return t.internalFormatFloat}function vp(t){return t.internalFormatHalfFloat}function jp(t){return t.downloadTextureFormat}function Ip(t){return t.internalFormatPackedFloat}function kp(t){return t.internalFormatPackedHalfFloat}function Np(t,e,n,r,a,s,i,o){const u=t,c=new Float32Array(function(t,e){const[n,r]=kd(t,e);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}class Sp{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Object(l.Ac)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){gd[t]=e}(e,t)):this.gl=Od(e);let n="WEBGL_color_buffer_float";if(1===Object(l.Ac)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=Td(this.gl,t),Gd(this.gl,e))this.textureHalfFloatExtension=Td(this.gl,e);else if(Object(l.Ac)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Gd(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=Td(this.gl,"EXT_color_buffer_half_float");else if(Object(l.Ac)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Gd(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Gd(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=yp(this.gl),this.indexBuffer=Op(this.gl),this.framebuffer=function(t){return zd(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Nd(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(l.Ac)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Sd(t,()=>t.finish()),Sd(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Sd(t,()=>t.deleteFramebuffer(this.framebuffer)),Sd(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Sd(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Sd(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=jd(e,n);return xp(t,a,s,wp(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=jd(e,n);return xp(t,a,s,vp(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=jd(e,n);return xp(t,a,s,jp(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){Sd(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?Sd(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):Sd(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),Sd(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,a,s){let i,o,u;Sd(t,()=>t.bindTexture(t.TEXTURE_2D,e)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,u=t.RGBA):(i=new Float32Array(n*r*4),o=t.FLOAT,u=s.internalFormatPackedFloat),i.set(a),Sd(t,()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,o,i)),Sd(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=kd(e,n);return xp(t,a,s,kp(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=kd(e,n);return xp(t,a,s,Ip(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(_d(this.gl,this.framebuffer),this.outputTexture=null),Sd(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r){const[a,s]=jd(e,n),i=new Uint8Array(e*n*4);return Sd(t,()=>t.readPixels(0,0,a,s,r.downloadTextureFormat,t.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,a,s){return Np(this.gl,t,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const a=t.createBuffer();Sd(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a));const s=16*e*n;return Sd(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ)),Sd(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),Sd(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),a}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Object(l.Ac)().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(a,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=a}else Object(l.Ac)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Object(l.Ac)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n){const r=new Float32Array(e*n*4);return Sd(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=Ad(e,t),r=gp(e),a=function(t){return zd(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e);return Sd(e,()=>e.attachShader(a,r)),Sd(e,()=>e.attachShader(a,n)),function(t,e){if(Sd(t,()=>t.linkProgram(e)),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,a),this.debug&&Rd(e,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(t,e,n){return Sd(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),$d(t,e,"clipSpacePos",n,3,20,0)&&$d(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),a}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Sd(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Rd(this.gl,this.program),Sd(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return zd(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Sd(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),Fd(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,a]=kd(e,n);this.setOutputMatrixTextureDriver(t,r,a)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Rd(this.gl,this.program),Md(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Sd(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Sd(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Td(this.gl,2===Object(l.Ac)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(l.Ac)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Object(l.Ac)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await l.ee.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,Object(l.Ac)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Object(l.Ac)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||l.ee.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Dd(this.gl,t,this.framebuffer),this.debug&&Md(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Dd(this.gl,this.outputTexture,this.framebuffer),this.debug&&Md(this.gl)):_d(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;Dd(r,t,this.framebuffer),this.debug&&Md(r),this.outputTexture=t,Sd(r,()=>r.viewport(0,0,e,n)),Sd(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),Sd(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function Cp(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,a=e[n],s=a.shape;if(!l.ee.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(t.isUniform&&a.isUniform)return;const i=t.texShape,o=a.isUniform?null:a.texData.texShape;if(!l.ee.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}class Tp{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:d}=n,{left:h,top:p}=o,f=a*r,m=yh(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let O="";for(let x=0;x<=1;x++)for(let n=0;n<=1;n++)O+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${x};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${e[g]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${h}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${e[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*x+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*x+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${O}\n\n        ${m.output} = result;\n      }\n    `}}class Ap{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Ep{constructor(t,e,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class Rp{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class $p{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,a=t.effectiveFilterHeight,s=t.effectiveFilterWidth,i=a-1-t.padInfo.top,o=s-1-t.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Fp{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.dilationDepth,s=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=o-1-t.padInfo.front,d=u-1-t.padInfo.top,h=c-1-t.padInfo.left,p=o*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Dp{constructor(t,e,n,r=!1,a=!1,s=!1,i=null,o=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?t[1]:t[2],c=Math.ceil(u/2),l=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights");let g="rc.x",y="rc.x";t[0]<e[0]?g=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(y=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${g};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${l});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${p[0]});\n          result += (${h[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class _p{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class Mp{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class zp{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=gh("rc",e),r=$h(e),a=function(t,e,n){if(1===t)return"rc > "+e[0];let r="";for(let a=t-2;a<t;a++)r+=`${n[a]} >= ${e[a]}`,a<t-1&&(r+="||");return r}(e,t,n),s=function(t,e,n,r){if(1===t)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<t;n++)s=e[e.length-1-n]+","+s;n.push(s)}return n}(n,e);if(1===n)return`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class Lp{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=$h(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Bp{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=$h(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=gh("rc",r),u=gh("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[a+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${c}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${d[f]}\n        if (${h}) {\n          result[${f}] = float(${n});\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}class Pp{constructor(t,e,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(y="avgValue / count");const O=4*Math.floor(s/4),x=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${O}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${O};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class Vp{constructor(t,e,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,i=t.strideDepth,o=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,l=t.dilationHeight,d=t.dilationWidth,h=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,b=t.padInfo.top,g=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let O="0.0";if(y||(O="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(x="avgValue / count");const w=4*Math.floor(s/4),v=s%4,j=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${O};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${O});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${j}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${j}\n            } else if (${2===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${j}\n            } else if (${3===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${j}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}}class Wp{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=t;this.outputShape=[r,s];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,h="vec4";"all"===e?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===e&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}class Up{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let a=0;a<4;a++){let t="thisRC = rc;";a%2===1&&(t+="thisRC.z += 1;"),a>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${Oh(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${xh(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Kp{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,a]=e.shape,[,s,i]=t.shape,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class Hp{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[a,s,i,o]=t;this.outputShape=[a,e,n,o];const u=[r&&e>1?s-1:s,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Gp{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,s,i,o]=t;this.outputShape=[a,e,n,o];const u=[r&&e>1?s-1:s,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class Xp{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,a]=e.shape,[,s,i]=t.shape,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class qp{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[a,s,i,o]=t;this.outputShape=[a,e,n,o];const u=[r&&e>1?s-1:s,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],l=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${l})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Yp{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=$h(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Jp{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=gh("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=$h(n);function o(n){const r=t.map((r,a)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:""+r[n]}(a,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${a}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class Zp{constructor(t,e,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=$h(a.length),u=$h(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class Qp{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,a=t.inSize,s=t.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}class tf{constructor(t,e,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<e.length;r++)i.push(""+n[r]),r<t&&s.push(""+n[r]);r=s.join(),a=i.join()}const s=$h(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}class ef{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=$h(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return nf.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let a;a=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((t,e)=>`sourceLoc.${nf[e]} = start[${e}] + coords.${nf[e]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const nf=["x","y","z","w","u","v"];class rf{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=$h(this.rank),n=gh("coords",this.rank),r=gh("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`:t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class af{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=$h(n.length),s=$h(n.length);let i="";if(1===r)i="coords * strides + begin";else{let t=0;i=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${t});\n      ${a} strides = ${a}(${e});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}class sf{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=uf(e,n),a=cf(t,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=of(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const t=this.freeTextures[a].shift();return this.usedTextures[a].push(t),t}let i;return r===vd.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===vd.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===vd.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===vd.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===vd.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const a=uf(n,r),s=cf(e,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=of(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Object(l.Ac)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],c=u.indexOf(t);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function of(t,e,n,r,a){const s=function(t,e){switch(t){case vd.PACKED_2X2_FLOAT32:return Ip(e);case vd.PACKED_2X2_FLOAT16:return kp(e);case vd.UNPACKED_FLOAT32:return wp(e);case vd.UNPACKED_FLOAT16:return vp(e);case vd.PACKED_4X1_UNSIGNED_BYTE:return jp(e);default:throw new Error("Unknown physical texture type "+t)}}(e,r);let i;if(a){const[e,n]=kd(t[0],t[1]);i=e*n}else{const[e,n]=jd(t[0],t[1]);i=e*n}return i*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format "+e)}(n,s)}function uf(t,e){if(t===wd.UPLOAD)return vd.PACKED_2X2_FLOAT32;if(t===wd.RENDER||null==t)return function(t){return Object(l.Ac)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?vd.PACKED_2X2_FLOAT32:vd.UNPACKED_FLOAT32:t?vd.PACKED_2X2_FLOAT16:vd.UNPACKED_FLOAT16}(e);if(t===wd.DOWNLOAD||t===wd.PIXELS)return vd.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function cf(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class lf{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const r=$h(this.rank),a=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<t.length;a++)r.push(`imod(${n[a]}, ${t[a]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class df{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const hf="return abs(x);",pf="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",ff="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",mf=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${l.bc.SELU_SCALEALPHA};\n  float scale = ${l.bc.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`;const bf="return -x;",gf="return ceil(x);",yf="return floor(x);",Of="return exp(x);",xf="return exp(x) - 1.0;",wf=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${l.bc.ERF_P};\n  float a1 = ${l.bc.ERF_A1};\n  float a2 = ${l.bc.ERF_A2};\n  float a3 = ${l.bc.ERF_A3};\n  float a4 = ${l.bc.ERF_A4};\n  float a5 = ${l.bc.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,vf="return x;",jf="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",If="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",kf="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class Nf{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Sf{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=gh("rc",e),r=$h(e),a=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),s=n.slice(-2),i=e<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const{segment_util:Cf}=l.bc,Tf=l.Oc.split,Af=l.Oc.tile,Ef=l.Oc.topkImpl,Rf=l.Oc.whereImpl,$f={};function Ff(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?jf:pf;if("elu"===t)return e?kf:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?If:ff;if("prelu"===t)return e?Ph:Lh;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class Df extends l.Z{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(l.Ac)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Od(Object(l.Ac)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Object(l.Ac)().getNumber("WEBGL_VERSION"))in $f||($f[e]={}),$f[e]),this.gpgpu=new Sp(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new sf(this.gpgpu),this.numMBBeforeWarning=null==Object(l.Ac)().global.screen?1024:Object(l.Ac)().global.screen.height*Object(l.Ac)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new l.z(this,Object(l.zc)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((Object(l.Ac)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(l.Ac)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:wd.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,r){if(Object(l.Ac)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:wd.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=e;if(null!=s){let e;e=o?new Nf(i,vf):new df(i,vf);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const u=null!=this.activeTimers;let c,d;if(u&&(c=l.ee.now()),"complex64"===r){const t=this.readSync(a.real.dataId),e=this.readSync(a.imag.dataId);d=l.bc.mergeRealAndImagArrays(t,e)}else d=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=l.ee.now()-c),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=e;if(null!=a){let e;e=o?new Nf(r,vf):new df(r,vf);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Object(l.Ac)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(l.Ac)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,d=null;if("complex64"!==s&&Object(l.Ac)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);d=this.gpgpu.createBufferFromTexture(e.texture,...Id(r))}if(this.pendingRead.set(t,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),e=t[0],n=t[1];c=l.bc.mergeRealAndImagArrays(e,n)}else if(null==d)c=this.getValuesFromTexture(t);else{const t=l.ee.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(d,t)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(t,c),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(t=>t(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),h}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!Cd(n)){if(Object(l.Ac)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),a=l.ee.sizeFromShape(e);if(Object(l.Ac)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...Id(e)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Object(l.Ac)().getBool("WEBGL_PACK")&&!0===r,i=s?Vd(e):e,o=s?new dp(i):new lp(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:t}],"float32"),c=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),d}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const a=l.ee.flatten(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),s=l.ee.flatten(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(l.Ac)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(a);i.kernelMs=l.ee.sum(t),i.getExtraProfileInfo=()=>t.map((t,e)=>({name:s[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(l.Ac)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:l.ee.now(),endMs:null}}endTimer(t){return Object(l.Ac)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=l.ee.now(),t)}async getQueryTime(t){if(Object(l.Ac)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,a,s)));const c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Object(l.Ac)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(l.zc)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every(t=>null==this.texData.get(t.dataId).texture&&l.ee.sizeFromShape(t.shape)<e)}getGPGPUContext(){return this.gpgpu}slice(t,e,n){if(this.shouldExecuteOnCPU([t])){const r=ch(this.texData.get(t.dataId).values,e,n,t.shape,t.dtype);return this.makeOutput(n,t.dtype,r)}if(0===l.ee.sizeFromShape(n))return Object(l.Sd)([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),a=l.Hd.isSliceContinous(t.shape,e,n);if(r||!a){const r=Object(l.Ac)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rf(n):new ef(n),a=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,a)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),a=this.makeOutput(n,t.dtype),s=this.texData.get(a.dataId);Object.assign(s,r),s.shape=n,s.dtype=t.dtype;let i=l.Hd.computeFlatOffset(e,t.strides);r.slice&&(i+=r.slice.flatOffset),s.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};const o=this.dataRefCount.get(s.slice.origDataId)||1;return this.dataRefCount.set(s.slice.origDataId,o+1),a}stridedSlice(t,e,n,r){const a=this.tryRunOnCpuOrThrow([t],()=>this.cpuBackend.stridedSlice(t,e,n,r));if(a)return a;const s=l.Hd.computeOutShape(e,n,r);if(s.some(t=>0===t))return Object(l.Sd)([],s);const i=new af(e,r,s);return this.compileAndRun(i,[t])}reverse(t,e){const n=Object(l.Ac)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Jp(t.shape,e):new Yp(t.shape,e);return this.compileAndRun(n,[t])}neg(t){const e=this.tryRunOnCpuOrThrow([t],()=>this.cpuBackend.neg(t));if(e)return e;if(Object(l.Ac)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,bf,t.dtype);const n=new df(t.shape,bf);return this.compileAndRun(n,[t])}batchMatMul(t,e,n,r){const a=n?t.shape[2]:t.shape[1],s=r?e.shape[1]:e.shape[2],i=n?t.shape[1]:t.shape[2],o=Math.max(t.shape[0],e.shape[0]);if((1===a||1===s)&&i>1e3){n&&(t=Object(l.ae)(t,[0,2,1])),r&&(e=Object(l.ae)(e,[0,2,1]));const a=1===s?t:t.as3D(o,i,1),u=1===s?2:1,c=1===s?e.as3D(o,1,i):e;return l.dd(a,c).sum(u,!0)}const u=Object(l.de)(t.dtype,e.dtype),c=new Dp(t.shape,e.shape,[o,a,s],n,r);return this.compileAndRun(c,[t,e],u)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:a,activation:s,preluActivationWeights:i}){const o=n?t.shape[2]:t.shape[1],u=r?e.shape[1]:e.shape[2],c=Math.max(t.shape[0],e.shape[0]),d=Object(l.de)(t.dtype,e.dtype),h=null!=a,p=null!=i,f=s?Ff(s,!0):null,m=new Dp(t.shape,e.shape,[c,o,u],n,r,h,f,p),b=[t,e];return a&&b.push(a),i&&b.push(i),this.compileAndRun(m,b,d)}localResponseNormalization4D(t,e,n,r,a){const s=Object(l.Ac)().getBool("WEBGL_PACK_NORMALIZATION")?new Rp(t.shape,e,n,r,a):new Ap(t.shape,e,n,r,a);return this.compileAndRun(s,[t])}LRNGrad(t,e,n,r,a,s,i){const o=new Ep(e.shape,r,a,s,i);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map(t=>l.ee.decodeString(t)),r=Object(l.gc)(t.shape,t.dtype,n);return Af(r,e)}const n=new lf(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=Object(l.Ac)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Bp(t.shape,e,n):new Lp(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){const r=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.gather(t,e,n));if(r)return r;const a=new mp(t.shape,e.size,n);return this.compileAndRun(a,[t,e])}batchToSpaceND(t,e,n){l.ee.assert(t.rank<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),a=l.bc.getReshaped(t.shape,e,r),s=l.bc.getPermuted(a.length,e.length),i=l.bc.getReshapedPermuted(t.shape,e,r),o=l.bc.getSliceBeginCoords(n,e.length),u=l.bc.getSliceSize(i,n,e.length);return Object(l.ae)(t.reshape(a),s).reshape(i).slice(o,u)}spaceToBatchND(t,e,n){l.ee.assert(t.rank<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),a=[[0,0]];a.push(...n);for(let l=1+e.length;l<t.shape.length;++l)a.push([0,0]);const s=t.pad(a),i=l.bc.getReshaped(s.shape,e,r,!1),o=l.bc.getPermuted(i.length,e.length,!1),u=l.bc.getReshapedPermuted(s.shape,e,r,!1),c=Object(l.ae)(s.reshape(i),o);return Object(l.ud)(c,u)}reduce(t,e,n){const r=t.shape[0],a=t.shape[1],s=l.bc.computeOptimalWindowSize(a),i=Math.ceil(a/s),o=new Wp({windowSize:s,inSize:a,batchSize:r,outSize:i},e),u=this.compileAndRun(o,[t],n);return 1===u.shape[1]?u:this.reduce(u,e,n)}argReduce(t,e,n=null){let r=t.shape[0],a=t.shape[1];null!=n&&(r=n.shape[0],a=n.shape[1]);const s=l.bc.computeOptimalWindowSize(a),i={windowSize:s,inSize:a,batchSize:r,outSize:Math.ceil(a/s)},o=new mh(i,e,null==n),u=[t];null!=n&&u.push(n);const c=this.compileAndRun(o,u,"int32");return 1===c.shape[1]?c:this.argReduce(t,e,c)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,a=r[r.length-1],s=l.bc.computeOptimalWindowSize(a),i=new _h(r,s,e,null==n),o=null==n?[t]:[t,n],u=this.compileAndRun(i,o,"int32");return u.rank===t.rank?this.argReducePacked(t,e,u):u}sum(t,e){l.bc.assertAxesAreInnerMostDims("sum",e,t.rank);const[n,r]=l.bc.computeOutAndReduceShapes(t.shape,e),a=l.ee.sizeFromShape(r),s=t.as2D(-1,a),i=l.Qd(t.dtype);return this.reduce(s,"sum",i).reshape(n)}prod(t,e){const n=this.tryRunOnCpuOrThrow([t],()=>this.cpuBackend.prod(t,e));if(n)return n;const[r,a]=l.bc.computeOutAndReduceShapes(t.shape,e),s=l.ee.sizeFromShape(a),i=t.as2D(-1,s),o=l.Qd(t.dtype);return this.reduce(i,"prod",o).reshape(r)}unsortedSegmentSum(t,e,n){let r=0;const a=l.bc.getAxesPermutation([r],t.rank);let s=t;null!=a&&(s=Object(l.ae)(t,a),r=l.bc.getInnerMostAxes(1,t.rank)[0]);const i=Cf.computeOutShape(s.shape,r,n),o=l.ee.sizeFromShape([s.shape[r]]),u=s.as2D(-1,o),c=l.Qd(t.dtype);let d=this.segOpCompute(u,"unsortedSegmentSum",e,c,n).reshape(i);return null!=a&&(d=Object(l.ae)(d,l.bc.getUndoAxesPermutation(a))),d}segOpCompute(t,e,n,r,a){const s=t.shape[0],i=t.shape[1],o=Cf.segOpComputeOptimalWindowSize(i,a),u=new Qp({windowSize:o,inSize:i,batchSize:s,numSegments:a},e),c=this.compileAndRun(u,[t,n],r);return c.shape[1]===a?c:(n=Object(l.pd)(0,a).tile([i/o]),this.segOpCompute(c,e,n,r,a))}argMinMaxReduce(t,e,n){const r=[e];if(l.bc.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!Object(l.Ac)().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,a]=l.bc.computeOutAndReduceShapes(t.shape,r),s=l.ee.sizeFromShape(a),i=t.as2D(-1,s);return this.argReduce(i,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=`+e);const a=t.shape[e];let s=t;for(let i=0;i<=Math.ceil(Math.log2(a))-1;i++){const e=new rp(t.shape,!1,r),n=e.getCustomSetupFunc(i),a=s;s=this.compileAndRun(e,[s],s.dtype,n),a.dispose()}if(n){const e=new rp(t.shape,n,r),a=s;s=this.compileAndRun(e,[s]),a.dispose()}return s}equal(t,e){if(Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new Bh("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){const n=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.less(t,e));if(n)return n;if(Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const r=new Bh("return float(a < b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}lessEqual(t,e){if(Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new Bh("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){const n=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.greater(t,e));if(n)return n;if(Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const r=new Bh("return float(a > b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}greaterEqual(t,e){if(Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new Bh("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new df(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new Bh("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new Bh("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new tf(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],Object(l.de)(e.dtype,n.dtype))}where(t){l.bc.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Rf(t.shape,e)}topk(t,e,n){const r=t.dataSync();return Ef(r,t.shape,t.dtype,e,n)}min(t,e){l.bc.assertAxesAreInnerMostDims("min",e,t.rank);const[n,r]=l.bc.computeOutAndReduceShapes(t.shape,e),a=l.ee.sizeFromShape(r),s=t.as2D(-1,a);return this.reduce(s,"min",s.dtype).reshape(n)}minimum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.minimum(t,e));if(n)return n;const r=Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vh("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Bh("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}mod(t,e){const n=Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vh("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Bh("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],()=>this.cpuBackend.maximum(t,e));if(n)return n;const r=Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vh("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Bh("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}all(t,e){l.bc.assertAxesAreInnerMostDims("all",e,t.rank);const[n,r]=l.bc.computeOutAndReduceShapes(t.shape,e),a=l.ee.sizeFromShape(r),s=t.as2D(-1,a);return this.reduce(s,"all",s.dtype).reshape(n)}any(t,e){l.bc.assertAxesAreInnerMostDims("any",e,t.rank);const[n,r]=l.bc.computeOutAndReduceShapes(t.shape,e),a=l.ee.sizeFromShape(r),s=t.as2D(-1,a);return this.reduce(s,"any",s.dtype).reshape(n)}floorDiv(t,e){if(Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n","int32");const n=new Bh("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(n,[t,e],"int32")}packedUnaryOp(t,e,n){const r=new Nf(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,a=!1){const s=new Vh(n,t.shape,e.shape,a);return this.compileAndRun(s,[t,e],r)}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>Object(l.Ac)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map(t=>t.dtype).reduce((t,e)=>Object(l.de)(t,e)),n=t.map(t=>t.shape),r=Object(l.Ac)().getBool("WEBGL_PACK")?new fh(t[0].shape,n):new ph(t[0].shape,n);return this.compileAndRun(r,t,e)}pow(t,e){const n=Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vh("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Bh("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=Object(l.de)(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t])){const e=eh(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(l.Ac)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,gf,t.dtype);const e=new df(t.shape,gf);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t])){const e=ah(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(l.Ac)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,yf,t.dtype);const e=new df(t.shape,yf);return this.compileAndRun(e,[t])}sign(t){const e=new df(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new df(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new df(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new df(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new df(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t])){const e=nh(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(l.Ac)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Of,t.dtype);const e=new df(t.shape,Of);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t])){const e=rh(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(l.Ac)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,xf,t.dtype);const e=new df(t.shape,xf);return this.compileAndRun(e,[t])}softmax(t,e){const n=l.ee.parseAxisParam([e],t.shape),r=Object(l.Uc)(t,n),a=l.bc.expandShapeToKeepDim(r.shape,n),s=l.Od(t,r.reshape(a)),i=this.exp(s),o=this.sum(i,n).reshape(a);return Object(l.wc)(i,o)}log(t){if(this.shouldExecuteOnCPU([t])){const e=sh(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(Object(l.Ac)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new df(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new df(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new df(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t])){const e=uh(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}const e=new df(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new df(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=Object(l.Ac)().getBool("WEBGL_PACK")?new Nf(t.shape,jf):new df(t.shape,pf),this.compileAndRun(e,[t])}relu6(t){let e;return e=Object(l.Ac)().getBool("WEBGL_PACK")?new Nf(t.shape,If):new df(t.shape,ff),this.compileAndRun(e,[t])}prelu(t,e){const n=Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vh(Ph,t.shape,e.shape):new Bh(Lh,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(Object(l.Ac)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,kf,t.dtype);const e=new df(t.shape,"return (x >= 0.0) ? x : (exp(x) - 1.0);");return this.compileAndRun(e,[t])}eluDer(t,e){const n=Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vh("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new Bh("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new df(t.shape,mf);return this.compileAndRun(e,[t])}clip(t,e,n){let r;r=Object(l.Ac)().getBool("WEBGL_PACK_CLIP")?new Uh(t.shape):new Wh(t.shape);const a=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,a)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=Qd(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Object(l.Ac)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,hf,t.dtype);const e=new df(t.shape,hf);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new Kh(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.real),this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new df(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new df(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}asin(t){const e=new df(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new df(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new df(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}sinh(t){const e=new df(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new df(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new df(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new df(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new df(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new df(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new df(t.shape,wf);return this.compileAndRun(e,[t])}step(t,e){const n=new df(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,a,s){const i=t.shape,o=this.texData.get(t.dataId),u=n.inChannels,c=i[0]*i[1]*i[2],d=n.outChannels,h="channelsLast"===n.dataFormat,p=(1===c||1===d)&&u>1e3,f=i[2]%2!==0&&!!o.isPacked;if(p||!Object(l.Ac)().getBool("WEBGL_LAZILY_UNPACK")||!Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const o=h?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],u=Object(l.ud)(t,[1,o,n.inChannels]),c=Object(l.ud)(e,[1,n.inChannels,n.outChannels]),d=this.fusedBatchMatMul({a:u,b:c,transposeA:false,transposeB:false,bias:r,activation:a,preluActivationWeights:s});return Object(l.ud)(d,n.outShape)}const m=h?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),b={dataId:t.dataId,shape:[1,m,n.inChannels],dtype:t.dtype},g=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,l.ee.assert(Ud(o.shape,b.shape),()=>`packed reshape ${o.shape} to ${b.shape} isn't free`);const y=Object(l.ud)(e,[1,n.inChannels,n.outChannels]),O=this.fusedBatchMatMul({a:b,b:y,transposeA:false,transposeB:false,bias:r,activation:a,preluActivationWeights:s}),x=this.texData.get(O.dataId);return l.ee.assert(x.isPacked,()=>"batchMatMul result is expected to be packed"),o.shape=g,x.shape=n.outShape,Object(l.zc)().makeTensorFromDataId(O.dataId,n.outShape,O.dtype)}conv2dWithIm2Row(t,e,n,r,a,s){const{filterWidth:i,filterHeight:o,inChannels:u,outWidth:c,outHeight:l,dataFormat:d}=n,h="channelsLast"===d,p=i*o*u,f=l*c,m=[p,f],b=t.squeeze([0]),g=e.reshape([1,p,-1]),y=new Tp(m,b.shape,n),O=this.compileAndRun(y,[b]).reshape([1,m[0],m[1]]),x=null!=r,w=null!=s,v=a?Ff(a,!0):null,j=new Dp(O.shape,g.shape,[1,f,n.outChannels],!0,!1,x,v,w),I=[O,g];r&&I.push(r),w&&I.push(s);const k=this.compileAndRun(j,I);return h?k.reshape([1,l,c,n.outChannels]):k.reshape([1,n.outChannels,l,c])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,a,s);if(Object(l.Ac)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,a,s);const i=null!=r,o=null!=s,u=a?Ff(a,!1):null,c=new Zh(n,i,u,o),d=[t,e];return r&&d.push(r),s&&d.push(s),this.compileAndRun(c,d)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(Object(l.Ac)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new Zh(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new Gh(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new Hh(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){const i=Object(l.Ac)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels===1,o=a?Ff(a,i):null,u=[t,e],c=null!=r,d=null!=s;let h;return c&&u.push(r),d&&u.push(s),i?(h=new ep(n,c,o,d),this.compileAndRun(h,u)):(h=new tp(n,c,o,d),this.compileAndRun(h,u))}depthwiseConv2D(t,e,n){let r;return Object(l.Ac)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels===1?(r=new ep(n),this.compileAndRun(r,[t,e])):(r=new tp(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new Jh(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new Yh(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new Qh(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new qh(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new Xh(n);return this.compileAndRun(r,[t,e])}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let a=0;for(let u=0;u<t.rank;u++)u!==e&&(r[a++]=t.shape[u]);const s=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let u=0;u<o.length;u++)s[e]=u,o[u]=this.slice(t,s,i).reshape(r);return o}avgPool3d(t,e){const n=new Vp(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new zh(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new Vp(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const a=new Vp(r,"max",!0),s=this.compileAndRun(a,[e]),i=new Fp(r),o=this.compileAndRun(i,[t,s],e.dtype);return s.dispose(),o}resizeBilinear(t,e,n,r){const a=Object(l.Ac)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Gp(t.shape,e,n,r):new Hp(t.shape,e,n,r);return this.compileAndRun(a,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new Kp(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const a=new qp(t.shape,e,n,r);return this.compileAndRun(a,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new Xp(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const a=e?t:Object(l.Id)(t),s=a.shape[0],i=a.shape[1],o=new _p(s,i,n),u=o.getCustomSetupFunc(r);return this.compileAndRun(o,[a],"int32",u)}oneHot(t,e,n,r){const a=new Mp(t.size,e,n,r);return this.compileAndRun(a,[t])}diag(t){const e=new cp(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,a,s){const i=new np(t.shape,e.shape,r,a,s);return this.compileAndRun(i,[t,e,n],"float32")}depthToSpace(t,e,n){l.ee.assert(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],a="NHWC"===n?t.shape[1]:t.shape[2],s="NHWC"===n?t.shape[2]:t.shape[3],i="NHWC"===n?t.shape[3]:t.shape[1],o=a*e,u=s*e,c=i/(e*e),d=new up("NHWC"===n?[r,o,u,c]:[r,c,o,u],e,n);return this.compileAndRun(d,[t])}split(t,e,n){return Tf(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:a,sliceSize:s,strides:i,outputSize:o}=l.bc.calculateShapes(e,t,n),u=[o/s,s],c=t.reshape([a,r]),d=e.reshape([a,s]);if(0===o)return l.bc.reshapeTensor(Object(l.Sd)([]),n);const h=Object(l.wd)(0),p=new Zp(a,r,c.rank,d.rank,i,u);return this.compileAndRun(p,[d,c,h]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:a,numUpdates:s,strides:i,outputSize:o}=l.bc.calculateShapes(e,t,n),u=new Zp(s,a,t.rank,e.rank,i,[o,1],!1);return this.compileAndRun(u,[e,t,r]).reshape(n)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[a,s,i,o]=l.bc.prepareAndValidate(t,e),u=e.reshape([s,r]),c=t.reshape([t.size/i,i]),d=new bp(r,o,[s,i]);return this.compileAndRun(d,[c,u]).reshape(a)}fill(t,e,n){if("string"===(n=n||l.ee.inferDtype(e))){const r=l.ee.getArrayFromDType(n,l.ee.sizeFromShape(t));return r.fill(e),Object(l.zc)().makeTensor(r,t,n,this)}{const r=new fp(t,e),a=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,a)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return l.bc.linspaceImpl(t,e,n)}makeTensorInfo(t,e,n){const r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Object(l.zc)().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new Sf(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new zp(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Bd(t.shape),...Pd(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},a=[Bd(e),...Pd(e)],s=new Up(a,n),i=this.runWebGLProgram(s,[r],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:a}=e,s=Vd(r);let i;i=n?new op(s):new ip(s);return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:t}],a,null,!0).dataId}}runWebGLProgram(t,e,n,r,a=!1){const s=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(s.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===xd.DENSE){const e=Id(t.outputShape);i.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===l.ee.sizeFromShape(s.shape))return i.values=l.ee.getTypedArrayFromDType(s.dtype,0),s;const o=[],u=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&l.ee.sizeFromShape(e.shape)<=Object(l.Ac)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!==!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!Ud(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:i,isUniform:!1},d=function(t,e,n){let r="";e.concat(n).forEach(t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`});const a=t.userCode;let s=t.constructor.name;return s+="_"+r+"_"+a,s}(t,u,c),h=this.getAndSaveBinary(d,()=>function(t,e,n,r){const a=e.userCode,s=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),i=s.map(t=>t.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=jh(s,o,a,e.packedInputs),c=t.createProgram(u);let d=null;const h=t.getUniformLocation(c,"NAN",!1);1===Object(l.Ac)().getNumber("WEBGL_VERSION")&&(d=t.getUniformLocation(c,"INFINITY",!1));const p={};for(let l=0;l<e.variableNames.length;l++){const n=e.variableNames[l],r=!1;p[n]=t.getUniformLocation(c,n,r),p["offset"+n]=t.getUniformLocation(c,"offset"+n,r)}return{program:e,source:u,webGLProgram:c,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:d,nanLoc:h}}(this.gpgpu,t,u,c)),p=null!=this.activeTimers;let f;if(p&&(f=this.startTimer()),function(t,e,n,r,a){Cp(e.inShapeInfos,n),Cp([e.outShapeInfo],[r]);const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(s,i[0],i[1]):t.setOutputMatrixTexture(s,i[0],i[1]),t.setProgram(e.webGLProgram),1===Object(l.Ac)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const a=e.program.variableNames[r],s=e.uniformLocations[a],i=e.uniformLocations["offset"+a];if(null!=s)if(n.isUniform)if(l.ee.sizeFromShape(n.shape)<2)t.gl.uniform1f(s,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(s,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,s,r)}),null!=a&&a(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,u,c,r),o.forEach(t=>this.disposeIntermediateTensorInfo(t)),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!Object(l.Ac)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const t=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),t}return s}compileAndRun(t,e,n,r,a=!1){n=n||e[0].dtype;const s=this.runWebGLProgram(t,e,n,r,a);return Object(l.zc)().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(l.Ac)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(l.Xd)(()=>{if(!Object(l.Ac)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Object(l.Ac)().getBool("DEBUG");Object(l.Ac)().set("DEBUG",!1);const e=this.abs(Object(l.wd)(1e-8)).dataSync()[0];if(Object(l.Ac)().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=e;if(null!=s)return;const u=null!=this.activeTimers;let c;u&&(c=l.ee.now());let d=e.texShape;if(null==d&&(d=function(t,e=!1){let n=Object(l.Ac)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map((e,n)=>n>=t.length-2?l.ee.nearestLargerEven(t[n]):t[n])).length&&(t=[2,t[0]])),2!==t.length){const e=l.ee.squeezeShape(t);t=e.newShape}let r=l.ee.sizeFromShape(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Bd(t);let n=2,a=2;return t.length&&([n,a]=Pd(t)),r=e*(n/2)*(a/2),l.ee.sizeToSquarishShape(r).map(t=>2*t)}return l.ee.sizeToSquarishShape(r)}(n,o),e.texShape=d),null!=a){const t=Vd(n);let s,i=d[1],h=d[0];const p=a instanceof Uint8Array;o?([i,h]=kd(d[0],d[1]),s=new pp(t,[h,i],p)):s=new hp(t,[h,i],p);const f=this.makeTensorInfo([h,i],r);this.texData.get(f.dataId).usage=p?wd.PIXELS:wd.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);const m=!0,b=this.runWebGLProgram(s,[f],r,null,m),g=this.texData.get(b.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),e.values=null,u&&(this.uploadWaitMs+=l.ee.now()-c)}else{const t=this.acquireTexture(d,i,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype "+e)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*l.ee.bytesPerElement(e)}tryRunOnCpuOrThrow(t,e){if(this.shouldExecuteOnCPU(t))try{return e()}catch(n){if(Object(l.Ac)().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}l.uc.isBrowser()&&Object(l.rd)("webgl",()=>new Df,2);function _f(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Mf={kernelName:l.U,backendName:"webgl",kernelFunc:_f};function zf(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=_f({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const u=_f({inputs:{x:a},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:u},s}const Lf={kernelName:l.p,backendName:"webgl",kernelFunc:zf};function Bf(t){return({inputs:e,backend:n})=>{const{x:r}=e,a=n,s=new df(r.shape,t);return a.runWebGLProgram(s,[r],r.dtype)}}function Pf({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:c}=i,d=o;if(r&&"complex64"===u.dtype){const e=d.texData.get(u.dataId),n=d.texData.get(c.dataId),[r,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{const[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new Bh(t,u.shape,c.shape);return d.runWebGLProgram(i,[a,s],Object(l.de)(n.dtype,r.dtype))}),s=zf({inputs:{real:r,imag:a},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(a),s}const h=s||Object(l.de)(u.dtype,c.dtype);if(d.shouldExecuteOnCPU([u,c])&&null!=a){const t=d.texData.get(u.dataId),e=d.texData.get(c.dataId),[n,r]=a(u.shape,c.shape,t.values,e.values,h),s=d.makeTensorInfo(r,h);return d.texData.get(s.dataId).values=n,s}let p;return p=Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new Vh(e,u.shape,c.shape,n):new Bh(t,u.shape,c.shape),d.runWebGLProgram(p,[u,c],h)}}const Vf="return a + b;",Wf=Pf({opSnippet:Vf,packedOpSnippet:Vf,supportsComplex:!0,cpuKernelImpl:th}),Uf={kernelName:l.d,backendName:"webgl",kernelFunc:Wf},Kf=Pf({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Hf={kernelName:l.h,backendName:"webgl",kernelFunc:Kf};const Gf={kernelName:l.j,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;Jd(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;l.ee.assert(l.bc.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=l.bc.computePool2DInfo(a.shape,s,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&l.ee.arraysEqual(c.inShape,c.outShape))return _f({inputs:{x:a},backend:n});const d=new Pp(c,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};const Xf={kernelName:l.k,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,i=s;Jd([a,s],"avgPoolBackprop");const{filterSize:o,strides:u,pad:c}=r,d=l.bc.computePool2DInfo(i.shape,o,u,1,c),h=new Mh(d);return n.runWebGLProgram(h,[a],i.dtype)}};class qf{constructor(t,e,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],l.bc.assertAndGetBroadcastShape(t,e),l.bc.assertAndGetBroadcastShape(t,n);let i="0.0";null!=r&&(l.bc.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(l.bc.assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Yf{constructor(t,e,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],l.bc.assertAndGetBroadcastShape(t,e),l.bc.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";null!=r&&(l.bc.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(l.bc.assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Jf={kernelName:l.Q,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=t;l.ee.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),l.ee.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),l.ee.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,a,s];let d=null;null!=i&&(d=i.shape,c.push(i));let h=null;null!=o&&(h=o.shape,c.push(o));const p=Object(l.Ac)().getBool("WEBGL_PACK_NORMALIZATION")?new Yf(r.shape,a.shape,s.shape,d,h,u):new qf(r.shape,a.shape,s.shape,d,h,u);return e.runWebGLProgram(p,c,c[0].dtype)}},Zf=Pf({opSnippet:"return float(a != b);",dtype:"bool"}),Qf={kernelName:l.nb,backendName:"webgl",kernelFunc:Zf};function tm(t){const{inputs:e,backend:n}=t,{input:r}=e;return _f({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const em={kernelName:l.rb,backendName:"webgl",kernelFunc:tm};const nm={kernelName:l.m,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return _f({inputs:{x:s},backend:r});const e=l.je(s.shape),n=t({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=zf({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const e=tm({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(e),n}if(!l.ee.hasEncodingLoss(s.dtype,i)){const t=_f({inputs:{x:s},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new df(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const t=r.makeTensorInfo([],"bool",l.ee.getTypedArrayFromDType("bool",1)),e=Zf({inputs:{a:s,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}};class rm{constructor(t){this.outputShape=[],this.outputShape=l.bc.computeOutShape(t,1),this.variableNames=t.map((t,e)=>"T"+e);const e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<e.length;s++){const t=e[s-1];n.push(`else if (yC < ${e[s]}) setOutput(getT${s}(yR, yC-${t}));`)}const r=e.length,a=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class am{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=l.bc.computeOutShape(t,e);const n=this.outputShape,r=n.length,a=$h(r),s=gh("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>"T"+e);const o=new Array(t.length-1);o[0]=t[0][e];for(let l=1;l<o.length;l++)o[l]=o[l-1]+t[l][e];const u=i[e],c=i.slice(-2),d=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${c.join()}));\n        }`;for(let l=1;l<o.length;l++){const t=o[l-1];h+=`\n        if (${u} < ${o[l]}  && ${u} >= ${o[l-1]}) {\n          return getChannel(\n            getT${l}(${sm(i,u,t)}),\n            vec2(${sm(c,u,t)}));\n        }`}const p=o.length,f=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${sm(i,u,f)}),\n          vec2(${sm(c,u,f)}));`,this.userCode=`\n      float getValue(${i.map(t=>"int "+t)}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function sm(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?`${t} - ${n}`:t).join()}function im(t){const{inputs:e,backend:n}=t,{input:r}=e;return _f({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const om={kernelName:l.V,backendName:"webgl",kernelFunc:im};function um(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{shape:s}=r,i=n,o=l.ee.sizeFromShape(a.shape),u=l.ee.inferFromImplicitShape(s,o),c=l.ee.sizeFromShape(u);l.ee.assert(o===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const d=i.texData.get(a.dataId);return!d.isPacked||Ud(a.shape,u)||null!==d.texture&&Ud(d.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(t,e,n){const r=[Bd(t.shape),...Pd(t.shape)],a={dtype:t.dtype,shape:r,dataId:t.dataId},s=[Bd(e),...Pd(e)],i=new Up(s,r),o=n.runWebGLProgram(i,[a],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(a,u,i)}const cm={kernelName:l.vb,backendName:"webgl",kernelFunc:um};const lm={kernelName:l.q,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r,s=l.ee.parseAxisParam(a,e[0].shape)[0],i=l.bc.computeOutShape(e.map(t=>t.shape),s);if(0===l.ee.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter(t=>l.ee.sizeFromShape(t.shape)>0);if(1===o.length)return o[0];const u=o.map(t=>t.shape);return l.bc.assertParamsConsistent(u,s),function t(e,n,r){const a=e[0].dtype;if("complex64"===a){const a=e.map(t=>tm({inputs:{input:t},backend:r})),s=e.map(t=>im({inputs:{input:t},backend:r})),i=t(a,n,r),o=t(s,n,r),u=zf({inputs:{real:i,imag:o},backend:r});return a.forEach(t=>r.disposeIntermediateTensorInfo(t)),s.forEach(t=>r.disposeIntermediateTensorInfo(t)),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}if(e.length>Object(l.Ac)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(e.length/2),s=t(e.slice(0,a),n,r),i=t(e.slice(a),n,r),o=t([s,i],n,r);return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}if(Object(l.Ac)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const t=new am(e.map(t=>t.shape),n);return r.runWebGLProgram(t,e,a)}const s=l.bc.computeOutShape(e.map(t=>t.shape),n),i=e.map(t=>um({inputs:{x:t},attrs:{shape:[-1,l.ee.sizeFromShape(t.shape.slice(n))]},backend:r})),o=new rm(i.map(t=>t.shape)),u=r.runWebGLProgram(o,i,a);i.forEach(t=>r.disposeIntermediateTensorInfo(t));const c=um({inputs:{x:u},attrs:{shape:s},backend:r});return r.disposeIntermediateTensorInfo(u),c}(o,s,n)}},dm=Bf("if (isnan(x)) return x;\n  return cos(x);\n"),hm={kernelName:l.x,backendName:"webgl",kernelFunc:dm},pm=Pf({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),fm={kernelName:l.G,backendName:"webgl",kernelFunc:pm};class mm{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,s=n?r+".0":"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function bm(t,e,n){const r=n.texData.get(t.dataId),a=l.ee.sizeFromShape(t.shape),s=t.shape[t.shape.length-1],i=um({inputs:{x:t},backend:n,attrs:{shape:[a/s,s]}}).shape,o=new mm("real",i,e),u=new mm("imag",i,e),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],d=n.runWebGLProgram(o,c,"float32"),h=n.runWebGLProgram(u,c,"float32"),p=zf({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);const f=um({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(f),f}const gm={kernelName:l.L,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return bm(r,!1,n)}};class ym{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Om={kernelName:l.N,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,a=new ym(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}};class xm{constructor(t){this.variableNames=["A"];const e=yh(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class wm{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=yh(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const vm={kernelName:l.P,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:a}=e;const{numChannels:s}=r,i="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,c]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[c,u],h=[c,u,s];(o||i)&&(null==jm&&(jm=document.createElement("canvas").getContext("2d")),jm.canvas.width=u,jm.canvas.height=c,jm.drawImage(a,0,0,u,c),a=jm.canvas);const p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=wd.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const f=Object(l.Ac)().getBool("WEBGL_PACK")?new wm(h):new xm(h),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let jm;const Im={kernelName:l.T,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return bm(r,!0,n)}};class km{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=t;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u=`sumValue += dot(values * ${l.ee.isInt(t)?t.toPrecision(2):t}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}function Nm(t,e,n,r){const a=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=l.bc.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let s=t;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:c}=a[i];let l,d;l="mean"===n?0===i?new km({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c},o):new km({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c}):new Wp({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c},n),d=s,s=r.runWebGLProgram(l,[s],e),d.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class Sm{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const r=$h(this.rank),a=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let a=0;a<t.length;a++)r[t[a]]=n[a];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Cm{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let c=0;c<n.length;c++)n[c]=t[e[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=$h(this.rank),a=bh("rc",this.rank),s=new Array(this.rank);for(let c=0;c<e.length;c++)s[e[c]]=a[c];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Tm(t,e,n){const r=Object(l.Ac)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cm(t.shape,e):new Sm(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const Am={kernelName:l.db,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:a,keepDims:s}=e,i=n,o=r.shape.length,u=l.ee.parseAxisParam(a,r.shape);let c=u;const d=l.bc.getAxesPermutation(c,o),h=null!=d,p=i.shouldExecuteOnCPU([r]);let f=r;if(h){if(p){const t=i.texData.get(f.dataId).values,e=new Array(o);for(let a=0;a<e.length;a++)e[a]=r.shape[d[a]];const n=dh(t,r.shape,r.dtype,d,e);f=i.makeTensorInfo(e,r.dtype);i.texData.get(f.dataId).values=n}else f=Tm(r,d,i);c=l.bc.getInnerMostAxes(c.length,o)}l.bc.assertAxesAreInnerMostDims("max",c,o);const[m,b]=l.bc.computeOutAndReduceShapes(f.shape,c);let g,y=m;if(s&&(y=l.bc.expandShapeToKeepDim(m,u)),p){const t=i.texData.get(f.dataId).values,e=ih(t,l.ee.sizeFromShape(b),y,r.dtype);g=i.makeTensorInfo(y,r.dtype);i.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const a=l.ee.sizeFromShape(e),s=um({inputs:{x:t},attrs:{shape:[l.ee.sizeFromShape(t.shape)/a,a]},backend:r}),i=Nm(s,t.dtype,"max",r),o=um({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,b,y,i);return h&&i.disposeIntermediateTensorInfo(f),g}};const Em={kernelName:l.eb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;Jd(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;l.ee.assert(l.bc.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=l.bc.computePool2DInfo(a.shape,s,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&l.ee.arraysEqual(c.inShape,c.outShape))return _f({inputs:{x:a},backend:n});const d=new Pp(c,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};const Rm={kernelName:l.fb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s,output:i}=e,o=s;Jd([s,i],"maxPoolBackprop");const{filterSize:u,strides:c,pad:d,dimRoundingMode:h}=r,p=l.bc.computePool2DInfo(o.shape,u,c,1,d,h),f=new Pp(p,"max",!0),m=n.runWebGLProgram(f,[o],o.dtype),b=new $p(p),g=n.runWebGLProgram(b,[a,m],o.dtype);return n.disposeIntermediateTensorInfo(m),g}};const $m={kernelName:l.gb,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=e,u=n;l.ee.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];l.ee.assert(l.bc.eitherStridesOrDilationsAreOne(s,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`);const d=l.bc.computePool2DInfo(r.shape,a,s,c,i),[h,p]=function(t,e,n,r){let a=new Pp(n,"max",!1);const s=r.runWebGLProgram(a,[t],"float32");return a=new Pp(n,"max",!0,!0,e),[s,r.runWebGLProgram(a,[t],"float32")]}(r,o,d,u);return[h,p]}};const Fm={kernelName:l.hb,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:a,axis:s}=e,i=n,o=r.shape.length,u=l.ee.parseAxisParam(s,r.shape);let c=u;const d=l.bc.getAxesPermutation(c,o),h=null!=d,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(p){const t=i.texData.get(m.dataId).values,e=new Array(o);for(let a=0;a<e.length;a++)e[a]=r.shape[d[a]];const n=dh(t,r.shape,r.dtype,d,e);m=i.makeTensorInfo(e,r.dtype);i.texData.get(m.dataId).values=n}else m=Tm(r,d,i);f.push(m),c=l.bc.getInnerMostAxes(c.length,o)}l.bc.assertAxesAreInnerMostDims("sum",c,o);const[b,g]=l.bc.computeOutAndReduceShapes(m.shape,c);let y=b;a&&(y=l.bc.expandShapeToKeepDim(b,u));const O=function(t,e,n,r){const a=l.ee.sizeFromShape(e),s=um({inputs:{x:t},attrs:{shape:[l.ee.sizeFromShape(t.shape)/a,a]},backend:r}),i=Nm(s,"float32","mean",r),o=um({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(m,g,y,i);for(const l of f)i.disposeIntermediateTensorInfo(l);return O}};class Dm{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=$h(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class _m{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=$h(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=gh("rc",r),u=gh("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const t=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const t=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${o[r-1]} += 1;\n          if(${c}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const Mm={kernelName:l.ib,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:a,mode:s}=n,i=Object(l.Ac)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _m(r.shape,a,s):new Dm(r.shape,a,s);return e.runWebGLProgram(i,[r],r.dtype)}},zm="return areal * breal - aimag * bimag;",Lm="return areal * bimag + aimag * breal;";class Bm{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=l.bc.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Pm="return a * b;";const Vm={kernelName:l.jb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:r,b:a}=e,s=l.bc.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(a.dataId),s=new Bm(zm,r.shape,a.shape),i=new Bm(Lm,r.shape,a.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),c=n.runWebGLProgram(i,o,"float32"),l=zf({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const t=n.texData.get(r.dataId),e=n.texData.get(a.dataId),[i,o]=oh(r.shape,a.shape,t.values,e.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Object(l.Ac)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vh(Pm,r.shape,a.shape):new Bh(Pm,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}},Wm={kernelName:l.kb,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{l.bc.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=n,u=e,c=u.readSync(r.dataId),d=u.readSync(a.dataId),h=s,p=i,f=o;return l.Oc.nonMaxSuppressionV3Impl(c,d,h,p,f)}},Um=l.Oc.nonMaxSuppressionV4Impl,Km={kernelName:l.lb,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{l.bc.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,c=e,d=c.readSync(r.dataId),h=c.readSync(a.dataId),{selectedIndices:p,validOutputs:f}=Um(d,h,s,i,o,u);return[p,f]}},Hm=l.Oc.nonMaxSuppressionV5Impl,Gm={kernelName:l.mb,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{l.bc.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,c=e,d=c.readSync(r.dataId),h=c.readSync(a.dataId),p=s,f=i,m=o,b=u,{selectedIndices:g,selectedScores:y}=Hm(d,h,p,f,m,b);return[g,y]}};class Xm{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const a=t[1],s=t[2],i=Math.sin(e).toFixed(3),o=Math.cos(e).toFixed(3);this.outputShape=t;const[u,c]=l.bc.getImageCenter(r,a,s),d=u.toFixed(3),h=c.toFixed(3);let p="";p="number"===typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${d}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${d}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${d}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${p}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${a}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const qm={kernelName:l.wb,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:a,fillValue:s,center:i}=e,o=n,u=new Xm(r.shape,a,s,i);return o.runWebGLProgram(u,[r],r.dtype)}},Ym=Bf("if (isnan(x)) return x;\n  return sin(x);\n"),Jm={kernelName:l.Cb,backendName:"webgl",kernelFunc:Ym},Zm=Bf("return x * x;"),Qm={kernelName:l.Ib,backendName:"webgl",kernelFunc:Zm},tb=Pf({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),eb={kernelName:l.Jb,backendName:"webgl",kernelFunc:tb},nb="return a - b;",rb=Pf({opSnippet:nb,packedOpSnippet:nb,supportsComplex:!0,cpuKernelImpl:lh}),ab={kernelName:l.Lb,backendName:"webgl",kernelFunc:rb},sb=Bf("return tan(x);");const ib=[Uf,Hf,Gf,Xf,Jf,nm,Lf,lm,hm,fm,gm,Om,vm,Mf,Im,om,Am,Em,Rm,$m,Fm,Mm,Vm,Wm,Km,Gm,Qf,em,cm,qm,Jm,Qm,ab,eb,{kernelName:l.Mb,backendName:"webgl",kernelFunc:sb},{kernelName:l.Qb,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:a}=e,s=n,i=r.shape.length,o=new Array(i);for(let c=0;c<o.length;c++)o[c]=r.shape[a[c]];let u;if(s.shouldExecuteOnCPU([r])){const t=s.texData.get(r.dataId).values,e=dh(t,r.shape,r.dtype,a,o);u=s.makeTensorInfo(o,r.dtype);s.texData.get(u.dataId).values=e}else u=Tm(r,a,s);return u}},{kernelName:l.Rb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:s}=e;Jd(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:c}=hh(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}}];for(const Ob of ib)Object(l.sd)(Ob);l.he;var ob=n("8Kt/"),ub=n.n(ob),cb=n("q1tI"),lb=n.n(cb),db=function(){var t=o(s.a.mark((function t(e){var n;return s.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){t.next=2;break}throw new Error("Browser API navigator.mediaDevices.getUserMedia not available");case 2:return t.next=4,navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment",width:{ideal:1280},height:{ideal:720}}});case 4:return n=t.sent,e.current.srcObject=n,t.abrupt("return",new Promise((function(t){e.current.onloadedmetadata=function(){t()}})));case 7:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}(),hb={0:"cardboard",1:"glass",2:"metal",3:"paper",4:"plastic",5:"trash"},pb=function(){var t=o(s.a.mark((function t(){var e;return s.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e="".concat("/recycle-bot","/model/model.json"),t.abrupt("return",Eo(e));case 3:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),fb=function(){var t=o(s.a.mark((function t(e){return s.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e.predict(l.je([1,512,384,3]));case 1:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}(),mb=function(t,e){var n=t.dataSync();t.dispose();for(var r=[],a=0;a<n.length;a++)r.push({value:n[a],index:a});return(r=r.sort((function(t,e){return e.value-t.value})).slice(0,e)).map((function(t){return{label:hb[t.index],value:t.value}}))},bb=function(t,e){var n=e.expandDims(0),r=l.hc(n,"float32");return t.execute(r)},gb=lb.a.createElement;function yb(){var t=Object(cb.useRef)(),e=Object(cb.useState)(),n=e[0],r=e[1],a=Object(cb.useState)(),i=a[0],u=a[1],d=function(){var t=o(s.a.mark((function t(e,n){var r,a;return s.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:r=l.Xd((function(){var t=l.fc.fromPixels(n.current),r=t.shape[0]/2-256,a=t.shape[1]/2-192,s=t.slice([r,a,0],[512,384,3]);return bb(e,s)})),a=mb(r,1),u(a[0].label),requestAnimationFrame((function(){return d(e,n)}));case 4:case"end":return t.stop()}}),t)})));return function(e,n){return t.apply(this,arguments)}}(),h=function(){var e=o(s.a.mark((function e(){return s.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fb(n);case 2:return e.next=4,d(n,t);case 4:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),p=function(){var e=o(s.a.mark((function e(){var n;return s.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,l.qd();case 2:return e.next=4,db(t);case 4:return e.next=6,pb();case 6:n=e.sent,r(n);case 8:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();return Object(cb.useEffect)((function(){p()}),[]),Object(cb.useEffect)((function(){n&&h()}),[n]),gb("div",{className:"jsx-3420552527 container"},gb(ub.a,null,gb("title",{className:"jsx-3420552527"},"Recycle Bot"),gb("link",{rel:"icon",href:"".concat("/recycle-bot","/favicon.ico"),className:"jsx-3420552527"}),gb("meta",{name:"viewport",content:"initial-scale=1.0, width=device-width",className:"jsx-3420552527"})),gb("main",{className:"jsx-3420552527"},gb("div",{className:"jsx-3420552527 title"},"Recycle Bot"),gb("div",{className:"jsx-3420552527 description"},"Classifies waste."),gb("div",{className:"jsx-3420552527 description"},i||"making prediction"),gb("video",{autoPlay:!0,playsInline:!0,muted:!0,ref:t,className:"jsx-3420552527 video"})),gb("footer",{className:"jsx-3420552527"},gb("p",{className:"jsx-3420552527"},"Ho Zong Sien")),gb(c.a,{id:"2771487885"},[".container.jsx-3420552527{min-height:100vh;padding:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}",".video.jsx-3420552527{width:100%;}","main.jsx-3420552527{padding:0;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:100%;}","footer.jsx-3420552527{width:100%;height:100px;border-top:1px solid #eaeaea;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}","footer.jsx-3420552527 a.jsx-3420552527{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}",".title.jsx-3420552527{margin:0;line-height:1.15;font-size:4rem;}",".title.jsx-3420552527,.description.jsx-3420552527{text-align:center;}",".description.jsx-3420552527{line-height:1.5;font-size:1.5rem;}",".logo.jsx-3420552527{height:1em;}"]),gb(c.a,{id:"3379920139"},["html,body{padding:0;margin:0;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto, Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue, sans-serif;}","*{box-sizing:border-box;}"]))}},RRa9:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("VO80"),c=n("NclT"),l=n("yRKQ");const d=Object(u.a)({any_:function(t,e=null,n=!1){let u=Object(s.a)(t,"x","any","bool");const d={x:u},h={axis:e,keepDims:n};return r.a.runKernelFunc(t=>{const r=Object(i.I)(e,u.shape);let a=r;const s=Object(o.f)(a,u.rank);null!=s&&(u=Object(l.a)(u,s),a=Object(o.g)(a.length,u.rank));const d=t.any(u,a);if(n){const t=Object(o.e)(d.shape,r);return Object(c.a)(d,t)}return d},d,null,a.g,h)}})},RbuM:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("QVv9");const c=Object(o.a)({split_:function(t,e,n=0){const o=Object(s.a)(t,"x","split"),c={x:o},l={numOrSizeSplits:e,axis:n};return r.a.runKernelFunc((t,r)=>{const a=Object(i.I)(n,o.shape)[0],s=Object(u.a)(o,e,a);return t.split(o,s,a)},c,null,a.Ac,l)}})},RhH0:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.a)({mod_:function(t,e){let n=Object(i.a)(t,"a","mod"),o=Object(i.a)(e,"b","mod");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.mod(n,o);return e([n,o]),r},u,null,a.Nb)}})},RhVc:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({acosh_:function(t){const e=Object(s.a)(t,"x","acosh"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.acosh(e);return n([e]),r},n,null,a.c)}})},"Rqg+":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("3rNm"),o=n("VO80");const u=Object(o.a)({relu6_:function(t){const e=Object(s.a)(t,"x","relu6"),n={x:e};return r.a.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?Object(i.a)(e,"int32"):t.relu6(e)),n,null,a.ec)}})},RrGL:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({log1p_:function(t){const e=Object(s.a)(t,"x","log1p"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.log1p(e);return n([e]),r},n,null,a.xb)}})},RrjA:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("auKK"),a=n("wFtI");function s(t,e,n){const s={shape:t,value:e,dtype:n};return r.a.runKernelFunc(r=>r.fill(t,e,n),{},null,a.Z,s)}},RsxS:function(t,e,n){"use strict";var r,a;n.d(e,"a",(function(){return r})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(a||(a={}))},SFB9:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({addN_:function(t){i.b(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),i.b(t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+t.length);const e=t.map((t,e)=>Object(s.a)(t,"tensors"+e,"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!i.a(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const o=e;return r.a.runKernelFunc((t,n)=>{const r=t.addN(e);return n(e),r},o,null,a.e)}})},SHv8:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("atXS"),u=n("VO80"),c=n("NclT");const l=Object(u.a)({matMul_:function(t,e,n=!1,u=!1){let l=Object(i.a)(t,"a","matMul"),d=Object(i.a)(e,"b","matMul");[l,d]=Object(s.makeTypesMatch)(l,d);const h={a:l,b:d},p={transposeA:n,transposeB:u};return r.a.runKernelFunc((t,e)=>{e([l,d]);const r=n?l.shape[l.rank-2]:l.shape[l.rank-1],a=u?d.shape[d.rank-1]:d.shape[d.rank-2],s=n?l.shape[l.rank-1]:l.shape[l.rank-2],i=u?d.shape[d.rank-2]:d.shape[d.rank-1],h=l.shape.slice(0,-2),p=d.shape.slice(0,-2),f=o.N(h),m=o.N(p),b=f===m||1===f||1===m;o.b(l.rank>=2&&d.rank>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${h}) and (${p}).`),o.b(r===a,()=>`Error in matMul: inner shapes (${r}) and (${a}) of Tensors with shapes ${l.shape} and ${d.shape} and transposeA=${n} and transposeB=${u} must match.`);const g=(f>m?h:p).concat([s,i]),y=n?Object(c.a)(l,[f,r,s]):Object(c.a)(l,[f,s,r]),O=u?Object(c.a)(d,[m,i,a]):Object(c.a)(d,[m,a,i]),x=t.batchMatMul(y,O,n,u);return Object(c.a)(x,g)},h,null,a.s,p)}})},SNsm:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("8Km0"),o=n("VO80"),u=n("NclT");const c=Object(o.a)({broadcastTo_:function(t,e){let n=Object(s.a)(t,"broadcastTo","x");const o=n.shape;if(e.some(t=>!(t>0)||t%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Object(u.a)(n,t)}const c=n.shape,l=Array.from(e);for(let r=e.length-1;r>=0;r--)if(c[r]===e[r])l[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${e}].`);if(0===l.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length)return Object(i.a)(n);const d={x:n},h={shape:e,inputShape:c};return r.a.runKernelFunc(t=>t.tile(n,l),d,null,a.u,h)}})},SevZ:function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;var r=s(n("9kyW")),a=s(n("bVZc"));function s(t){return t&&t.__esModule?t:{default:t}}var i=function(){function t(t){var e=void 0===t?{}:t,n=e.styleSheet,r=void 0===n?null:n,s=e.optimizeForSpeed,i=void 0!==s&&s,o=e.isBrowser,u=void 0===o?"undefined"!==typeof window:o;this._sheet=r||new a.default({name:"styled-jsx",optimizeForSpeed:i}),this._sheet.inject(),r&&"boolean"===typeof i&&(this._sheet.setOptimizeForSpeed(i),this._optimizeForSpeed=this._sheet.isOptimizeForSpeed()),this._isBrowser=u,this._fromServer=void 0,this._indices={},this._instancesCounts={},this.computeId=this.createComputeId(),this.computeSelector=this.createComputeSelector()}var e=t.prototype;return e.add=function(t){var e=this;void 0===this._optimizeForSpeed&&(this._optimizeForSpeed=Array.isArray(t.children),this._sheet.setOptimizeForSpeed(this._optimizeForSpeed),this._optimizeForSpeed=this._sheet.isOptimizeForSpeed()),this._isBrowser&&!this._fromServer&&(this._fromServer=this.selectFromServer(),this._instancesCounts=Object.keys(this._fromServer).reduce((function(t,e){return t[e]=0,t}),{}));var n=this.getIdAndRules(t),r=n.styleId,a=n.rules;if(r in this._instancesCounts)this._instancesCounts[r]+=1;else{var s=a.map((function(t){return e._sheet.insertRule(t)})).filter((function(t){return-1!==t}));this._indices[r]=s,this._instancesCounts[r]=1}},e.remove=function(t){var e=this,n=this.getIdAndRules(t).styleId;if(function(t,e){if(!t)throw new Error("StyleSheetRegistry: "+e+".")}(n in this._instancesCounts,"styleId: `"+n+"` not found"),this._instancesCounts[n]-=1,this._instancesCounts[n]<1){var r=this._fromServer&&this._fromServer[n];r?(r.parentNode.removeChild(r),delete this._fromServer[n]):(this._indices[n].forEach((function(t){return e._sheet.deleteRule(t)})),delete this._indices[n]),delete this._instancesCounts[n]}},e.update=function(t,e){this.add(e),this.remove(t)},e.flush=function(){this._sheet.flush(),this._sheet.inject(),this._fromServer=void 0,this._indices={},this._instancesCounts={},this.computeId=this.createComputeId(),this.computeSelector=this.createComputeSelector()},e.cssRules=function(){var t=this,e=this._fromServer?Object.keys(this._fromServer).map((function(e){return[e,t._fromServer[e]]})):[],n=this._sheet.cssRules();return e.concat(Object.keys(this._indices).map((function(e){return[e,t._indices[e].map((function(t){return n[t].cssText})).join(t._optimizeForSpeed?"":"\n")]})).filter((function(t){return Boolean(t[1])})))},e.createComputeId=function(){var t={};return function(e,n){if(!n)return"jsx-"+e;var a=String(n),s=e+a;return t[s]||(t[s]="jsx-"+(0,r.default)(e+"-"+a)),t[s]}},e.createComputeSelector=function(t){void 0===t&&(t=/__jsx-style-dynamic-selector/g);var e={};return function(n,r){this._isBrowser||(r=r.replace(/\/style/gi,"\\/style"));var a=n+r;return e[a]||(e[a]=r.replace(t,n)),e[a]}},e.getIdAndRules=function(t){var e=this,n=t.children,r=t.dynamic,a=t.id;if(r){var s=this.computeId(a,r);return{styleId:s,rules:Array.isArray(n)?n.map((function(t){return e.computeSelector(s,t)})):[this.computeSelector(s,n)]}}return{styleId:this.computeId(a),rules:Array.isArray(n)?n:[n]}},e.selectFromServer=function(){return Array.prototype.slice.call(document.querySelectorAll('[id^="__jsx-"]')).reduce((function(t,e){return t[e.id.slice(2)]=e,t}),{})},t}();e.default=i},SwXZ:function(t,e,n){"use strict";(function(t){var e=n("szMd");const r=()=>n(0);let a;class s{constructor(){this.util=n(1),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return null!=Object(e.b)().global.fetch?Object(e.b)().global.fetch(t,n):(null==a&&(a=r()),a(t,n))}now(){const e=t.hrtime();return 1e3*e[0]+e[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}Object(e.b)().get("IS_NODE")&&Object(e.b)().setPlatform("node",new s)}).call(this,n("8oxB"))},THqV:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80"),o=n("NclT");const u=Object(i.a)({ifft_:function(t){Object(s.b)("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return r.a.runKernelFunc(e=>{const n=t.shape[t.shape.length-1],r=t.size/n,a=Object(o.a)(t,[r,n]),s=e.ifft(a);return Object(o.a)(s,t.shape)},e,null,a.lb)}})},TPxA:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("w4jT");class a extends r.a{split(t){return new s(this,t)}}class s extends a{constructor(t,e){super(),this.upstream=t,this.impl=new i(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class i extends r.b{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0}}},TyAZ:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({exp_:function(t){const e=Object(s.a)(t,"x","exp"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.exp(e);return n([r]),r},n,null,a.W)}})},"U/2n":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wE5H"),s=n("wFtI"),i=n("o/e8"),o=n("atXS"),u=n("uBja"),c=n("VO80"),l=n("NclT");const d=Object(c.a)({maxPool3d_:function(t,e=[1,1,1],n,c,d,h="NDHWC",p){null==p?p=[1,1,1]:Object(a.b)("dilations is deprecated, this field will be gone in v3.0.0.");const f=Object(i.a)(t,"x","maxPool3d");let m=f,b=!1;4===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2],f.shape[3]])),o.b(5===m.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${m.rank}.`),o.b("NDHWC"===h,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+h),o.b(u.h(n,p),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`),null!=d&&o.b(o.v(c),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const g={x:m},y={filterSize:e,strides:n,pad:c,dimRoundingMode:d,dataFormat:h,dilations:p},O=r.a.runKernelFunc((t,r)=>{null==p&&(p=[1,1,1]);const a=u.f(m.shape,e,n,p,c,d,h),s=t.maxPool3d(m,a);return r([m,s]),s},g,null,s.Eb,y);return b?Object(l.a)(O,[O.shape[1],O.shape[2],O.shape[3],O.shape[4]]):O}})},"U/Lz":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({unsortedSegmentSum_:function(t,e,n){const o=Object(s.a)(t,"x","unsortedSegmentSum"),u=Object(s.a)(e,"segmentIds","unsortedSegmentSum","int32");Object(i.b)(Object(i.v)(n),()=>"numSegments must be of dtype int");const c={x:o,segmentIds:u},l={numSegments:n};return r.a.runKernelFunc((t,e)=>{const r=t.unsortedSegmentSum(o,u,n);return e([u]),r},c,null,a.Pc,l)}})},U45G:function(t,e,n){"use strict";n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return i}));var r=n("auKK"),a=n("NNfn"),s=(n("o/e8"),n("atXS"));function i(t,e){s.b(s.u(t),()=>"The f passed in variableGrads(f) must be a function"),s.b(null==e||Array.isArray(e)&&e.every(t=>t instanceof a.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in r.a.registeredVariables)e.push(r.a.registeredVariables[t])}const i=n?e.filter(t=>!t.trainable):null,o=e.length;e=e.filter(t=>t.trainable),s.b(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const{value:u,grads:c}=r.a.gradients(t,e,null,!0);s.b(c.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),s.b(0===u.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`);const l={};return e.forEach((t,e)=>{null!=c[e]&&(l[t.name]=c[e])}),null!=i&&i.forEach(t=>l[t.name]=null),{value:u,grads:l}}function o(t){return r.a.customGrad(t)}},UI8N:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.a)({floorDiv_:function(t,e){let n=Object(i.a)(t,"a","floorDiv"),o=Object(i.a)(e,"b","floorDiv");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.floorDiv(n,o);return e([n,o]),r},u,null,a.cb)}})},Ug8H:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({prelu_:function(t,e){const n=Object(s.a)(t,"x","prelu"),i=Object(s.a)(e,"alpha","prelu"),o={x:n,alpha:i};return r.a.runKernelFunc((t,e)=>{const r=t.prelu(n,i);return e([n,i]),r},o,null,a.Yb)}})},Um8L:function(t,e,n){"use strict";function r(t,e){const n=t.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=t[s]||1;(e[e.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(t,e){const n=[];for(let r=0;r<e.length;r++){const a=t[t.length-r-1],s=e.length-r-1,i=e[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(t,e){const n=[],r=Math.max(t.length,e.length);for(let a=0;a<r;a++){let r=t[t.length-a-1];null==r&&(r=1);let s=e[e.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`)}n.unshift(r)}}return n}n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return a})),n.d(e,"a",(function(){return s}))},Umw7:function(t,e,n){"use strict";n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return s})),n.d(e,"f",(function(){return i})),n.d(e,"b",(function(){return o})),n.d(e,"g",(function(){return c})),n.d(e,"c",(function(){return l})),n.d(e,"a",(function(){return d}));var r=n("+hG3");function a(t,e,n,a,i){const o=e.inputParams[t];if(o&&void 0!==o.inputIndexStart){const t=o.inputIndexStart,u=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?t+1:o.inputIndexEnd;if("tensor"===o.type)return s(e.inputNames[o.inputIndexStart],n,a,i);if("tensors"===o.type){return e.inputNames.slice(t,u).map(t=>s(t,n,a,i))}const c=s(e.inputNames.slice(t)[0],n,a,i),l=c.dataSync();return"number"===o.type?l[0]:r.ee.toNestedArray(c.shape,l)}const u=e.attrParams[t];return u&&u.value}function s(t,e,n,r){const[a,s]=c(t);if(null!=r){const t=r.getHashTableHandleByName(a);if(null!=t)return t}const i=n.currentContextIds.find(t=>!!e[u(a,t)]);return void 0!==i?e[u(a,i)][s]:void 0}function i(t,e,n){return e[u(t,n.currentContextId)]}function o(t,e){const[n,r]=c(t);return[u(n,e&&e.currentContextId),r]}function u(t,e){return e?`${t}-${e}`:t}function c(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function l(t,e,n){let r=a("pad",t,e,n);if("explicit"===r){r=a("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function d(t){return t.kept?t:Object(r.jc)(t)}},"V+B2":function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},VO80:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("auKK"),a=n("atXS");function s(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const i=(...t)=>{r.a.startScope(n);try{const e=s(...t);return Object(a.x)(e)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(e),e}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},VhY8:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({topk_:function(t,e=1,n=!0){const i=Object(s.a)(t,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got `+e);const u={x:i},c={k:e,sorted:n},[l,d]=r.a.runKernelFunc(t=>t.topk(i,e,n),u,null,a.Lc,c);return{values:l,indices:d}}})},WHR0:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},WJRb:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("auKK"),a=n("wFtI");function s(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return r.a.runKernelFunc(r=>r.linspace(t,e,n),{},null,a.vb,s)}},WVnj:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("atXS"),s=n("6366");function i(t,e,n,i){if(null==i&&(i=Object(a.r)(t)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(a.c)(e);const t=Object(a.N)(e),r=Object(a.N)(n);Object(a.b)(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let s=0;s<n.length;++s){const t=n[s],r=s!==n.length-1||t!==Object(a.N)(e.slice(s));Object(a.b)(n[s]===e[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return Object(a.A)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==i?Object(s.toTypedArray)(t,i):Object(a.m)(t,[],!0),r.a.makeTensor(t,e,i)}},WWBm:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({ceil_:function(t){const e=Object(s.a)(t,"x","ceil"),n={x:e};return r.a.runKernelFunc(t=>t.ceil(e),n,null,a.w)}})},WYAb:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({isInf_:function(t){const e=Object(s.a)(t,"x","isInf"),n={x:e};return r.a.runKernelFunc(t=>t.isInf(e),n,null,a.pb)}})},Wiw4:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("atXS"),s=n("B3db");function i(t,e="float32"){if("complex64"===e){const e=i(t,"float32"),n=i(t,"float32");return Object(s.a)(e,n)}const n=Object(a.F)(Object(a.N)(t),e);return r.a.makeTensor(n,t,e)}},X4fa:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({softmax_:function(t,e=-1){const n=Object(s.a)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const i={logits:n},o={dim:e};return r.a.runKernelFunc((t,r)=>{const a=t.softmax(n,e);return r([a]),a},i,null,a.wc,o)}})},XcSs:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({sinh_:function(t){const e=Object(s.a)(t,"x","sinh"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.sinh(e);return n([e]),r},n,null,a.uc)}})},Xr0w:function(t,e,n){"use strict";n.r(e),n.d(e,"assertParamsValid",(function(){return a})),n.d(e,"maskToAxes",(function(){return s})),n.d(e,"computeOutShape",(function(){return i})),n.d(e,"stridesWithElidedDims",(function(){return o})),n.d(e,"getNormalizedAxes",(function(){return l})),n.d(e,"startIndicesWithElidedDims",(function(){return d})),n.d(e,"stopIndicesWithElidedDims",(function(){return h})),n.d(e,"stridesForAxis",(function(){return p})),n.d(e,"startForAxis",(function(){return f})),n.d(e,"stopForAxis",(function(){return m})),n.d(e,"isSliceContinous",(function(){return b})),n.d(e,"computeFlatOffset",(function(){return g})),n.d(e,"parseSliceParams",(function(){return y}));var r=n("atXS");function a(t,e,n){const a=t.shape.length;r.b(a===e.length,()=>`Error in slice${a}D: Length of begin ${e} must match the rank of the array (${a}).`),r.b(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let s=0;s<a;++s)r.b(e[s]+n[s]<=t.shape[s],()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`)}function s(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function i(t,e,n){const r=[];for(let a=0;a<t.length;a++)r[a]=Math.ceil((e[a]-t[a])/n[a]);return r}function o(t,e,n,r){const a=[...t];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[e]=1:(a.splice(e,0,1),a.pop());return a}function u(t,e,n){return n<=t?n:n-(e-1)}function c(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function l(t,e,n,r,a,s,i,u,c){const l=t.length;let b=new Array(l),g=new Array(l),y=new Array(l);if(e.length&&n>0){const c=e[0],l=n+1;b=d(i,c,l,r,t),g=h(u,c,l,a,t),y=o(s,c,l,t)}else for(let o=0;o<l;o++)b[o]=f(i,r,s,t,o,c),g[o]=m(u,a,s,t,o,c),y[o]=p(s,o,c);return{begin:b,end:g,strides:y}}function d(t,e,n,r,a){const s=[...a],i=c(n,e);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{const a=u(e,n,o);let i=r[a];t&1<<a&&(i=0),s[o]=i}return s}function h(t,e,n,a,s){const i=[...s],o=c(n,e);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const s=u(e,n,r);let o=a[s];t&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let u=0;u<i.length;u++){const t=s[u];i[u]<0&&(i[u]+=t),i[u]=r.i(0,i[u],s[u])}return i}function p(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function f(t,e,n,a,s,i){let o=e[s];const u=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=r.i(0,o,c-1),o}function m(t,e,n,a,s,i){let o=e[s];const u=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=u>0?r.i(0,o,c):r.i(-1,o,c-1),o}function b(t,e,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(e[a]>0||n[a]!==t[a])return!1;return!0}function g(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function y(t,e,n){let a;const s=t.shape.length;let i;return a="number"===typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),a.forEach(t=>{r.b(-1!==t,()=>"slice() does not support negative begin indexing.")}),i=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map((e,n)=>e>=0?e:(r.b(-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`),t.shape[n]-a[n])),[a,i]}},Xuae:function(t,e,n){"use strict";var r=n("RIqP"),a=n("lwsE"),s=n("W8MJ"),i=(n("PJYZ"),n("7W2i")),o=n("a1gu"),u=n("Nsbk");function c(t){var e=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=u(t);if(e){var a=u(this).constructor;n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments);return o(this,n)}}e.__esModule=!0,e.default=void 0;var l=n("q1tI"),d=function(t){i(n,t);var e=c(n);function n(t){var s;return a(this,n),(s=e.call(this,t))._hasHeadManager=void 0,s.emitChange=function(){s._hasHeadManager&&s.props.headManager.updateHead(s.props.reduceComponentsToState(r(s.props.headManager.mountedInstances),s.props))},s._hasHeadManager=s.props.headManager&&s.props.headManager.mountedInstances,s}return s(n,[{key:"componentDidMount",value:function(){this._hasHeadManager&&this.props.headManager.mountedInstances.add(this),this.emitChange()}},{key:"componentDidUpdate",value:function(){this.emitChange()}},{key:"componentWillUnmount",value:function(){this._hasHeadManager&&this.props.headManager.mountedInstances.delete(this),this.emitChange()}},{key:"render",value:function(){return null}}]),n}(l.Component);e.default=d},Xyqe:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({rsqrt_:function(t){const e=Object(s.a)(t,"x","rsqrt"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.rsqrt(e);return n([e]),r},n,null,a.nc)}})},YAKK:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.a)({atan2_:function(t,e){let n=Object(i.a)(t,"a","atan2"),o=Object(i.a)(e,"b","atan2");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.atan2(n,o);return e([n,o]),r},u,null,a.m)}})},YSVl:function(t,e,n){var r=n("EhIR"),a=n("uDiL"),s=n("pJ6O"),i=n("yuCN"),o=n("euyF"),u=n("ie1u"),c=n("pJ3+");c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,t.exports=c},YuTi:function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},Z5Ez:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("SNsm"),u=n("Um8L"),c=n("VO80");const l=Object(c.a)({where_:function(t,e,n){const c=Object(s.a)(e,"a","where"),l=Object(s.a)(n,"b","where"),d=Object(s.a)(t,"condition","where","bool"),h=Object(u.a)(c.shape,l.shape),p=Object(o.a)(c,h),f=Object(o.a)(l,h);1===d.rank&&Object(i.b)(d.shape[0]===c.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==d.rank&&Object(i.e)(d.shape,f.shape,"Error in where: ");const m={condition:d,t:p,e:f};return r.a.runKernelFunc((t,e)=>{const n=t.select(d,p,f);return e([d]),n},m,null,a.pc)}})},ZJ6U:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("87nf"),u=n("VO80"),c=n("NX3e");const l=Object(u.a)({concat_:function(t,e=0){Object(i.b)(t.length>=1,()=>"Pass at least one tensor to concat");let n=Object(s.b)(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)});const u=n,l={axis:e};return r.a.runKernelFunc((t,r)=>{const a=Object(i.I)(e,n[0].shape)[0],s=Object(o.b)(n.map(t=>t.shape),a);if(0===Object(i.N)(s))return Object(c.a)([],s);if(n=n.filter(t=>t.size>0),1===n.length)return n[0];const u=n.map(t=>t.shape);Object(o.a)(u,a);const l=t.concat(n,a);return r(n),l},u,null,a.z,l)}})},Zz2E:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},aSZd:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("uBja"),i=n("VO80"),o=n("NclT");const u=Object(i.a)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,i,u,c=[1,1],l){let d=t;3===t.rank&&(d=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let h=e;3===h.rank&&(h=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const p={x:d,dy:h},f={strides:i,pad:u,dimRoundingMode:l,dilations:c,filterShape:n};return r.a.runKernelFunc(e=>{const r=s.a(t.shape,n,i,c,u,l,!0);return e.depthwiseConv2DDerFilter(d,h,r)},p,null,a.M,f)}})},aTLu:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({sin_:function(t){const e=Object(s.a)(t,"x","sin"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.sin(e);return n([e]),r},n,null,a.tc)}})},adw1:function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n("B3db"),a=n("ZJ6U"),s=n("JLAb"),i=n("parS"),o=n("VO80"),u=n("17CO"),c=n("NclT"),l=n("0I63"),d=n("AV8V"),h=n("bTzI"),p=n("THqV");const f=Object(o.a)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let o;if(e<=2){const r=Object(c.a)(t,[n,e]);o=Object(p.a)(r)}else{const f=[n,2*(e-1)],m=Object(c.a)(Object(u.a)(t),[n,e]),b=Object(c.a)(Object(s.a)(t),[n,e]),g=Object(l.a)(Object(h.a)(m,[0,1],[n,e-2]),1),y=Object(i.a)(Object(l.a)(Object(h.a)(b,[0,1],[n,e-2]),1),Object(d.a)(-1)),O=Object(a.a)([m,g],1),x=Object(a.a)([b,y],1),w=Object(c.a)(Object(r.a)(O,x),[f[0],f[1]]);o=Object(p.a)(w)}if(o=Object(u.a)(o),3===t.rank&&0!==t.shape[0]){const e=o,n=t.shape[0];o=Object(c.a)(o,[n,o.shape[0]/n,o.shape[1]]),e.dispose()}return o}})},atXS:function(t,e,n){"use strict";function r(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function a(t,e,n){return Math.max(t,Math.min(e,n))}function s(t){return t%2===0?t:t+1}function i(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function o(t,e){const n=Math.random();return e*n+(1-n)*t}function u(t,e){let n=0;for(let r=0;r<t.length;r++){const a=Number(t[r])-Number(e[r]);n+=a*a}return n}function c(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function l(t,e,n=""){c(m(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function d(t){c(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function h(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||A(t)&&!n)for(let r=0;r<t.length;++r)h(t[r],e,n);else e.push(t);return e}function p(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function f(t){return 0===t.length}function m(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function b(t){return t%1===0}function g(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function y(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function O(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return r(e),e}function x(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function w(t,e=(t=>0),n){return new Promise((r,a)=>{let s=0;const i=()=>{if(t())return void r();s++;const o=e(s);null!=n&&s>=n?a():setTimeout(i,o)};i()})}function v(t,e){let n=1,r=-1;for(let s=0;s<t.length;++s)if(t[s]>=0)n*=t[s];else if(-1===t[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(t[s]<0)throw Error(`Shapes can not be < 0. Found ${t[s]} at dim ${s}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const a=t.slice();return a[r]=e/n,a}function j(t,e){const n=e.length;return c((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+t),c(t.every(t=>b(t)),()=>"All values in axis param must be integers but got axis "+t),t.map(t=>t<0?n+t:t)}function I(t,e){const n=[],r=[],a=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||a?null:j(e,t).sort();let i=0;for(let o=0;o<t.length;++o){if(null!=s){if(s[i]===o&&1!==t[o])throw new Error(`Can't squeeze axis ${o} since its dim '${t[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===t[o]&&(n.push(t[o]),r.push(o)),s[i]<=o&&i++}1!==t[o]&&(n.push(t[o]),r.push(o))}return{newShape:n,keptDims:r}}function k(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function N(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function S(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function C(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function T(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function A(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function E(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function R(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function $(t){return"string"===typeof t||t instanceof String}function F(t){return"boolean"===typeof t}function D(t){return"number"===typeof t}function _(t){return Array.isArray(t)?_(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":D(t)?"float32":$(t)?"string":F(t)?"bool":"float32"}function M(t){return!!(t&&t.constructor&&t.call&&t.apply)}function z(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function L(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function B(t,e){if(0===t.length)return e[0];const n=t.reduce((t,e)=>t*e);if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return function t(e,n,r){const a=new Array;if(1===n.length){const t=n[0];for(let n=0;n<t;n++)a[n]=r[e+n]}else{const s=n[0],i=n.slice(1),o=i.reduce((t,e)=>t*e);for(let n=0;n<s;n++)a[n]=t(e+n*o,i,r)}return a}(0,t,e)}function P(t,e){const n=V(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function V(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function W(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return B(t,new Float32Array(n));if("int32"===e)return B(t,new Int32Array(n));if("bool"===e)return B(t,new Uint8Array(n));throw new Error("Unknown data type "+e)}function U(t){t.forEach(e=>{c(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function K(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let a=0;a<t.length-1;++a)r+=n[a]*t[a];return r}function H(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(t/n[a]),t-=r[a]*n[a];return r[r.length-1]=t,r}function G(t){return t&&t.then&&"function"===typeof t.then}n.d(e,"M",(function(){return r})),n.d(e,"i",(function(){return a})),n.d(e,"H",(function(){return s})),n.d(e,"Q",(function(){return i})),n.d(e,"J",(function(){return o})),n.d(e,"l",(function(){return u})),n.d(e,"b",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"d",(function(){return d})),n.d(e,"m",(function(){return h})),n.d(e,"N",(function(){return p})),n.d(e,"y",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"v",(function(){return b})),n.d(e,"R",(function(){return g})),n.d(e,"O",(function(){return y})),n.d(e,"k",(function(){return O})),n.d(e,"L",(function(){return x})),n.d(e,"K",(function(){return w})),n.d(e,"s",(function(){return v})),n.d(e,"I",(function(){return j})),n.d(e,"P",(function(){return I})),n.d(e,"o",(function(){return k})),n.d(e,"n",(function(){return N})),n.d(e,"h",(function(){return S})),n.d(e,"B",(function(){return C})),n.d(e,"p",(function(){return T})),n.d(e,"A",(function(){return A})),n.d(e,"g",(function(){return E})),n.d(e,"f",(function(){return R})),n.d(e,"z",(function(){return $})),n.d(e,"t",(function(){return F})),n.d(e,"w",(function(){return D})),n.d(e,"r",(function(){return _})),n.d(e,"u",(function(){return M})),n.d(e,"G",(function(){return z})),n.d(e,"j",(function(){return L})),n.d(e,"S",(function(){return B})),n.d(e,"D",(function(){return P})),n.d(e,"F",(function(){return V})),n.d(e,"E",(function(){return W})),n.d(e,"c",(function(){return U})),n.d(e,"C",(function(){return K})),n.d(e,"q",(function(){return H})),n.d(e,"x",(function(){return G}))},auKK:function(t,e,n){"use strict";n.d(e,"b",(function(){return g})),n.d(e,"a",(function(){return y}));var r=n("i4e/"),a=n("szMd"),s=n("9JAK"),i=n("wFtI"),o=n("c7gn"),u=n("atXS");class c{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new d)}profileKernel(t,e,n){let r;const a=this.backendTimer.time(()=>{r=n()});for(let s=0;s<r.length;s++){const e=r[s];e.data().then(n=>{l(n,e.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:a.then(t=>t.kernelMs),extraInfo:a.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:a,extraInfo:s}=t;n.forEach(t=>{Promise.all([t.data(),r,s]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],a,n[2])})})}}function l(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return console.warn(`Found ${e} in the result of '${n}'`),!0}return!1}class d{logKernelProfile(t,e,n,r,a,s){const i="number"===typeof r?u.L(r+"ms",9):r.error,o=u.L(t,25),c=e.rank,l=e.size,d=u.L(e.shape.toString(),14);let h="";for(const u in a){const t=a[u];if(null!=t){const n=t.shape||e.shape,r=n.length;h+=`${u}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${c}D ${d}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var h=n("NNfn"),p=n("dsKV"),f=n("6366");class m{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class b{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new m}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){Object(o.c)(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Object(o.c)(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof r.b||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,a=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(r){throw e(),r}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x:()=>{const e={x:t},n={dtype:"float32"};return y.runKernelFunc(e=>e.cast(t,"float32"),e,null,i.v,n)}}),[],{}),e}runKernel(t,e,n,r,a){return this.runKernelFunc(null,e,null,t,n,r,a)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let a=0;n.forEach(t=>{a+="complex64"===t.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,a,s,i){let u,c=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const d=this.state.numBytes,h=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const f=Object(o.b)(r,this.backendName);let m,b;if(null!=f)p=()=>{const t=this.backend.numDataIds();m=f.kernelFunc({inputs:e,attrs:a,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const o=n.map(({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n));if(l){let t=this.getTensorsForGradient(r,e,o);if(null==t){null==i&&(i=[]);const e=o.filter((t,e)=>i[e]);t=(s||[]).slice().concat(e)}c=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{l&&(c=t.map(t=>this.keep(this.clone(t))))};p=()=>{const n=this.backend.numDataIds();m=this.tidy(()=>t(this.backend,e));const a=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,a),a}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(b=this.profiler.profileKernel(r,e,()=>p()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(b),u=b.outputs):u=p()}),l&&this.addTapeNode(r,e,u,n,c,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(t=>null!=e[t]?e[t].shape:null),outputShapes:u.map(t=>t.shape),kernelTimeMs:b.timeMs,extraInfo:b.extraInfo}),Array.isArray(m)?u:u[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=Object(o.a)(t);if(null!=r){const t=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(u.b(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(e).map(t=>e[t])):s=t.map(t=>e[t]);const i=n.filter((t,e)=>a[e]);return s.concat(i)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=t;"string"===n&&u.z(t[0])&&(a=t.map(t=>f.encodeString(t)));const s=r.write(a,e,n),i=new h.a(e,n,s,this.nextTensorId());if(this.incRef(i,r),"string"===n){const t=this.state.tensorInfo.get(s),e=Object(u.f)(a);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,r){n=n||"float32";const a=new h.a(e,n,t,this.nextTensorId());return this.incRef(a,r),a}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const a=new h.c(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*u.g(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof h.c||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:a},c=Object(o.a)(t);null!=c&&(r=c.gradFunc),null!=r&&(i.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=u.F(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],a,s))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(p.getTensorsInContainer)(t),n=new Set(e.map(t=>t.id));for(let a=0;a<this.state.activeScope.track.length;a++){const t=this.state.activeScope.track[a];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(u.b(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));u.b(a instanceof h.a,()=>"The result y returned by f() must be a tensor.");const s=function(t,e,n){const r={},a={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<t.length;u++){const n=t[u],s=n.inputs;for(const t in s){const i=s[t];let o=!1;for(let t=0;t<e.length;t++)if(r[i.id]){n.outputs.forEach(t=>r[t.id]=!0),o=!0,a[n.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let u=t.length-1;u>=0;u--){const e=t[u],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(s[e.outputs[t].id]){for(const t in n)s[n[t].id]=!0,i[e.id]=!0;break}}const o=[];for(let u=0;u<t.length;u++){const e=t[u];if(a[e.id]&&i[e.id]){const t={};for(const a in e.inputs){const n=e.inputs[a];r[n.id]&&(t[a]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,o.push(n)}}return o}(this.state.activeTape,e,a);if(!r&&0===s.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[a.id]=null==n?function(t){const e=Object(u.D)(Object(u.N)(t),"float32");return y.makeTensor(e,t,"float32")}(a.shape):n,function(t,e,n,r){for(let a=e.length-1;a>=0;a--){const s=e[a],i=[];if(s.outputs.forEach(e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const e in s.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const a=n(()=>o[e]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[e];if(!u.a(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${e}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=a;else{const e=t[i.id];t[i.id]=r(e,a),e.dispose()}}}}(t,s,t=>this.tidy(t),O);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(t){return u.b(u.u(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;u.b(e.every(t=>t instanceof h.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((t,e)=>{r[e]=t}),this.runKernelFunc((r,a)=>(n=t(...e,a),u.b(n.value instanceof h.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),u.b(u.u(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(t,r)=>{const a=n.gradFunc(t,r),s=Array.isArray(a)?a:[a];u.b(s.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),u.b(s.every(t=>t instanceof h.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return s.forEach((t,e)=>{i[e]=()=>t}),i})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Object(f.now)(),n=await this.backend.time(t);return n.wallMs=Object(f.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new m;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function g(){const t=Object(s.b)();if(null==t._tfengine){const e=new a.a(t);t._tfengine=new b(e)}return Object(a.c)(t._tfengine.ENV),Object(h.f)(()=>t._tfengine),t._tfengine}b.nextTensorId=0,b.nextVariableId=0;const y=g();function O(t,e){const n={a:t,b:e};return y.runKernelFunc((n,r)=>{const a=n.add(t,e);return r([t,e]),a},n,null,i.d)}},"b++O":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({isNaN_:function(t){const e=Object(s.a)(t,"x","isNaN"),n={x:e};return r.a.runKernelFunc(t=>t.isNaN(e),n,null,a.qb)}})},bTzI:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("Xr0w");const u=Object(i.a)({slice_:function(t,e,n){const i=Object(s.a)(t,"x","slice");if(0===i.rank)throw new Error("Slicing scalar is not possible");const u={x:i},c={begin:e,size:n};return r.a.runKernelFunc((t,r)=>{const[a,s]=o.parseSliceParams(i,e,n);return o.assertParamsValid(i,a,s),r([i]),t.slice(i,a,s)},u,null,a.vc,c)}})},bVZc:function(t,e,n){"use strict";(function(t){function n(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}e.__esModule=!0,e.default=void 0;var r="undefined"!==typeof t&&t.env&&!0,a=function(t){return"[object String]"===Object.prototype.toString.call(t)},s=function(){function t(t){var e=void 0===t?{}:t,n=e.name,s=void 0===n?"stylesheet":n,o=e.optimizeForSpeed,u=void 0===o?r:o,c=e.isBrowser,l=void 0===c?"undefined"!==typeof window:c;i(a(s),"`name` must be a string"),this._name=s,this._deletedRulePlaceholder="#"+s+"-deleted-rule____{}",i("boolean"===typeof u,"`optimizeForSpeed` must be a boolean"),this._optimizeForSpeed=u,this._isBrowser=l,this._serverSheet=void 0,this._tags=[],this._injected=!1,this._rulesCount=0;var d=this._isBrowser&&document.querySelector('meta[property="csp-nonce"]');this._nonce=d?d.getAttribute("content"):null}var e,s,o,u=t.prototype;return u.setOptimizeForSpeed=function(t){i("boolean"===typeof t,"`setOptimizeForSpeed` accepts a boolean"),i(0===this._rulesCount,"optimizeForSpeed cannot be when rules have already been inserted"),this.flush(),this._optimizeForSpeed=t,this.inject()},u.isOptimizeForSpeed=function(){return this._optimizeForSpeed},u.inject=function(){var t=this;if(i(!this._injected,"sheet already injected"),this._injected=!0,this._isBrowser&&this._optimizeForSpeed)return this._tags[0]=this.makeStyleTag(this._name),this._optimizeForSpeed="insertRule"in this.getSheet(),void(this._optimizeForSpeed||(r||console.warn("StyleSheet: optimizeForSpeed mode not supported falling back to standard mode."),this.flush(),this._injected=!0));this._serverSheet={cssRules:[],insertRule:function(e,n){return"number"===typeof n?t._serverSheet.cssRules[n]={cssText:e}:t._serverSheet.cssRules.push({cssText:e}),n},deleteRule:function(e){t._serverSheet.cssRules[e]=null}}},u.getSheetForTag=function(t){if(t.sheet)return t.sheet;for(var e=0;e<document.styleSheets.length;e++)if(document.styleSheets[e].ownerNode===t)return document.styleSheets[e]},u.getSheet=function(){return this.getSheetForTag(this._tags[this._tags.length-1])},u.insertRule=function(t,e){if(i(a(t),"`insertRule` accepts only strings"),!this._isBrowser)return"number"!==typeof e&&(e=this._serverSheet.cssRules.length),this._serverSheet.insertRule(t,e),this._rulesCount++;if(this._optimizeForSpeed){var n=this.getSheet();"number"!==typeof e&&(e=n.cssRules.length);try{n.insertRule(t,e)}catch(o){return r||console.warn("StyleSheet: illegal rule: \n\n"+t+"\n\nSee https://stackoverflow.com/q/20007992 for more info"),-1}}else{var s=this._tags[e];this._tags.push(this.makeStyleTag(this._name,t,s))}return this._rulesCount++},u.replaceRule=function(t,e){if(this._optimizeForSpeed||!this._isBrowser){var n=this._isBrowser?this.getSheet():this._serverSheet;if(e.trim()||(e=this._deletedRulePlaceholder),!n.cssRules[t])return t;n.deleteRule(t);try{n.insertRule(e,t)}catch(s){r||console.warn("StyleSheet: illegal rule: \n\n"+e+"\n\nSee https://stackoverflow.com/q/20007992 for more info"),n.insertRule(this._deletedRulePlaceholder,t)}}else{var a=this._tags[t];i(a,"old rule at index `"+t+"` not found"),a.textContent=e}return t},u.deleteRule=function(t){if(this._isBrowser)if(this._optimizeForSpeed)this.replaceRule(t,"");else{var e=this._tags[t];i(e,"rule at index `"+t+"` not found"),e.parentNode.removeChild(e),this._tags[t]=null}else this._serverSheet.deleteRule(t)},u.flush=function(){this._injected=!1,this._rulesCount=0,this._isBrowser?(this._tags.forEach((function(t){return t&&t.parentNode.removeChild(t)})),this._tags=[]):this._serverSheet.cssRules=[]},u.cssRules=function(){var t=this;return this._isBrowser?this._tags.reduce((function(e,n){return n?e=e.concat(Array.prototype.map.call(t.getSheetForTag(n).cssRules,(function(e){return e.cssText===t._deletedRulePlaceholder?null:e}))):e.push(null),e}),[]):this._serverSheet.cssRules},u.makeStyleTag=function(t,e,n){e&&i(a(e),"makeStyleTag acceps only strings as second parameter");var r=document.createElement("style");this._nonce&&r.setAttribute("nonce",this._nonce),r.type="text/css",r.setAttribute("data-"+t,""),e&&r.appendChild(document.createTextNode(e));var s=document.head||document.getElementsByTagName("head")[0];return n?s.insertBefore(r,n):s.appendChild(r),r},e=t,(s=[{key:"length",get:function(){return this._rulesCount}}])&&n(e.prototype,s),o&&n(e,o),t}();function i(t,e){if(!t)throw new Error("StyleSheet: "+e+".")}e.default=s}).call(this,n("8oxB"))},boNM:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}]},bzdD:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("o/e8"),a=n("CfTU"),s=n("parS"),i=n("VO80"),o=n("AV8V");const u=Object(i.a)({leakyRelu_:function(t,e=.2){const n=Object(r.a)(t,"x","leakyRelu");return Object(a.a)(Object(s.a)(Object(o.a)(e),n),n)}})},"c/ib":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.a)({resizeBilinear_:function(t,e,n=!1){const o=Object(s.a)(t,"images","resizeBilinear");i.b(3===o.rank||4===o.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),i.b(2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+e+".");let c=o,l=!1;3===o.rank&&(l=!0,c=Object(u.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const[d,h]=e,p={images:c},f={alignCorners:n,size:e},m=r.a.runKernelFunc((t,e)=>(e([c]),t.resizeBilinear(c,d,h,n)),p,null,a.gc,f);return l?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},c7gn:function(t,e,n){"use strict";n.d(e,"b",(function(){return o})),n.d(e,"a",(function(){return u})),n.d(e,"c",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"d",(function(){return d}));var r=n("szMd"),a=n("9JAK");const s=Object(a.a)("kernelRegistry",()=>new Map),i=Object(a.a)("gradRegistry",()=>new Map);function o(t,e){const n=h(t,e);return s.get(n)}function u(t){return i.get(t)}function c(t){const e=s.entries(),n=[];for(;;){const{done:r,value:a}=e.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===t&&n.push(i)}return n}function l(t){const{kernelName:e,backendName:n}=t,r=h(e,n);s.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),s.set(r,t)}function d(t){const{kernelName:e}=t;i.has(e)&&Object(r.b)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),i.set(e,t)}function h(t,e){return`${e}_${t}`}},c9N1:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("uBja"),o=n("VO80"),u=n("NclT");const c=Object(o.a)({conv2DBackpropInput_:function(t,e,n,o,c,l="NHWC",d){s.b(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let h=t,p=e,f=!1;3===e.rank&&(f=!0,p=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),h=[1,t[0],t[1],t[2]]),s.b(4===h.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+h.length+"."),s.b(4===p.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+p.rank),s.b(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const m="NHWC"===l?h[3]:h[1],b="NHWC"===l?p.shape[3]:p.shape[1];s.b(m===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`),s.b(b===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${b}) must match output depth for filter ${n.shape[3]}.`),null!=d&&s.b(s.v(c),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const g={dy:p,filter:n},y={strides:o,pad:c,dataFormat:l,dimRoundingMode:d,inputShape:h},O=r.a.runKernelFunc((t,e)=>{const r=i.g(l),a=i.a(h,n.shape,o,1,c,d,!1,r),s=t.conv2dDerInput(p,n,a);return e([p,n]),s},g,null,a.C,y);return f?Object(u.a)(O,[O.shape[1],O.shape[2],O.shape[3]]):O}})},cdtJ:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NclT");var u=n("VO80");function c(t){return null==t?null:0===t.rank?Object(o.a)(t,[t.size]):1===t.rank?t:2===t.rank?Object(o.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const l=Object(u.a)({batchNorm_:function(t,e,n,u,l,d){null==d&&(d=.001);const h=Object(s.a)(t,"x","batchNorm"),p=Object(s.a)(e,"mean","batchNorm"),f=Object(s.a)(n,"variance","batchNorm");let m,b;null!=l&&(m=Object(s.a)(l,"scale","batchNorm")),null!=u&&(b=Object(s.a)(u,"offset","batchNorm")),i.b(p.rank===f.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),i.b(null==b||p.rank===b.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),i.b(null==m||p.rank===m.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const g=function(t){let e;return e=0===t.rank||1===t.rank?Object(o.a)(t,[1,1,1,t.size]):2===t.rank?Object(o.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(h),y={x:g,scale:m,offset:b,mean:p,variance:f},O={varianceEpsilon:d},x=r.a.runKernelFunc((t,e)=>(e([g,p,f,m]),t.batchNorm(g,c(p),c(f),c(b),c(m),d)),y,null,a.eb,O);return Object(o.a)(x,h.shape)}})},dWjR:function(t,e,n){"use strict";function r(t,e=!1){console.log(t.toString(e))}n.d(e,"a",(function(){return r}))},dYAU:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({spaceToBatchND_:function(t,e,n){const o=Object(s.a)(t,"x","spaceToBatchND");i.b(o.rank>=1+e.length,()=>`input rank ${o.rank} should be > than [blockShape] ${e.length}`),i.b(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),i.b(o.shape.reduce((t,r,a)=>a>0&&a<=e.length?t&&(r+n[a-1][0]+n[a-1][1])%e[a-1]===0:t,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const u={x:o},c={blockShape:e,paddings:n};return r.a.runKernelFunc(t=>t.spaceToBatchND(o,e,n),u,null,a.yc,c)}})},dnXz:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("o/e8"),a=n("atXS"),s=n("3X4V"),i=n("uBja"),o=n("VO80"),u=n("NclT");const c=Object(o.a)({conv1d_:function(t,e,n,o,c="NWC",l=1,d){const h=Object(r.a)(t,"x","conv1d"),p=Object(r.a)(e,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1]])),a.b(3===f.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),a.b(3===p.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+p.rank+"."),null!=d&&a.b(a.v(o),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`),a.b(f.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`),a.b(i.h(n,l),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`),a.b("NWC"===c,()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`);const b=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),g=Object(u.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],O=[1,l],x=Object(s.a)(g,b,y,o,"NHWC",O,d);return m?Object(u.a)(x,[x.shape[2],x.shape[3]]):Object(u.a)(x,[x.shape[0],x.shape[2],x.shape[3]])}})},dsKV:function(t,e,n){"use strict";n.r(e),n.d(e,"makeTypesMatch",(function(){return i})),n.d(e,"assertTypesMatch",(function(){return o})),n.d(e,"isTensorInList",(function(){return u})),n.d(e,"getTensorsInContainer",(function(){return c}));var r=n("NNfn"),a=n("I79q"),s=n("atXS");function i(t,e){if(t.dtype===e.dtype)return[t,e];const n=Object(a.b)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function o(t,e){Object(s.b)(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function u(t,e){return e.some(e=>e.id===t.id)}function c(t){const e=[];return function t(e,n,a){if(null==e)return;if(e instanceof r.a)return void n.push(e);if(s=e,!Array.isArray(s)&&"object"!==typeof s)return;var s;const i=e;for(const r in i){const e=i[r];a.has(e)||(a.add(e),t(e,n,a))}}(t,e,new Set),e}},euyF:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this;e.next=function(){var t,n,r=e.w,a=e.X,s=e.i;return e.w=r=r+1640531527|0,n=a[s+34&127],t=a[s=s+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=a[s]=n^t,e.i=s,n+(r^r>>>16)|0},function(t,e){var n,r,a,s,i,o=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),a=0,s=-32;s<u;++s)e&&(r^=e.charCodeAt((s+32)%e.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(e&&e.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;t.w=i,t.X=o,t.i=a}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xor4096=u}(0,t,n("B9Yq"))}).call(this,n("YuTi")(t))},fjZN:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({atan_:function(t){const e=Object(s.a)(t,"x","atan"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.atan(e);return n([e]),r},n,null,a.l)}})},fmoR:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("BD40"),a=n("VO80"),s=n("1OSX");const i=Object(a.a)({truncatedNormal_:function(t,e=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s.a(e,n,a,!0,i),u=Object(r.a)(t,a);for(let r=0;r<u.values.length;r++)u.values[r]=o.nextValue();return u.toTensor()}})},ftYm:function(t,e,n){"use strict";function r(){if("undefined"!==typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function a(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(e),n.d(e,"isMobile",(function(){return r})),n.d(e,"isBrowser",(function(){return a}))},"g4+C":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.a)({depthwiseConv2d_:function(t,e,n,u,l="NHWC",d=[1,1],h){const p=Object(s.a)(t,"x","depthwiseConv2d"),f=Object(s.a)(e,"filter","depthwiseConv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.b(4===m.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),i.b(4===f.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+f.rank+"."),i.b(m.shape[3]===f.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),null!=h&&i.b(i.v(u),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${u}.`);const g={x:m,filter:f},y={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h},O=r.a.runKernelFunc((t,e)=>{null==d&&(d=[1,1]),i.b(o.h(n,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`);const r=o.a(m.shape,f.shape,n,d,u,h,!0),a=t.depthwiseConv2D(m,f,r);return e([m,f]),a},g,null,a.L,y);return b?Object(c.a)(O,[O.shape[1],O.shape[2],O.shape[3]]):O}})},g4m1:function(t,e,n){"use strict";n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return u})),n.d(e,"c",(function(){return c}));var r=n("AV8V"),a=n("lg8H");function s(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,a=t.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(e,t[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(t,e,n||i)}(t,e,n),a=r<0?-(r+1):r;t.splice(a,0,e)}function i(t,e){return t>e?1:t<e?-1:0}function o(t,e,n,r,a){return l(t,e,n,r,a,0).selectedIndices}function u(t,e,n,r,a,s){return l(t,e,n,r,a,0,!1,s,!0)}function c(t,e,n,r,a,s){return l(t,e,n,r,a,s,!0)}function l(t,e,n,i,o,u,c=!1,l=!1,f=!1){const m=[];for(let r=0;r<e.length;r++)e[r]>o&&m.push({score:e[r],boxIndex:r,suppressBeginIndex:0});m.sort(p);const b=u>0?-.5/u:0,g=[],y=[];for(;g.length<n&&m.length>0;){const e=m.pop(),{score:n,boxIndex:r,suppressBeginIndex:a}=e;if(n<o)break;let u=!1;for(let s=g.length-1;s>=a;--s){const n=d(t,r,g[s]);if(n>=i){u=!0;break}if(e.score=e.score*h(i,b,n),e.score<=o)break}e.suppressBeginIndex=g.length,u||(e.score===n?(g.push(r),y.push(e.score)):e.score>o&&s(m,e,p))}const O=g.length,x=n-O;l&&x>0&&(g.push(...new Array(x).fill(0)),y.push(...new Array(x).fill(0)));const w={selectedIndices:Object(a.a)(g,"int32")};return c&&(w.selectedScores=Object(a.a)(y,"float32")),f&&(w.validOutputs=Object(r.a)(O,"int32")),w}function d(t,e,n){const r=t.subarray(4*e,4*e+4),a=t.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(s,c),b=Math.max(i,l),g=Math.min(o,d),y=Math.min(u,h),O=Math.max(g-m,0)*Math.max(y-b,0);return O/(p+f-O)}function h(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function p(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}},gErV:function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("3rNm"),o=n("TyAZ"),u=n("E1lT"),c=n("wCH+"),l=n("VO80"),d=n("oAkI"),h=n("4FMF");const p=Object(l.a)({logSoftmax_:function(t,e=-1){const n=Object(s.a)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const l={logits:n},p={axis:e};return r.a.runKernelFunc((n,r)=>{const a=Object(c.a)(t,e,!0),s=Object(d.a)(t,a),l=Object(d.a)(Object(i.a)(s,"float32"),Object(u.a)(Object(h.a)(Object(o.a)(s),e,!0)));return r([l]),l},l,null,a.yb,p)}})},hNYx:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("lg8H"),o=n("Wiw4");function u(t,e,n=1,u="float32"){if(0===n)throw new Error("Cannot have a step of zero");const c={start:t,stop:e,step:n,dtype:u};return r.a.runKernelFunc(()=>{if(t===e||t<e&&n<0||e<t&&n>1)return Object(o.a)([0],u);const r=Math.abs(Math.ceil((e-t)/n)),a=Object(s.F)(r,u);e<t&&1===n&&(n=-1),a[0]=t;for(let t=1;t<a.length;t++)a[t]=a[t-1]+n;return Object(i.a)(a,u)},{},null,a.ac,c)}},hT5K:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({unique_:function(t,e=0){const n=Object(s.a)(t,"x","unique",null);Object(i.b)(n.rank>0,()=>"The input tensor must be at least 1D");const o={x:n},u={axis:e},[c,l]=r.a.runKernel(a.Nc,o,u);return{values:c,indices:l}}})},hinG:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("BD40"),a=n("VO80"),s=n("1OSX");const i=Object(a.a)({randomUniform_:function(t,e=0,n=1,a="float32",i){const o=Object(r.a)(t,a),u=new s.b(e,n,null,i);for(let r=0;r<o.values.length;r++)o.values[r]=u.nextValue();return o.toTensor()}})},"i/oj":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("o0+U");const u=Object(i.a)({scatterND_:function(t,e,n){const i=Object(s.a)(t,"indices","scatterND","int32"),u=Object(s.a)(e,"updates","scatterND");o.b(u,i,n);const c={indices:i,updates:u},l={shape:n};return r.a.runKernelFunc(t=>t.scatterND(i,u,n),c,null,a.oc,l)}})},"i4e/":function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a}));class r{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{time(t){return s("time")}read(t){return s("read")}readSync(t){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(t){return s("disposeData")}write(t,e,n){return s("write")}move(t,e,n,r){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return s("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:a,activation:i,preluActivationWeights:o}){return s("fusedBatchMatMul")}slice(t,e,n){return s("slice")}stridedSlice(t,e,n,r){return s("stridedSlice")}unstack(t,e){return s("unstack")}reverse(t,e){return s("reverse")}concat(t,e){return s("concat")}neg(t){return s("neg")}add(t,e){return s("add")}addN(t){return s("addN")}subtract(t,e){return s("subtract")}multiply(t,e){return s("multiply")}realDivide(t,e){return s("realDivide")}floorDiv(t,e){return s("floorDiv")}sum(t,e){return s("sum")}prod(t,e){return s("prod")}unsortedSegmentSum(t,e,n){return s("unsortedSegmentSum")}argMin(t,e){return s("argMin")}argMax(t,e){return s("argMax")}equal(t,e){return s("equal")}notEqual(t,e){return s("notEqual")}less(t,e){return s("less")}lessEqual(t,e){return s("lessEqual")}greater(t,e){return s("greater")}greaterEqual(t,e){return s("greaterEqual")}logicalNot(t){return s("logicalNot")}logicalAnd(t,e){return s("logicalAnd")}logicalOr(t,e){return s("logicalOr")}where(t){return s("where")}select(t,e,n){return s("select")}topk(t,e,n){return s("topk")}min(t,e){return s("min")}minimum(t,e){return s("minimum")}mod(t,e){return s("mod")}max(t,e){return s("max")}maximum(t,e){return s("maximum")}all(t,e){return s("all")}any(t,e){return s("any")}squaredDifference(t,e){return s("squaredDifference")}ceil(t){return s("ceil")}floor(t){return s("floor")}round(t){return s("round")}sign(t){return s("sign")}isNaN(t){return s("isNaN")}isInf(t){return s("isInf")}isFinite(t){return s("isFinite")}pow(t,e){return s("pow")}exp(t){return s("exp")}expm1(t){return s("expm1")}softmax(t,e){return s("softmax")}log(t){return s("log")}log1p(t){return s("log1p")}sqrt(t){return s("sqrt")}rsqrt(t){return s("rsqrt")}square(t){return s("square")}reciprocal(t){return s("reciprocal")}relu(t){return s("relu")}relu6(t){return s("relu6")}prelu(t,e){return s("prelu")}elu(t){return s("elu")}eluDer(t,e){return s("eluDer")}selu(t){return s("selu")}int(t){return s("int")}clip(t,e,n){return s("clip")}abs(t){return s("abs")}complexAbs(t){return s("complexAbs")}sigmoid(t){return s("sigmoid")}softplus(t){return s("softplus")}sin(t){return s("sin")}cos(t){return s("cos")}tan(t){return s("tan")}asin(t){return s("asin")}acos(t){return s("acos")}atan(t){return s("atan")}atan2(t,e){return s("atan2")}sinh(t){return s("sinh")}cosh(t){return s("cosh")}tanh(t){return s("tanh")}asinh(t){return s("asinh")}acosh(t){return s("acosh")}atanh(t){return s("atanh")}erf(t){return s("erf")}step(t,e){return s("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:i}){return s("fusedConv2d")}conv2d(t,e,n){return s("conv2d")}conv2dDerInput(t,e,n){return s("conv2dDerInput")}conv2dDerFilter(t,e,n){return s("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:i}){return s("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return s("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return s("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return s("depthwiseConv2DDerFilter")}conv3d(t,e,n){return s("conv3d")}conv3dDerInput(t,e,n){return s("conv3dDerInput")}conv3dDerFilter(t,e,n){return s("conv3dDerFilter")}maxPool(t,e){return s("maxPool")}maxPoolBackprop(t,e,n,r){return s("maxPoolBackprop")}avgPool(t,e){return s("avgPool")}avgPoolBackprop(t,e,n){return s("avgPoolBackprop")}avgPool3d(t,e){return s("avgPool3d")}avgPool3dBackprop(t,e,n){return s("avgPool3dBackprop")}maxPool3d(t,e){return s("maxPool3d")}maxPool3dBackprop(t,e,n,r){return s("maxPool3dBackprop")}reshape(t,e){return s("reshape")}cast(t,e){return s("cast")}tile(t,e){return s("tile")}pad(t,e,n){return s("pad")}transpose(t,e){return s("transpose")}gather(t,e,n){return s("gather")}gatherND(t,e){return s("gatherND")}scatterND(t,e,n){return s("scatterND")}batchToSpaceND(t,e,n){return s("batchToSpaceND")}spaceToBatchND(t,e,n){return s("spaceToBatchND")}resizeBilinear(t,e,n,r){return s("resizeBilinear")}resizeBilinearBackprop(t,e,n){return s("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return s("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return s("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,a,i){return s("batchNorm")}localResponseNormalization4D(t,e,n,r,a){return s("localResponseNormalization4D")}LRNGrad(t,e,n,r,a,i,o){return s("LRNGrad")}multinomial(t,e,n,r){return s("multinomial")}oneHot(t,e,n,r){return s("oneHot")}cumsum(t,e,n,r){return s("cumsum")}nonMaxSuppression(t,e,n,r,a){return s("nonMaxSuppression")}fft(t){return s("fft")}ifft(t){return s("ifft")}complex(t,e){return s("complex")}real(t){return s("real")}imag(t){return s("imag")}cropAndResize(t,e,n,r,a,i){return s("cropAndResize")}depthToSpace(t,e,n){return s("depthToSpace")}split(t,e,n){return s("split")}sparseToDense(t,e,n,r){return s("sparseToDense")}diag(t){return s("diag")}fill(t,e,n){return s("fill")}onesLike(t){return s("onesLike")}zerosLike(t){return s("zerosLike")}linspace(t,e,n){return s("linspace")}dispose(){return s("dispose")}}function s(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},i8k8:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({maxPoolWithArgmax_:function(t,e,n,i,o=!1){const u={x:Object(s.a)(t,"x","maxPoolWithArgmax")},c={filterSize:e,strides:n,pad:i,includeBatchInIndex:o},l=r.a.runKernel(a.Hb,u,c);return{result:l[0],indexes:l[1]}}})},iIjY:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({tanh_:function(t){const e=Object(s.a)(t,"x","tanh"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.tanh(e);return n([r]),r},n,null,a.Jc)}})},ie1u:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,a=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^a,e.a=a-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.tychei=u}(0,t,n("B9Yq"))}).call(this,n("YuTi")(t))},iuCH:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({abs_:function(t){const e=Object(s.a)(t,"x","abs"),n={x:e};return r.a.runKernelFunc((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e)),n,null,a.a)}})},jLCh:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("uBja"),i=n("VO80"),o=n("NclT");const u=Object(i.a)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,i,u,c=[1,1],l){let d=e,h=!1;3===e.rank&&(h=!0,d=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const p={dy:d,filter:n},f={strides:i,pad:u,dimRoundingMode:l,dilations:c,inputShape:t},m=r.a.runKernelFunc(e=>{const r=s.a(t,n.shape,i,c,u,l,!0);return e.depthwiseConv2DDerInput(d,n,r)},p,null,a.N,f);return h?Object(o.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},jXH2:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({tile_:function(t,e){const n=Object(s.a)(t,"x","tile",null);i.b(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const o=[n],u={x:n},c={reps:e};return r.a.runKernelFunc((t,r)=>{const a=t.tile(n,e);return r([n]),a},u,null,a.Kc,c,o)}})},jgXy:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("3rNm"),u=n("VO80");const c=Object(u.a)({erf_:function(t){let e=Object(s.a)(t,"x","erf");i.b("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Object(o.a)(e,"float32"));const n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.erf(e);return n([e]),r},n,null,a.V)}})},k7Jv:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("o/e8"),s=n("VO80");const i=Object(s.a)({square_:function(t){const e=Object(a.a)(t,"x","square"),n=[e];return r.a.runKernelFunc((t,n)=>(n([e]),t.square(e)),{x:e},null,"Square",{},n,[])}})},k9tH:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({mirrorPad_:function(t,e,n){i.b("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const o=Object(s.a)(t,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.b(e.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${e.length}.`);const u="reflect"===n?1:0;for(let r=0;r<o.rank;r++)i.b(2===e[r].length,()=>"Invalid number of paddings. Must be length of 2 each."),i.b(e[r][0]>=0&&e[r][0]<=o.shape[r]-u&&e[r][1]>=0&&e[r][1]<=o.shape[r]-u,()=>`Padding in dimension ${r} cannot be greater than or equal to ${o.shape[r]-u} or less than 0 for input of shape `+o.shape);const c={paddings:e,mode:n},l={x:o};return r.a.runKernel(a.Mb,l,c)}})},kRdc:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.a)({add_:function(t,e){let n=Object(i.a)(t,"a","add"),o=Object(i.a)(e,"b","add");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.add(n,o);return e([n,o]),r},u,null,a.d)}})},"kVK+":function(t,e){e.read=function(t,e,n,r,a){var s,i,o=8*a-r-1,u=(1<<o)-1,c=u>>1,l=-7,d=n?a-1:0,h=n?-1:1,p=t[e+d];for(d+=h,s=p&(1<<-l)-1,p>>=-l,l+=o;l>0;s=256*s+t[e+d],d+=h,l-=8);for(i=s&(1<<-l)-1,s>>=-l,l+=r;l>0;i=256*i+t[e+d],d+=h,l-=8);if(0===s)s=1-c;else{if(s===u)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,r),s-=c}return(p?-1:1)*i*Math.pow(2,s-r)},e.write=function(t,e,n,r,a,s){var i,o,u,c=8*s-a-1,l=(1<<c)-1,d=l>>1,h=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:s-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,i=l):(i=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-i))<1&&(i--,u*=2),(e+=i+d>=1?h/u:h*Math.pow(2,1-d))*u>=2&&(i++,u/=2),i+d>=l?(o=0,i=l):i+d>=1?(o=(e*u-1)*Math.pow(2,a),i+=d):(o=e*Math.pow(2,d-1)*Math.pow(2,a),i=0));a>=8;t[n+p]=255&o,p+=f,o/=256,a-=8);for(i=i<<a|o,c+=a;c>0;t[n+p]=255&i,p+=f,i/=256,c-=8);t[n+p-f]|=128*m}},kXpR:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("3rNm");const u=Object(i.a)({relu_:function(t){const e=Object(s.a)(t,"x","relu"),n={x:e};return r.a.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?Object(o.a)(e,"int32"):t.relu(e)),n,null,a.dc)}})},kaMP:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT"),c=n("0+74");const l=Object(o.a)({gather_:function(t,e,n=0){const o=Object(s.a)(t,"x","gather"),l=Object(s.a)(e,"indices","gather","int32"),d={x:o,indices:l},h={axis:n};return r.a.runKernelFunc((t,e)=>{const r=Object(i.I)(n,o.shape)[0],a=Object(c.collectGatherOpShapeInfo)(o,l,r),s=t.gather(o,Object(u.a)(l,[l.size]),r);return e([o,l]),Object(u.a)(s,a.outputShape)},d,null,a.ib,h)}})},l0gX:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("3rNm"),u=n("uBja"),c=n("VO80"),l=n("NclT");const d=Object(c.a)({avgPool_:function(t,e,n,c,d){const h=Object(s.a)(t,"x","avgPool","float32");i.b(u.h(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let p=h,f=!1;3===h.rank&&(f=!0,p=Object(l.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.b(4===p.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`),null!=d&&i.b(i.v(c),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const m={x:p},b={filterSize:e,strides:n,pad:c,dimRoundingMode:d};let g=r.a.runKernelFunc((t,r)=>{const a=u.e(p.shape,e,n,1,c,d);return r([p]),1===a.filterWidth&&1===a.filterHeight&&i.a(a.inShape,a.outShape)?p.clone():t.avgPool(p,a)},m,null,a.o,b);return g=Object(o.a)(g,h.dtype),f?Object(l.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},"lIk/":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},lSNA:function(t,e){t.exports=function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}},lg8H:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("o/e8"),a=n("atXS"),s=n("WVnj");function i(t,e){Object(a.d)(t);const n=Object(r.c)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(s.a)(t,null,n,e)}},lwAK:function(t,e,n){"use strict";var r;e.__esModule=!0,e.AmpStateContext=void 0;var a=((r=n("q1tI"))&&r.__esModule?r:{default:r}).default.createContext({});e.AmpStateContext=a},mEeB:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},"n+ZZ":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.a)({maxPool_:function(t,e,n,u,l){const d=Object(s.a)(t,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.b(4===h.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`),i.b(o.h(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=l&&i.b(i.v(u),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const f={x:h},m={filterSize:e,strides:n,pad:u,dimRoundingMode:l},b=r.a.runKernelFunc((t,r)=>{const a=o.e(h.shape,e,n,1,u,l);let s;return s=1===a.filterWidth&&1===a.filterHeight&&i.a(a.inShape,a.outShape)?h.clone():t.maxPool(h,a),r([h,s]),s},f,null,a.Db,m);return p?Object(c.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},"n/2y":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({softplus_:function(t){const e=Object(s.a)(t,"x","softplus"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.softplus(e);return n([e]),r},n,null,a.xc)}})},njhW:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({elu_:function(t){const e=Object(s.a)(t,"x","elu"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.elu(e);return n([r]),r},n,null,a.S)}})},nnua:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},"o/e8":function(t,e,n){"use strict";n.d(e,"c",(function(){return u})),n.d(e,"a",(function(){return l})),n.d(e,"b",(function(){return d}));var r=n("auKK"),a=n("szMd"),s=n("NNfn"),i=n("atXS"),o=n("6366");function u(t,e){let n=t;if(Object(i.A)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Object(i.A)(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Object(a.b)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,n,r){if(r=r||[],!Array.isArray(e)&&!Object(i.A)(e))return void Object(i.b)(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);Object(i.b)(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Object(i.b)(e.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${e.length} elements`);const a=n.slice(1);for(let s=0;s<e.length;++s)t(e[s],a,r.concat(s))}(t,r,[]),r}function c(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function l(t,e,n,a="numeric"){if(t instanceof s.a)return c(a,t.dtype,e,n),t;let l=Object(i.r)(t);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),c(a,l,e,n),null==t||!Object(i.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(t,l);Object(i.A)(t)||Array.isArray(t)||(t=[t]);const h="string"!==l?Object(o.toTypedArray)(t,l):Object(i.m)(t,[],!0);return r.a.makeTensor(h,d,l)}function d(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((t,r)=>l(t,`${e}[${r}]`,n),r)}},"o0+U":function(t,e,n){"use strict";n.d(e,"c",(function(){return a})),n.d(e,"b",(function(){return s})),n.d(e,"a",(function(){return i}));var r=n("atXS");function a(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${e.shape}, shape: ${t}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(t.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+t.length-r)throw new Error(s+" update.rank != "+(a+t.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==e.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==t[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${t[i+a]})`)}function s(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}a(n,e,t)}function i(t,e,n){const a=e.shape.length,s=a>1?e.shape[a-1]:1,i=n.length;let o=1;for(let r=s;r<i;++r)o*=n[r];const u=s<1?1:s;return{sliceRank:s,numUpdates:Object(r.N)(e.shape)/u,sliceSize:o,strides:[...Object(r.j)(n.slice(0,s)),1],outputSize:Object(r.N)(n)}}},o3Rt:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({acos_:function(t){const e=Object(s.a)(t,"x","acos"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.acos(e);return n([e]),r},n,null,a.b)}})},oAkI:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.a)({sub_:function(t,e){let n=Object(i.a)(t,"a","sub"),o=Object(i.a)(e,"b","sub");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.subtract(n,o);return e([n,o]),r},u,null,a.Gc)}})},"oJu+":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({zerosLike_:function(t){const e=Object(s.a)(t,"x","zerosLike"),n={x:e};return r.a.runKernelFunc(t=>t.zerosLike(e),n,null,a.Qc)}})},p4Cv:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("AoCb"),a=n("o/e8");const s=async function(t){const e=Object(a.a)(t,"condition","whereAsync","bool"),n=await e.data(),s=Object(r.a)(e.shape,n);return t!==e&&e.dispose(),s}},"pJ3+":function(t,e,n){var r;!function(a,s){var i,o=this,u=s.pow(256,6),c=s.pow(2,52),l=2*c;function d(t,e,n){var r=[],d=f(function t(e,n){var r,a=[],s=typeof e;if(n&&"object"==s)for(r in e)try{a.push(t(e[r],n-1))}catch(i){}return a.length?a:"string"==s?e:e+"\0"}((e=1==e?{entropy:!0}:e||{}).entropy?[t,m(a)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(256):(t=new Uint8Array(256),(o.crypto||o.msCrypto).getRandomValues(t)),m(t)}catch(r){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,m(a)]}}():t,3),r),b=new h(r),g=function(){for(var t=b.g(6),e=u,n=0;t<c;)t=256*(t+n),e*=256,n=b.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return g.int32=function(){return 0|b.g(4)},g.quick=function(){return b.g(4)/4294967296},g.double=g,f(m(b.S),a),(e.pass||n||function(t,e,n,r){return r&&(r.S&&p(r,b),t.state=function(){return p(b,{})}),n?(s.random=t,e):t})(g,d,"global"in e?e.global:this==s,e.state)}function h(t){var e,n=t.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(t=[n++]);a<256;)i[a]=a++;for(a=0;a<256;a++)i[a]=i[s=255&s+t[a%n]+(e=i[a])],i[s]=e;(r.g=function(t){for(var e,n=0,a=r.i,s=r.j,i=r.S;t--;)e=i[a=255&a+1],n=256*n+i[255&(i[a]=i[s=255&s+e])+(i[s]=e)];return r.i=a,r.j=s,n})(256)}function p(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function f(t,e){for(var n,r=t+"",a=0;a<r.length;)e[255&a]=255&(n^=19*e[255&a])+r.charCodeAt(a++);return m(e)}function m(t){return String.fromCharCode.apply(0,t)}if(s.seedrandom=d,f(s.random(),a),t.exports){t.exports=d;try{i=n(2)}catch(b){}}else void 0===(r=function(){return d}.call(e,n,e,t))||(t.exports=r)}([],Math)},pJ6O:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xorwow=u}(0,t,n("B9Yq"))}).call(this,n("YuTi")(t))},parS:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.a)({mul_:function(t,e){let n=Object(i.a)(t,"a","mul"),o=Object(i.a)(e,"b","mul");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.multiply(n,o);return e([n,o]),r},u,null,a.Ob)}})},"qA+V":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},r9q9:function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n("o/e8"),a=n("atXS"),s=n("kRdc"),i=n("NuWS"),o=n("TyAZ"),u=n("E1lT"),c=n("wCH+"),l=n("VO80"),d=n("NclT"),h=n("oAkI"),p=n("4FMF");const f=Object(l.a)({logSumExp_:function(t,e=null,n=!1){const l=Object(r.a)(t,"x","logSumExp"),f=Object(a.I)(e,l.shape),m=Object(c.a)(l,f,!0),b=Object(h.a)(l,m),g=Object(o.a)(b),y=Object(p.a)(g,f),O=Object(u.a)(y),x=Object(s.a)(Object(d.a)(m,O.shape),O);if(n){const t=Object(i.e)(x.shape,f);return Object(d.a)(x,t)}return x}})},rm0a:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("VO80"),c=n("NclT"),l=n("yRKQ");const d=Object(u.a)({min_:function(t,e=null,n=!1){const u=Object(s.a)(t,"x","min"),d={x:u},h={axis:e,keepDims:n};return r.a.runKernelFunc((t,r)=>{const a=Object(i.I)(e,u.shape);let s=a;const d=o.f(s,u.rank);let h=u;null!=d&&(h=Object(l.a)(u,d),s=o.g(s.length,u.rank));const p=t.min(h,s);null!=d&&h.dispose();let f=p;if(n){const t=o.e(f.shape,a);f=Object(c.a)(p,t),p.dispose()}return r([u,f]),f},d,null,a.Kb,h)}})},rqsJ:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},s57M:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({selu_:function(t){const e=Object(s.a)(t,"x","selu"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.selu(e);return n([e]),r},n,null,a.qc)}})},shz4:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.a)({lessEqual_:function(t,e){let n=Object(i.a)(t,"a","lessEqual"),u=Object(i.a)(e,"b","lessEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc((t,e)=>{const r=t.lessEqual(n,u);return e([n,u]),r},c,null,a.ub)}})},szMd:function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return o}));var r=n("atXS");class a{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Object(r.x)(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("="))),e}(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)})}}}function s(){return i}let i=null;function o(t){i=t}},tQDl:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({reciprocal_:function(t){const e=Object(s.a)(t,"x","reciprocal"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.reciprocal(e);return n([e]),r},n,null,a.cc)}})},th0q:function(t,e,n){"use strict";n.d(e,"a",(function(){return m}));var r=n("atXS"),a=n("B3db"),s=n("ZJ6U"),i=n("JLAb"),o=n("VO80"),u=n("17CO"),c=n("NclT"),l=n("bTzI"),d=n("RbuM"),h=n("Wiw4"),p=n("oJu+"),f=n("Grcp");const m=Object(o.a)({rfft_:function(t,e){Object(r.b)("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got "+t.dtype);let n=t.shape[t.shape.length-1];const o=t.size/n;let m;if(null!=e&&e<n){const r=t.shape.map(t=>0),a=t.shape.map(t=>t);a[t.shape.length-1]=e,m=Object(l.a)(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,m=Object(s.a)([t,Object(h.a)(r)],t.shape.length-1),n=e}else m=t;const b=Object(p.a)(m),g=Object(c.a)(Object(a.a)(m,b),[o,n]),y=Object(f.a)(g),O=Math.floor(n/2)+1,x=Object(u.a)(y),w=Object(i.a)(y),v=Object(d.a)(x,[O,n-O],x.shape.length-1),j=Object(d.a)(w,[O,n-O],w.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=O,Object(c.a)(Object(a.a)(v[0],j[0]),I)}})},uBja:function(t,e,n){"use strict";n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return s})),n.d(e,"f",(function(){return i})),n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return u})),n.d(e,"c",(function(){return c})),n.d(e,"i",(function(){return f})),n.d(e,"h",(function(){return m})),n.d(e,"g",(function(){return b}));var r=n("atXS");function a(t,e,n,r,a="NHWC",s){return o(t,[...e,t[3]],n,s,r,null,null,b(a))}function s(t,e,n,r,a,s,i="channelsLast"){const[u,c]=l(e);let d;if("channelsLast"===i)d=[u,c,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);d=[u,c,t[1],t[1]]}return o(t,d,n,r,a,s,!1,i)}function i(t,e,n,r,a,s,i="NDHWC"){const[o,c,l]=d(e);let h,p;if("NDHWC"===i)p="channelsLast",h=[o,c,l,t[4],t[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);p="channelsFirst",h=[o,c,l,t[1],t[1]]}return u(t,h,n,r,a,!1,p,s)}function o(t,e,n,a,s,i,o=!1,u="channelsLast"){let[d,f,m,b]=[-1,-1,-1,-1];if("channelsLast"===u)[d,f,m,b]=t;else{if("channelsFirst"!==u)throw new Error("Unknown dataFormat "+u);[d,b,f,m]=t}const[g,y,,O]=e,[x,w]=l(n),[v,j]=l(a),I=h(g,v),k=h(y,j),{padInfo:N,outHeight:S,outWidth:C}=function(t,e,n,a,s,i,o,u,l){let d,h,f;if("number"===typeof t){d={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,a,s){null==a&&(a=c(t,e,n));const i=t[0],o=t[1],u=p((i-e+2*a)/n+1,s);r.b(r.v(u),()=>`The output # of rows (${u}) must be an integer. Change the stride and/or zero pad parameters`);const l=p((o-e+2*a)/n+1,s);return r.b(r.v(l),()=>`The output # of columns (${l}) must be an integer. Change the stride and/or zero pad parameters`),[u,l]}([e,n],i,a,t,u);h=s[0],f=s[1]}else if("same"===t){h=Math.ceil(e/a),f=Math.ceil(n/s);const t=Math.max(0,(h-1)*a+i-e),r=Math.max(0,(f-1)*s+o-n),u=Math.floor(t/2),c=t-u,l=Math.floor(r/2);d={top:u,bottom:c,left:l,right:r-l,type:"SAME"}}else if("valid"===t)d={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-i+1)/a),f=Math.ceil((n-o+1)/s);else{if("object"!==typeof t)throw Error("Unknown padding parameter: "+t);{const r="channelsLast"===l?t[1][0]:t[2][0],c="channelsLast"===l?t[1][1]:t[2][1],m="channelsLast"===l?t[2][0]:t[3][0],b="channelsLast"===l?t[2][1]:t[3][1];d={top:r,bottom:c,left:m,right:b,type:0===r&&0===c&&0===m&&0===b?"VALID":"EXPLICIT"},h=p((e-i+r+c)/a+1,u),f=p((n-o+m+b)/s+1,u)}}return{padInfo:d,outHeight:h,outWidth:f}}(s,f,m,x,w,I,k,i,u),T=o?O*b:O;let A;return"channelsFirst"===u?A=[d,T,S,C]:"channelsLast"===u&&(A=[d,S,C,T]),{batchSize:d,dataFormat:u,inHeight:f,inWidth:m,inChannels:b,outHeight:S,outWidth:C,outChannels:T,padInfo:N,strideHeight:x,strideWidth:w,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:k,dilationHeight:v,dilationWidth:j,inShape:t,outShape:A,filterShape:e}}function u(t,e,n,a,s,i=!1,o="channelsLast",u){let[l,f,m,b,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[l,f,m,b,g]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[l,g,f,m,b]=t}const[y,O,x,,w]=e,[v,j,I]=d(n),[k,N,S]=d(a),C=h(y,k),T=h(O,N),A=h(x,S),{padInfo:E,outDepth:R,outHeight:$,outWidth:F}=function(t,e,n,a,s,i,o,u,l,d,h){let f,m,b,g;if("number"===typeof t){f={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,a,s,i){null==s&&(s=c(t,e,a));const o=t[0],u=t[1],l=t[2],d=p((o-e+2*s)/a+1,i);r.b(r.v(d),()=>`The output # of depths (${d}) must be an integer. Change the stride and/or zero pad parameters`);const h=p((u-e+2*s)/a+1,i);r.b(r.v(h),()=>`The output # of rows (${h}) must be an integer. Change the stride and/or zero pad parameters`);const f=p((l-e+2*s)/a+1,i);return r.b(r.v(f),()=>`The output # of columns (${f}) must be an integer. Change the stride and/or zero pad parameters`),[d,h,f,n]}([e,n,a,1],u,1,s,t,h);m=i[0],b=i[1],g=i[2]}else if("same"===t){m=Math.ceil(e/s),b=Math.ceil(n/i),g=Math.ceil(a/o);const t=(m-1)*s+u-e,r=(b-1)*i+l-n,c=(g-1)*o+d-a,h=Math.floor(t/2),p=t-h,y=Math.floor(r/2),O=r-y,x=Math.floor(c/2);f={top:y,bottom:O,left:x,right:c-x,front:h,back:p,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);f={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((e-u+1)/s),b=Math.ceil((n-l+1)/i),g=Math.ceil((a-d+1)/o)}return{padInfo:f,outDepth:m,outHeight:b,outWidth:g}}(s,f,m,b,v,j,I,C,T,A,u),D=i?w*g:w;let _;return"channelsFirst"===o?_=[l,D,R,$,F]:"channelsLast"===o&&(_=[l,R,$,F,D]),{batchSize:l,dataFormat:o,inDepth:f,inHeight:m,inWidth:b,inChannels:g,outDepth:R,outHeight:$,outWidth:F,outChannels:D,padInfo:E,strideDepth:v,strideHeight:j,strideWidth:I,filterDepth:y,filterHeight:O,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:T,effectiveFilterWidth:A,dilationDepth:k,dilationHeight:N,dilationWidth:S,inShape:t,outShape:_,filterShape:e}}function c(t,e,n,r=1){const a=h(e,r);return Math.floor((t[0]*(n-1)-n+a)/2)}function l(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function d(t){return"number"===typeof t?[t,t,t]:t}function h(t,e){return e<=1?t:t+(t-1)*(e-1)}function p(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function f(t){const[e,n,r]=l(t);return 1===e&&1===n&&1===r}function m(t,e){return f(t)||f(e)}function b(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}},uDiL:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xor128=u}(0,t,n("B9Yq"))}).call(this,n("YuTi")(t))},ubnP:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.a)({equal_:function(t,e){let n=Object(i.a)(t,"a","equal"),u=Object(i.a)(e,"b","equal");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc(t=>t.equal(n,u),c,null,a.U)}})},ukBL:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({gatherND_:function(t,e){const n=Object(s.a)(e,"indices","gatherND","int32"),i=Object(s.a)(t,"x","gatherND"),o={params:i,indices:n};return r.a.runKernelFunc(t=>t.gatherND(i,n),o,null,a.hb)}})},ulO0:function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n("auKK"),a=n("wE5H"),s=n("wFtI"),i=n("o/e8"),o=n("atXS"),u=n("3rNm"),c=n("uBja"),l=n("VO80"),d=n("NclT");const h=Object(l.a)({avgPool3d_:function(t,e,n,l,h,p="NDHWC",f){null==f?f=[1,1,1]:Object(a.b)("dilations is deprecated, this field will be gone in v3.0.0.");const m=Object(i.a)(t,"x","avgPool3d","float32");let b=m,g=!1;4===m.rank&&(g=!0,b=Object(d.a)(m,[1,m.shape[0],m.shape[1],m.shape[2],m.shape[3]])),o.b(5===b.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${b.rank}.`),o.b("NDHWC"===p,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+p),o.b(c.h(n,f),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${f}'`),null!=h&&o.b(o.v(l),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${l}.`);const y={x:b},O={filterSize:e,strides:n,pad:l,dimRoundingMode:h,dataFormat:p,dilations:f};let x=r.a.runKernelFunc((t,r)=>{null==f&&(f=[1,1,1]);const a=c.f(b.shape,e,n,f,l,h,p);return r([b]),t.avgPool3d(b,a)},y,null,s.p,O);return x=Object(u.a)(x,b.dtype),g?Object(d.a)(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}})},uy0A:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.a)({greaterEqual_:function(t,e){let n=Object(i.a)(t,"a","greaterEqual"),u=Object(i.a)(e,"b","greaterEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc((t,e)=>{const r=t.greaterEqual(n,u);return e([n,u]),r},c,null,a.kb)}})},vGLV:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI");var s=n("o/e8"),i=n("VO80");const o=Object(i.a)({sparseToDense_:function(t,e,n,i=0){const o=Object(s.a)(t,"sparseIndices","sparseToDense","int32"),u=Object(s.a)(e,"sparseValues","sparseToDense"),c=Object(s.a)(i,"defaultValue","sparseToDense",u.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const a=t.rank>0?t.shape[0]:1,s=t.rank>1?t.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${a}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,u,n,c);const l={sparseIndices:o,sparseValues:u,defaultValue:c},d={outputShape:n};return r.a.runKernelFunc(t=>t.sparseToDense(o,u,n,c),l,null,a.zc,d)}})},vc8R:function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"d",(function(){return i})),n.d(e,"f",(function(){return o})),n.d(e,"c",(function(){return u})),n.d(e,"e",(function(){return c})),n.d(e,"a",(function(){return l}));var r=n("+hG3");function a(t,e){return s(t,e)}function s(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const a=e(t);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(c(t)){const a=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const o=s(t[i],e,n,r);a[i]=o}return r.delete(t),a}throw new Error("Can't recurse into non-iterable type: "+t)}return n.set(t,a.value),a.value}function i(t,e=o){return function t(e,n,r=new Set){const a=e[0];if(r.has(a))throw new Error("Circular references are not supported.");const s=n(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(c(a)){const s=Array.isArray(a)?[]:{};r.add(a);for(const i in a){const a=t(e.map(t=>t[i]),n,r);s[i]=a}return r.delete(a),s}throw new Error("Can't recurse into non-iterable type: "+a)}return s.value}(t,e)}function o(t){return null===t?null:c(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function u(t,e){const n=new Map;s(t,e,n);for(const a of Array.from(n.keys())){const t=n.get(a);if(r.ee.isPromise(t)){const e=await t;n.set(a,e)}}return s(t,e,n)}function c(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"===typeof t&&!(t instanceof r.Ob))}function l(t){return null==t||(null===(e=t)||"object"!==typeof e&&"function"!==typeof e)||Array.isArray(t)||"object"===typeof t&&t instanceof r.Ob||r.ee.isTypedArray(t);var e}},vlRD:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n("RNiq")}])},w4jT:function(t,e,n){"use strict";n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"d",(function(){return h})),n.d(e,"g",(function(){return p})),n.d(e,"a",(function(){return f})),n.d(e,"b",(function(){return k})),n.d(e,"c",(function(){return r}));var r,a=n("+hG3"),s=n("YSVl"),i=n("vc8R");function o(t){return t instanceof a.Ob?{value:t.clone(),recurse:!1}:Object(i.e)(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class u{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class c extends u{constructor(){super(c.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let r=0;r<n;r++)e[r]=this.get(this.wrap(this.begin+r));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function l(t){return new m(t)}function d(t){return new b(t)}function h(t,e){return new S(t,e)}function p(t,e=r.FAIL){return new C(t,e)}c.INITIAL_CAPACITY=32;class f{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new j(this,t)}filter(t){return new w(this,t)}map(t){return new v(this,t)}mapAsync(t){return new I(this,t)}serialMapAsync(t){return new I(this,t).serial()}flatmap(t){return new N(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t,e=!0){return new x(this,t,e)}columnMajorBatch(t,e=!0,n=i.f){return this.rowMajorBatch(t,e).map(t=>Object(i.d)(t,n))}concatenate(t,e){return new S(l([this,t]),e)}take(t){return t<0||null==t?this:new O(this,t)}skip(t){return t<0||null==t?this:new y(this,t)}prefetch(t){return new T(this,t)}shuffle(t,e){return new A(this,t,e)}serial(){return new g(this)}}class m extends f{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Object(i.b)(e,o)),done:!1};var e}}class b extends f{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: "+t.message,t}}}class g extends f{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class y extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;a.vc(t.value)}return this.upstream.next()}}class O extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class x extends f{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class w extends f{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;a.vc(t.value)}}}class v extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Map"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.Wd.getTensorsInContainer(t.value),n=this.transform(t.value),r=a.Wd.getTensorsInContainer(n);for(const s of e)a.Wd.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class j extends f{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class I extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.Wd.getTensorsInContainer(t.value),n=await this.transform(t.value),r=a.Wd.getTensorsInContainer(n);for(const s of e)a.Wd.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class k extends f{constructor(){super(),this.outputQueue=new c,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class N extends k{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=a.Wd.getTensorsInContainer(t.value),n=this.transform(t.value),r=a.Wd.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of e)a.Wd.isTensorInList(s,r)||s.dispose();return!0}}class S extends f{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(r||(r={}));class C extends f{constructor(t,e=r.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;const a=await Object(i.c)(this.iterators,(function(t){if(t instanceof f){return{value:t.next().then(t=>(e++,t.done&&n++,t.value)),recurse:!1}}return{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class T extends f{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new u(e)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class A extends T{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=s.alea(n||a.ee.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}},"wCH+":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NuWS"),u=n("VO80"),c=n("NclT"),l=n("yRKQ");const d=Object(u.a)({max_:function(t,e=null,n=!1){const u=Object(s.a)(t,"x","max"),d={x:u},h={reductionIndices:e,keepDims:n};return r.a.runKernelFunc((t,r)=>{let a=i.I(e,u.shape);const s=o.f(a,u.rank);let d=u;null!=s&&(d=Object(l.a)(u,s),a=o.g(a.length,d.rank));const h=t.max(d,a);null!=s&&d.dispose();let p=h;if(n){const t=o.e(p.shape,i.I(e,u.shape));p=Object(c.a)(p,t),h.dispose()}return r([u,p]),p},d,null,a.Cb,h)}})},wE5H:function(t,e,n){"use strict";n.d(e,"b",(function(){return o})),n.d(e,"d",(function(){return u})),n.d(e,"f",(function(){return c})),n.d(e,"j",(function(){return l})),n.d(e,"c",(function(){return d})),n.d(e,"e",(function(){return h})),n.d(e,"i",(function(){return p})),n.d(e,"g",(function(){return f})),n.d(e,"h",(function(){return m})),n.d(e,"a",(function(){return b}));var r=n("auKK"),a=n("szMd"),s=n("NNfn"),i=n("dsKV");function o(t){Object(a.b)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function u(){return r.a}function c(){return r.a.memory()}function l(t,e){return r.a.tidy(t,e)}function d(t){Object(i.getTensorsInContainer)(t).forEach(t=>t.dispose())}function h(t){return r.a.keep(t)}function p(t){return r.a.setBackend(t)}function f(){return r.a.ready()}function m(t,e,n=1){return r.a.registerBackend(t,e,n)}function b(){return r.a.backend}Object(s.d)(o)},wFtI:function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return i})),n.d(e,"e",(function(){return o})),n.d(e,"f",(function(){return u})),n.d(e,"g",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"i",(function(){return d})),n.d(e,"j",(function(){return h})),n.d(e,"k",(function(){return p})),n.d(e,"l",(function(){return f})),n.d(e,"n",(function(){return m})),n.d(e,"m",(function(){return b})),n.d(e,"o",(function(){return g})),n.d(e,"r",(function(){return y})),n.d(e,"p",(function(){return O})),n.d(e,"q",(function(){return x})),n.d(e,"s",(function(){return w})),n.d(e,"t",(function(){return v})),n.d(e,"u",(function(){return j})),n.d(e,"v",(function(){return I})),n.d(e,"w",(function(){return k})),n.d(e,"x",(function(){return N})),n.d(e,"y",(function(){return S})),n.d(e,"z",(function(){return C})),n.d(e,"A",(function(){return T})),n.d(e,"B",(function(){return A})),n.d(e,"C",(function(){return E})),n.d(e,"D",(function(){return R})),n.d(e,"E",(function(){return $})),n.d(e,"F",(function(){return F})),n.d(e,"G",(function(){return D})),n.d(e,"H",(function(){return _})),n.d(e,"J",(function(){return M})),n.d(e,"I",(function(){return z})),n.d(e,"K",(function(){return L})),n.d(e,"L",(function(){return B})),n.d(e,"M",(function(){return P})),n.d(e,"N",(function(){return V})),n.d(e,"O",(function(){return W})),n.d(e,"Q",(function(){return U})),n.d(e,"P",(function(){return K})),n.d(e,"R",(function(){return H})),n.d(e,"S",(function(){return G})),n.d(e,"T",(function(){return X})),n.d(e,"V",(function(){return q})),n.d(e,"U",(function(){return Y})),n.d(e,"W",(function(){return J})),n.d(e,"X",(function(){return Z})),n.d(e,"Y",(function(){return Q})),n.d(e,"Z",(function(){return tt})),n.d(e,"ab",(function(){return et})),n.d(e,"bb",(function(){return nt})),n.d(e,"cb",(function(){return rt})),n.d(e,"eb",(function(){return at})),n.d(e,"ib",(function(){return st})),n.d(e,"hb",(function(){return it})),n.d(e,"jb",(function(){return ot})),n.d(e,"kb",(function(){return ut})),n.d(e,"mb",(function(){return ct})),n.d(e,"lb",(function(){return lt})),n.d(e,"nb",(function(){return dt})),n.d(e,"ob",(function(){return ht})),n.d(e,"pb",(function(){return pt})),n.d(e,"qb",(function(){return ft})),n.d(e,"tb",(function(){return mt})),n.d(e,"ub",(function(){return bt})),n.d(e,"vb",(function(){return gt})),n.d(e,"wb",(function(){return yt})),n.d(e,"xb",(function(){return Ot})),n.d(e,"zb",(function(){return xt})),n.d(e,"Ab",(function(){return wt})),n.d(e,"Bb",(function(){return vt})),n.d(e,"yb",(function(){return jt})),n.d(e,"rb",(function(){return It})),n.d(e,"sb",(function(){return kt})),n.d(e,"Cb",(function(){return Nt})),n.d(e,"Ib",(function(){return St})),n.d(e,"Db",(function(){return Ct})),n.d(e,"Gb",(function(){return Tt})),n.d(e,"Eb",(function(){return At})),n.d(e,"Fb",(function(){return Et})),n.d(e,"Hb",(function(){return Rt})),n.d(e,"Jb",(function(){return $t})),n.d(e,"Kb",(function(){return Ft})),n.d(e,"Lb",(function(){return Dt})),n.d(e,"Mb",(function(){return _t})),n.d(e,"Nb",(function(){return Mt})),n.d(e,"Ob",(function(){return zt})),n.d(e,"Pb",(function(){return Lt})),n.d(e,"Tb",(function(){return Bt})),n.d(e,"Qb",(function(){return Pt})),n.d(e,"Rb",(function(){return Vt})),n.d(e,"Sb",(function(){return Wt})),n.d(e,"Vb",(function(){return Ut})),n.d(e,"Ub",(function(){return Kt})),n.d(e,"Wb",(function(){return Ht})),n.d(e,"Xb",(function(){return Gt})),n.d(e,"Yb",(function(){return Xt})),n.d(e,"Zb",(function(){return qt})),n.d(e,"ac",(function(){return Yt})),n.d(e,"bc",(function(){return Jt})),n.d(e,"cc",(function(){return Zt})),n.d(e,"dc",(function(){return Qt})),n.d(e,"fc",(function(){return te})),n.d(e,"ic",(function(){return ee})),n.d(e,"jc",(function(){return ne})),n.d(e,"gc",(function(){return re})),n.d(e,"hc",(function(){return ae})),n.d(e,"ec",(function(){return se})),n.d(e,"kc",(function(){return ie})),n.d(e,"mc",(function(){return oe})),n.d(e,"nc",(function(){return ue})),n.d(e,"oc",(function(){return ce})),n.d(e,"pc",(function(){return le})),n.d(e,"qc",(function(){return de})),n.d(e,"vc",(function(){return he})),n.d(e,"tc",(function(){return pe})),n.d(e,"uc",(function(){return fe})),n.d(e,"sc",(function(){return me})),n.d(e,"rc",(function(){return be})),n.d(e,"xc",(function(){return ge})),n.d(e,"Bc",(function(){return ye})),n.d(e,"Hc",(function(){return Oe})),n.d(e,"yc",(function(){return xe})),n.d(e,"Ac",(function(){return we})),n.d(e,"wc",(function(){return ve})),n.d(e,"Dc",(function(){return je})),n.d(e,"Cc",(function(){return Ie})),n.d(e,"Gc",(function(){return ke})),n.d(e,"zc",(function(){return Ne})),n.d(e,"Fc",(function(){return Se})),n.d(e,"Ic",(function(){return Ce})),n.d(e,"Jc",(function(){return Te})),n.d(e,"Kc",(function(){return Ae})),n.d(e,"Lc",(function(){return Ee})),n.d(e,"Mc",(function(){return Re})),n.d(e,"Nc",(function(){return $e})),n.d(e,"Oc",(function(){return Fe})),n.d(e,"Pc",(function(){return De})),n.d(e,"Qc",(function(){return _e})),n.d(e,"Ec",(function(){return Me})),n.d(e,"db",(function(){return ze})),n.d(e,"lc",(function(){return Le})),n.d(e,"Rc",(function(){return Be})),n.d(e,"fb",(function(){return Pe})),n.d(e,"gb",(function(){return Ve}));const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolBackprop",O="AvgPool3D",x="AvgPool3DBackprop",w="BatchMatMul",v="BatchToSpaceND",j="BroadcastTo",I="Cast",k="Ceil",N="ClipByValue",S="Complex",C="Concat",T="Conv2D",A="Conv2DBackpropFilter",E="Conv2DBackpropInput",R="Conv3D",$="Conv3DBackpropFilterV2",F="Conv3DBackpropInputV2",D="Cos",_="Cosh",M="Cumsum",z="CropAndResize",L="DepthToSpace",B="DepthwiseConv2dNative",P="DepthwiseConv2dNativeBackpropFilter",V="DepthwiseConv2dNativeBackpropInput",W="Dilation2D",U="Dilation2DBackpropInput",K="Dilation2DBackpropFilter",H="Div",G="Elu",X="EluGrad",q="Erf",Y="Equal",J="Exp",Z="Expm1",Q="FFT",tt="Fill",et="FlipLeftRight",nt="Floor",rt="FloorDiv",at="FusedBatchNorm",st="GatherV2",it="GatherNd",ot="Greater",ut="GreaterEqual",ct="Identity",lt="IFFT",dt="Imag",ht="IsFinite",pt="IsInf",ft="IsNan",mt="Less",bt="LessEqual",gt="LinSpace",yt="Log",Ot="Log1p",xt="LogicalAnd",wt="LogicalNot",vt="LogicalOr",jt="LogSoftmax",It="LRN",kt="LRNBackprop",Nt="Max",St="Maximum",Ct="MaxPool",Tt="MaxPoolBackprop",At="MaxPool3D",Et="MaxPool3DBackprop",Rt="MaxPoolWithArgmax",$t="Mean",Ft="Min",Dt="Minimum",_t="MirrorPad",Mt="Mod",zt="Multiply",Lt="Negate",Bt="NotEqual",Pt="NonMaxSuppressionV3",Vt="NonMaxSuppressionV4",Wt="NonMaxSuppressionV5",Ut="OnesLike",Kt="OneHot",Ht="PadV2",Gt="Pow",Xt="Prelu",qt="Prod",Yt="Range",Jt="Real",Zt="Reciprocal",Qt="Relu",te="Reshape",ee="ResizeNearestNeighbor",ne="ResizeNearestNeighborGrad",re="ResizeBilinear",ae="ResizeBilinearGrad",se="Relu6",ie="Reverse",oe="Round",ue="Rsqrt",ce="ScatterNd",le="SelectV2",de="Selu",he="Slice",pe="Sin",fe="Sinh",me="Sign",be="Sigmoid",ge="Softplus",ye="Sqrt",Oe="Sum",xe="SpaceToBatchND",we="SplitV",ve="Softmax",je="SquaredDifference",Ie="Square",ke="Sub",Ne="SparseToDense",Se="StridedSlice",Ce="Tan",Te="Tanh",Ae="Tile",Ee="TopK",Re="Transpose",$e="Unique",Fe="Unpack",De="UnsortedSegmentSum",_e="ZerosLike",Me="Step",ze="FromPixels",Le="RotateWithOffset",Be="_FusedMatMul",Pe="FusedConv2D",Ve="FusedDepthwiseConv2D"},"wI/y":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({clipByValue_:function(t,e,n){const o=Object(s.a)(t,"x","clipByValue");i.b(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`);const u={x:o},c={clipValueMin:e,clipValueMax:n};return r.a.runKernelFunc((t,r)=>{const a=t.clip(o,e,n);return r([o]),a},u,null,a.x,c)}})},wXC5:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.a)({dilation2d_:function(t,e,n,o,c=[1,1],l="NHWC"){const d=Object(s.a)(t,"x","dilation2d"),h=Object(s.a)(e,"filter","dilation2d");i.b(3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+d.rank+"."),i.b(3===h.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+h.rank+"."),i.b("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+l);let p=d,f=!1;3===d.rank&&(p=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:p,filter:h},b={strides:n,pad:o,dilations:c},g=r.a.runKernel(a.O,m,b);return f?Object(u.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},waK1:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.a)({cosh_:function(t){const e=Object(s.a)(t,"x","cosh"),n={x:e};return r.a.runKernelFunc((t,n)=>{const r=t.cosh(e);return n([e]),r},n,null,a.H)}})},wion:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("atXS"),s=n("B3db"),i=n("Wiw4");function o(t,e="float32"){if("complex64"===e){const e=o(t,"float32"),n=Object(i.a)(t,"float32");return Object(s.a)(e,n)}const n=Object(a.D)(Object(a.N)(t),e);return r.a.makeTensor(n,t,e)}},wxQM:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("U45G"),a=n("o/e8"),s=n("parS"),i=n("O7f5"),o=n("VO80"),u=n("/7N0"),c=n("n/2y");const l=Object(o.a)({logSigmoid_:function(t){const e=Object(a.a)(t,"x","logSigmoid");return Object(r.a)(t=>({value:Object(i.a)(Object(c.a)(Object(i.a)(t))),gradFunc:e=>Object(s.a)(e,Object(u.a)(Object(i.a)(t)))}))(e)}})},x3y4:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("UI8N"),u=n("VO80");const c=Object(u.a)({div_:function(t,e){let n=Object(i.a)(t,"a","div"),u=Object(i.a)(e,"b","div");if([n,u]=Object(s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return Object(o.a)(n,u);const c={a:n,b:u};return r.a.runKernelFunc((t,e)=>{const r=t.realDivide(n,u);return e([n,u]),r},c,null,a.R,{})}})},yK2v:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},yLpj:function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(r){"object"===typeof window&&(n=window)}t.exports=n},yRKQ:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.a)({transpose_:function(t,e){const n=Object(s.a)(t,"x","transpose");if(null==e&&(e=n.shape.map((t,e)=>e).reverse()),i.b(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(t=>{i.b(t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e)}),n.rank<=1)return n.clone();const o={x:n},u={perm:e};return r.a.runKernelFunc(t=>t.transpose(n,e),o,null,a.Mc,u)}})},yfHJ:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.a)({pow_:function(t,e){let n=Object(i.a)(t,"base","pow"),o=Object(i.a)(e,"exp","pow");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernelFunc((t,e)=>{const r=t.pow(n,o);return e([n,o,r]),r},u,null,a.Xb)}})},yuCN:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this;e.next=function(){var t,n,r=e.x,a=e.i;return t=r[a],n=(t^=t>>>7)^t<<24,n^=(t=r[a+1&7])^t>>>10,n^=(t=r[a+3&7])^t>>>3,n^=(t=r[a+4&7])^t<<7,t=r[a+7&7],n^=(t^=t<<13)^t<<9,r[a]=n,e.i=a+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xorshift7=u}(0,t,n("B9Yq"))}).call(this,n("YuTi")(t))},zLES:function(t,e,n){"use strict";n.d(e,"a",(function(){return b})),n.d(e,"b",(function(){return g})),n.d(e,"c",(function(){return y})),n.d(e,"d",(function(){return O})),n.d(e,"e",(function(){return x})),n.d(e,"f",(function(){return w})),n.d(e,"g",(function(){return v})),n.d(e,"h",(function(){return j})),n.d(e,"i",(function(){return I}));var r=n("wE5H"),a=n("o/e8"),s=n("atXS"),i=n("kRdc"),o=n("x3y4"),u=n("CfTU"),c=n("8OX7"),l=n("RhH0"),d=n("parS"),h=n("VO80"),p=n("yfHJ"),f=n("QYQ3"),m=n("oAkI");const b=Object(h.a)({addStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","addStrict"),o=Object(a.a)(e,"b","addStrict");return s.e(n.shape,o.shape,"Error in addStrict: "),Object(i.a)(n,o)}}),g=Object(h.a)({divStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","div"),i=Object(a.a)(e,"b","div");return s.e(n.shape,i.shape,"Error in divideStrict: "),Object(o.a)(n,i)}}),y=Object(h.a)({maximumStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","maximumStrict"),i=Object(a.a)(e,"b","maximumStrict");return s.e(n.shape,i.shape,"Error in maximumStrict: "),Object(u.a)(n,i)}}),O=Object(h.a)({minimumStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","minimumStrict"),i=Object(a.a)(e,"b","minimumStrict");return s.e(n.shape,i.shape,"Error in minimumStrict: "),Object(c.a)(n,i)}}),x=Object(h.a)({modStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","modStrict"),i=Object(a.a)(e,"b","modStrict");return s.e(n.shape,i.shape,"Error in modStrict: "),Object(l.a)(n,i)}}),w=Object(h.a)({mulStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","mul"),i=Object(a.a)(e,"b","mul");return s.e(n.shape,i.shape,"Error in multiplyStrict: "),Object(d.a)(n,i)}}),v=Object(h.a)({powStrict_:function(t,e){return Object(r.b)("strict variants of ops have been deprecated and will be removed in future"),s.e(t.shape,e.shape,"Error in powStrict: "),Object(p.a)(t,e)}}),j=Object(h.a)({squaredDifferenceStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","squaredDifferenceStrict"),i=Object(a.a)(e,"b","squaredDifferenceStrict");return s.e(n.shape,i.shape,"Error in squaredDifferenceStrict: "),Object(f.a)(n,i)}}),I=Object(h.a)({subStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","subStrict"),i=Object(a.a)(e,"b","subStrict");return s.e(n.shape,i.shape,"Error in subStrict: "),Object(m.a)(n,i)}})},"zR+/":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("o/e8"),a=n("c9N1"),s=n("VO80");const i=Object(s.a)({conv2dTranspose_:function(t,e,n,s,i,o){const u=Object(r.a)(t,"x","conv2dTranspose"),c=Object(r.a)(e,"filter","conv2dTranspose");return Object(a.a)(n,u,c,s,i,"NHWC",o)}})},zvA9:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.a)({greater_:function(t,e){let n=Object(i.a)(t,"a","greater"),u=Object(i.a)(e,"b","greater");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernelFunc(t=>t.greater(n,u),c,null,a.jb)}})}},[["vlRD",0,2,1]]]);